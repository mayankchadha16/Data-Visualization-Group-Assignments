<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Output' inline='true' name='federated.0wuu1aa04spejk19zr0px047ja3a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Output' name='textscan.13gyzca10bwr2g1g8exct11tiewa'>
            <connection class='textscan' directory='E:/IIITB/Semester 7/DV/Assignment/A1/Data-Visualization-Group-Assignments/A1' filename='Output.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.13gyzca10bwr2g1g8exct11tiewa' name='Output.csv' table='[Output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='County' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='integer' name='Postal Code' ordinal='3' />
            <column datatype='integer' name='Model Year' ordinal='4' />
            <column datatype='string' name='Make' ordinal='5' />
            <column datatype='string' name='Model' ordinal='6' />
            <column datatype='string' name='Electric Vehicle Type' ordinal='7' />
            <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='8' />
            <column datatype='integer' name='Electric Range' ordinal='9' />
            <column datatype='integer' name='Base MSRP' ordinal='10' />
            <column datatype='integer' name='Legislative District' ordinal='11' />
            <column datatype='real' name='Longitude' ordinal='12' />
            <column datatype='real' name='Latitude' ordinal='13' />
            <column datatype='string' name='Electric Utility' ordinal='14' />
            <column datatype='integer' name='2020 Census Tract' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.13gyzca10bwr2g1g8exct11tiewa' name='Output.csv' table='[Output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='County' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='integer' name='Postal Code' ordinal='3' />
            <column datatype='integer' name='Model Year' ordinal='4' />
            <column datatype='string' name='Make' ordinal='5' />
            <column datatype='string' name='Model' ordinal='6' />
            <column datatype='string' name='Electric Vehicle Type' ordinal='7' />
            <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='8' />
            <column datatype='integer' name='Electric Range' ordinal='9' />
            <column datatype='integer' name='Base MSRP' ordinal='10' />
            <column datatype='integer' name='Legislative District' ordinal='11' />
            <column datatype='real' name='Longitude' ordinal='12' />
            <column datatype='real' name='Latitude' ordinal='13' />
            <column datatype='string' name='Electric Utility' ordinal='14' />
            <column datatype='integer' name='2020 Census Tract' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Model Year]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Model Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Make</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Make]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Make</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Vehicle Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electric Vehicle Type]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Electric Vehicle Type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Clean Alternative Fuel Vehicle (CAFV) Eligibility]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Range</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Electric Range]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Electric Range</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base MSRP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Base MSRP]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Base MSRP</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Legislative District</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Legislative District]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Legislative District</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Utility</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electric Utility]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Electric Utility</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020 Census Tract</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2020 Census Tract]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>2020 Census Tract</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='string' name='[Make]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Model Year (bin)' datatype='integer' name='[Model Year (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Model Year]' peg='0' size='5' />
      </column>
      <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
      <column datatype='integer' default-format='*000' name='[Postal Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Output.csv' datatype='table' name='[__tableau_internal_object_id__].[Output.csv_7AEBC21752EC4D979349D6897C77B355]' role='measure' type='quantitative' />
      <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
      <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
      <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
      <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:County:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Postal Code:ok]' type='palette'>
            <map to='#499894'>
              <bucket>98010</bucket>
            </map>
            <map to='#499894'>
              <bucket>98037</bucket>
            </map>
            <map to='#499894'>
              <bucket>98072</bucket>
            </map>
            <map to='#499894'>
              <bucket>98118</bucket>
            </map>
            <map to='#499894'>
              <bucket>98188</bucket>
            </map>
            <map to='#499894'>
              <bucket>98236</bucket>
            </map>
            <map to='#499894'>
              <bucket>98261</bucket>
            </map>
            <map to='#499894'>
              <bucket>98286</bucket>
            </map>
            <map to='#499894'>
              <bucket>98326</bucket>
            </map>
            <map to='#499894'>
              <bucket>98355</bucket>
            </map>
            <map to='#499894'>
              <bucket>98377</bucket>
            </map>
            <map to='#499894'>
              <bucket>98408</bucket>
            </map>
            <map to='#499894'>
              <bucket>98502</bucket>
            </map>
            <map to='#499894'>
              <bucket>98538</bucket>
            </map>
            <map to='#499894'>
              <bucket>98577</bucket>
            </map>
            <map to='#499894'>
              <bucket>98604</bucket>
            </map>
            <map to='#499894'>
              <bucket>98635</bucket>
            </map>
            <map to='#499894'>
              <bucket>98670</bucket>
            </map>
            <map to='#499894'>
              <bucket>98823</bucket>
            </map>
            <map to='#499894'>
              <bucket>98853</bucket>
            </map>
            <map to='#499894'>
              <bucket>98938</bucket>
            </map>
            <map to='#499894'>
              <bucket>99013</bucket>
            </map>
            <map to='#499894'>
              <bucket>99109</bucket>
            </map>
            <map to='#499894'>
              <bucket>99137</bucket>
            </map>
            <map to='#499894'>
              <bucket>99180</bucket>
            </map>
            <map to='#499894'>
              <bucket>99324</bucket>
            </map>
            <map to='#499894'>
              <bucket>99361</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98001</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98028</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98055</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98107</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98148</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98225</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98251</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98276</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98311</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98339</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98368</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98396</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98445</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98528</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98565</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98591</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98620</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98650</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98802</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98844</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98925</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>99001</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>99030</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>99125</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>99163</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>99216</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>99349</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98005</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98032</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98059</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98112</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98166</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98230</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98256</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98281</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98320</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98346</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98373</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98404</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98467</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98533</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98571</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98596</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98626</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98662</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98815</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98848</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98934</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>99006</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>99036</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>99131</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>99170</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>99224</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>99354</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98019</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98042</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98087</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98124</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98203</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98241</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98266</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98294</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98330</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98359</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98383</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98421</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98507</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98547</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98583</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98610</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98641</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98674</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98831</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98858</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98943</bucket>
            </map>
            <map to='#79706e'>
              <bucket>99019</bucket>
            </map>
            <map to='#79706e'>
              <bucket>99114</bucket>
            </map>
            <map to='#79706e'>
              <bucket>99141</bucket>
            </map>
            <map to='#79706e'>
              <bucket>99202</bucket>
            </map>
            <map to='#79706e'>
              <bucket>99336</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98011</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98038</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98074</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98119</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98198</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98237</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98262</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98288</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98327</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98356</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98380</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98409</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98503</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98541</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98579</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98605</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98638</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98671</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98826</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98855</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98940</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>99016</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>99110</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>99138</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>99181</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>99326</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>99362</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98006</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98033</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98065</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98115</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98168</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98232</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98257</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98282</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98321</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98349</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98374</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98405</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98498</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98535</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98572</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98597</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98629</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98663</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98816</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98849</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98935</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>99008</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>99037</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>99133</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>99171</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>99301</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>99356</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98026</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98052</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98105</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98144</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98223</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98249</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98274</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98305</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98337</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98366</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98392</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98443</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98526</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98563</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98589</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98617</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98648</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98686</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98841</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98922</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98952</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>99027</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>99122</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>99159</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>99208</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>99346</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98002</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98029</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98056</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98108</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98155</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98226</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98252</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98277</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98312</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98340</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98370</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98401</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98446</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98530</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98568</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98592</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98621</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98651</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98812</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98845</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98926</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>99003</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>99031</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>99126</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>99166</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>99217</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>99350</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98023</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98050</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98103</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98134</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98220</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98247</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98272</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98303</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98335</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98363</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98390</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98438</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98520</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98557</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98587</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98614</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98645</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98684</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98837</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98903</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98948</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>99025</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>99119</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>99155</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>99206</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>99343</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98007</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98034</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98068</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98116</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98177</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98233</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98258</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98283</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98323</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98351</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98375</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98406</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98499</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98536</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98575</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98601</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98631</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98664</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98821</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98850</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98936</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>99009</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>99039</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>99134</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>99173</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>99320</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>99357</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98020</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98043</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98092</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98125</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98204</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98243</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98267</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98295</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98331</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98360</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98385</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98422</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98512</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98548</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98584</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98611</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98642</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98675</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98832</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98862</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98944</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>99021</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>99115</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>99143</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>99203</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>99337</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98021</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98045</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98101</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98126</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98206</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98244</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98270</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98296</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98332</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98361</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98387</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98424</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98513</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98550</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98585</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98612</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98643</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98682</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98833</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98901</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98946</bucket>
            </map>
            <map to='#d37295'>
              <bucket>99022</bucket>
            </map>
            <map to='#d37295'>
              <bucket>99116</bucket>
            </map>
            <map to='#d37295'>
              <bucket>99147</bucket>
            </map>
            <map to='#d37295'>
              <bucket>99204</bucket>
            </map>
            <map to='#d37295'>
              <bucket>99338</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98024</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98051</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98104</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98136</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98221</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98248</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98273</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98304</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98336</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98365</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98391</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98439</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98524</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98562</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98588</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98616</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98647</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98685</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98840</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98908</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98951</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>99026</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>99121</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>99156</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>99207</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>99344</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98027</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98053</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98106</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98146</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98224</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98250</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98275</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98310</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98338</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98367</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98394</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98444</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98527</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98564</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98590</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98619</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98649</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98801</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98843</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98923</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98953</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>99029</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>99123</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>99161</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>99212</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>99347</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98012</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98039</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98075</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98121</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98199</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98239</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98263</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98290</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98328</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98357</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98381</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98411</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98504</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98542</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98580</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98606</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98639</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98672</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98828</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98856</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98941</bucket>
            </map>
            <map to='#e15759'>
              <bucket>99017</bucket>
            </map>
            <map to='#e15759'>
              <bucket>99111</bucket>
            </map>
            <map to='#e15759'>
              <bucket>99139</bucket>
            </map>
            <map to='#e15759'>
              <bucket>99185</bucket>
            </map>
            <map to='#e15759'>
              <bucket>99328</bucket>
            </map>
            <map to='#e15759'>
              <bucket>99403</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98008</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98036</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98070</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98117</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98178</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98235</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98260</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98284</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98325</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98354</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98376</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98407</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98501</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98537</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98576</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98603</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98632</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98665</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98822</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98851</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98937</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>99011</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>99101</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>99135</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>99179</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>99323</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>99360</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98003</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98030</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98057</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98109</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98158</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98227</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98253</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98279</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98314</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98342</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98371</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98402</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98465</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98531</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98569</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98593</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98624</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98660</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98813</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98846</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98930</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>99004</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>99032</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>99129</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>99167</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>99218</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>99352</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98022</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98047</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98102</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98133</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98208</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98245</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98271</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98297</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98333</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98362</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98388</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98433</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98516</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98555</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98586</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98613</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98644</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98683</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98834</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98902</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98947</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>99023</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>99118</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>99148</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>99205</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>99341</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98014</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98040</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98077</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98122</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98201</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98240</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98264</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98292</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98329</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98358</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98382</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98418</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98506</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98546</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98582</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98607</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98640</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98673</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98830</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98857</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98942</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>99018</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>99113</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>99140</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>99201</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>99330</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98004</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98031</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98058</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98110</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98164</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98229</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98255</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98280</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98315</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98345</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98372</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98403</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98466</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98532</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98570</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98595</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98625</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98661</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98814</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98847</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98932</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>99005</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>99033</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>99130</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>99169</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>99223</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>99353</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;No&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Make:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;CHRYSLER&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RIVIAN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LUCID&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TESLA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BMW&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MITSUBISHI&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;FORD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GENESIS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TH!NK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FIAT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SMART&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AZURE DYNAMICS&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;VOLVO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LEXUS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ALFA ROMEO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MAZDA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TOYOTA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WHEEGO ELECTRIC CARS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BENTLEY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;POLESTAR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HYUNDAI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JEEP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HONDA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JAGUAR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LAND ROVER&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LINCOLN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CHEVROLET&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SUBARU&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;KIA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CADILLAC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PORSCHE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MERCEDES-BENZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NISSAN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FISKER&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;VOLKSWAGEN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AUDI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MINI&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='County' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='Calculation_585468016148455424' />
        <field-sort-custom-order field='Model Year' />
        <field-sort-custom-order field='Make' />
        <field-sort-custom-order field='Model' />
        <field-sort-custom-order field='Electric Vehicle Type' />
        <field-sort-custom-order field='Clean Alternative Fuel Vehicle (CAFV) Eligibility' />
        <field-sort-custom-order field='Electric Range' />
        <field-sort-custom-order field='Base MSRP' />
        <field-sort-custom-order field='Legislative District' />
        <field-sort-custom-order field='Longitude' />
        <field-sort-custom-order field='Latitude' />
        <field-sort-custom-order field='Electric Utility' />
        <field-sort-custom-order field='2020 Census Tract' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Output.csv' id='Output.csv_7AEBC21752EC4D979349D6897C77B355'>
            <properties context=''>
              <relation connection='textscan.13gyzca10bwr2g1g8exct11tiewa' name='Output.csv' table='[Output#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='County' ordinal='0' />
                  <column datatype='string' name='City' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='integer' name='Postal Code' ordinal='3' />
                  <column datatype='integer' name='Model Year' ordinal='4' />
                  <column datatype='string' name='Make' ordinal='5' />
                  <column datatype='string' name='Model' ordinal='6' />
                  <column datatype='string' name='Electric Vehicle Type' ordinal='7' />
                  <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='8' />
                  <column datatype='integer' name='Electric Range' ordinal='9' />
                  <column datatype='integer' name='Base MSRP' ordinal='10' />
                  <column datatype='integer' name='Legislative District' ordinal='11' />
                  <column datatype='real' name='Longitude' ordinal='12' />
                  <column datatype='real' name='Latitude' ordinal='13' />
                  <column datatype='string' name='Electric Utility' ordinal='14' />
                  <column datatype='integer' name='2020 Census Tract' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Base MSRP vs count'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Base MSRP]' role='measure' type='quantitative' />
            <column-instance column='[Base MSRP]' derivation='None' name='[none:Base MSRP:ok]' pivot='key' type='ordinal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Base MSRP:ok]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</cols>
      </table>
      <simple-id uuid='{83979604-1097-462B-9756-AD321530B8A1}' />
    </worksheet>
    <worksheet name='City vs Count Top 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[City]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{AB224893-97ED-4D84-988F-3554E19276BC}' />
    </worksheet>
    <worksheet name='Clean Alt fuel vs count '>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[pcto:sum:2020 Census Tract:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[pcto:sum:2020 Census Tract:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3DE6DD09-EBF9-4D8D-86EF-799115738A0E}' />
    </worksheet>
    <worksheet name='Country vs Count Top 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]</cols>
      </table>
      <simple-id uuid='{F16BE46A-B475-44C6-94E3-2D1BA68E5C29}' />
    </worksheet>
    <worksheet name='Electric Range and Clean Alt fuel vs count'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Range]' derivation='None' name='[none:Electric Range:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Range:qk]</cols>
      </table>
      <simple-id uuid='{E91EC7E7-03B5-428F-9003-19056E4D4E07}' />
    </worksheet>
    <worksheet name='Electric Range vs Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column-instance column='[Electric Range]' derivation='None' name='[none:Electric Range:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Range:qk]</cols>
      </table>
      <simple-id uuid='{535312D3-0567-435B-80AF-DB6EAB88359D}' />
    </worksheet>
    <worksheet name='Electric Range vs Make'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Range]' derivation='Sum' name='[sum:Electric Range:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:Electric Range:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:Electric Range:qk]</cols>
      </table>
      <simple-id uuid='{D8868698-5F59-4260-9389-323A47162E9E}' />
    </worksheet>
    <worksheet name='Electric Vehicle Type distributon Electric Range'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column-instance column='[Electric Range]' derivation='None' name='[none:Electric Range:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>([federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk] * [federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Range:qk])</cols>
      </table>
      <simple-id uuid='{3C5F1BEF-3432-4528-A6DA-D39A97E00B1F}' />
    </worksheet>
    <worksheet name='Electric Vehicle Type vs Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[pcto:sum:2020 Census Tract:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1063' />
            <format attr='height' value='624' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' />
              <wedge-size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]' />
              <size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[pcto:sum:2020 Census Tract:qk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5518D831-30DD-4CA6-AC89-B77DC1C89250}' />
    </worksheet>
    <worksheet name='Make vs Count Bottom 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;TESLA&quot;</bucket>
              <bucket>&quot;NISSAN&quot;</bucket>
              <bucket>&quot;CHEVROLET&quot;</bucket>
              <bucket>&quot;FORD&quot;</bucket>
              <bucket>&quot;BMW&quot;</bucket>
              <bucket>&quot;KIA&quot;</bucket>
              <bucket>&quot;TOYOTA&quot;</bucket>
              <bucket>&quot;VOLKSWAGEN&quot;</bucket>
              <bucket>&quot;VOLVO&quot;</bucket>
              <bucket>&quot;JEEP&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' value='110' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</cols>
      </table>
      <simple-id uuid='{0178FE10-642B-4ADA-8761-B627C3E641F9}' />
    </worksheet>
    <worksheet name='Make vs Count Top 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' value='104' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</cols>
      </table>
      <simple-id uuid='{035D2317-1B13-4D49-9B47-835EAC2F788E}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[Longitude (generated)]' field-type='quantitative' max='-2491469.7819877751' min='-17546525.979544815' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[Latitude (generated)]' field-type='quantitative' max='8960518.7023174055' min='277261.38429628313' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[Latitude (generated)]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7ED345BC-6659-4718-B98C-0445D666072D}' />
    </worksheet>
    <worksheet name='Percentage Acquired by each Make in Circles'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[pcto:sum:2020 Census Tract:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1143' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[pcto:sum:2020 Census Tract:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5E129772-EE2E-4EBC-88DE-D9C35F7E7A12}' />
    </worksheet>
    <worksheet name='Top 10 Make distribution count per top 10 City'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[City]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Make:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;BENTLEY&quot;' />
                    <groupfilter function='member' level='[none:Make:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]</column>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' value='113' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</cols>
      </table>
      <simple-id uuid='{2B4A738C-D646-4D8D-8B13-6357344D4263}' />
    </worksheet>
    <worksheet name='Top 10 Make distribution count per top 10 County'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]</column>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' value='107' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</cols>
      </table>
      <simple-id uuid='{5F822B81-4B7D-4DCD-9BF3-C98E95002E81}' />
    </worksheet>
    <worksheet name='Top 10 Model with Highest Electric Range'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Electric Range]' derivation='Sum' name='[sum:Electric Range:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Electric Range])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;VOLVO&quot;</bucket>
              <bucket>&quot;JEEP&quot;</bucket>
              <bucket>&quot;CHRYSLER&quot;</bucket>
              <bucket>&quot;FORD&quot;</bucket>
              <bucket>&quot;VOLKSWAGEN&quot;</bucket>
              <bucket>&quot;TOYOTA&quot;</bucket>
              <bucket>&quot;AUDI&quot;</bucket>
              <bucket>&quot;BMW&quot;</bucket>
              <bucket>&quot;KIA&quot;</bucket>
              <bucket>&quot;CHEVROLET&quot;</bucket>
              <bucket>&quot;NISSAN&quot;</bucket>
              <bucket>&quot;TESLA&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='575' />
            <format attr='width' value='1126' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
              <wedge-size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]' />
              <size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:Electric Range:qk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3CDFFB71-4875-44E0-8061-368D23DD4B3F}' />
    </worksheet>
    <worksheet name='Top 5 car Make per year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Make:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;WHEEGO ELECTRIC CARS&quot;' />
                    <groupfilter function='member' level='[none:Make:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:ok]'>
            <groupfilter from='2011' function='range' level='[none:Model Year:ok]' to='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:ok]</column>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>([federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:ok] / [federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk])</cols>
        <show-full-range>
          <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[Model Year (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{A383FFBD-1E2F-461E-9B71-C3EC2B5CA7D8}' />
    </worksheet>
    <worksheet name='Year Bins of 5 top 5 car make'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Model Year (bin)' datatype='integer' name='[Model Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Model Year]' peg='0' size='5' />
            </column>
            <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model Year (bin)]' derivation='None' name='[none:Model Year (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year (bin):ok]</cols>
      </table>
      <simple-id uuid='{BC4016A8-1CE2-4E63-BC7E-08116BC663D6}' />
    </worksheet>
    <worksheet name='Year vs Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
            <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:ok]</cols>
      </table>
      <simple-id uuid='{0B34D95F-ED4D-47BC-A343-F9247A50FBFF}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Country vs Count Top 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{66E4DD17-19FB-43A8-86A3-E7774C6B4A7F}' />
    </window>
    <window class='worksheet' name='City vs Count Top 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90128FB6-3F46-4B0C-855C-6D6962401BA7}' />
    </window>
    <window class='worksheet' name='Top 10 Make distribution count per top 10 County'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{62D74AB5-6E45-4FD1-B9D3-E28E8445EB14}' />
    </window>
    <window class='worksheet' name='Top 10 Make distribution count per top 10 City'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F72A3CF-088E-4EF0-A27F-AF4EDD7868C4}' />
    </window>
    <window class='worksheet' name='Top 10 Model with Highest Electric Range'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:Electric Range:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E917746-B431-469E-A879-35B652F706D9}' />
    </window>
    <window class='worksheet' maximized='true' name='Make vs Count Bottom 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{06AD46AB-6D72-47FF-BDA6-F1E3CF624E02}' />
    </window>
    <window class='worksheet' name='Make vs Count Top 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8CA0320B-E6F3-4FA9-BD95-41A402E3C388}' />
    </window>
    <window class='worksheet' name='Percentage Acquired by each Make in Circles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75B5742E-FE6B-4676-A2CB-53C33A2B2A82}' />
    </window>
    <window class='worksheet' name='Electric Vehicle Type vs Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CA894AD-8383-437C-BF40-07E6C25A76B2}' />
    </window>
    <window class='worksheet' name='Electric Range vs Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Range:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7344A786-75A5-490B-922C-CFC1EED69858}' />
    </window>
    <window class='worksheet' name='Electric Range vs Make'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{875A0F0B-0A34-41D4-BA6D-8164F7E791D1}' />
    </window>
    <window class='worksheet' name='Year vs Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3BCC2AB9-0C11-4699-8847-979960C07488}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Postal Code:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D26E0479-1367-432C-AD7E-EB7F48CD56C6}' />
    </window>
    <window class='worksheet' name='Top 5 car Make per year'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:ok]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F75E976A-61B0-427D-895B-B741BEBED746}' />
    </window>
    <window class='worksheet' name='Year Bins of 5 top 5 car make'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F1D80717-9FFE-4B6B-A4B3-8D2E0A1B4296}' />
    </window>
    <window class='worksheet' name='Clean Alt fuel vs count '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A0C60CB-87D9-4723-9490-45C6DE8D1C38}' />
    </window>
    <window class='worksheet' name='Electric Range and Clean Alt fuel vs count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='size' />
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Range:qk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:Electric Range:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54AB937E-D03E-4F12-A9CC-176A7984CFD5}' />
    </window>
    <window class='worksheet' name='Electric Vehicle Type distributon Electric Range'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BE18094-259C-492E-8F66-324EE7FA32F1}' />
    </window>
    <window class='worksheet' name='Base MSRP vs count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Base MSRP:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7E0FCDA-AD69-4A14-9869-61FCAF9247CC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Base MSRP vs count' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='City vs Count Top 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Clean Alt fuel vs count ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAGP0lEQVR4nO3aXW8baR2G8XvGM7YTx0m3oVXaZluasi+sxC4gsRLSIpCQkOAEIfEZ9iPA
      B+KYQwQnoBUKWlVUVOxrt9ltU4e0225eHTv2vHgeDrqliVRX0KX2tvf1O0lmxgf/kXzZM884
      CiEEAabiaQ8ATBMBwFpydCOUmaq9zrRmASbuWADVXkeHv/vVtGYBJo5LIFgjAFgbG8B7mwNJ
      Qe9tDh/uLEtd3y4nMBYwGcm4A7f3S71+7v7f/YOudrOg7yw3tLEbtNsvNejl6hZBb5yf1T87
      h0obiRabkRZrQffSVM2i1N2dQt1C+vn359WOo0meF/BfGX8JFKQHj8iipKafrMyoOxjp72s9
      tduJknpNP1pp6sbGQMvLLb2gSr2s0qfDoOH2QP1Q01wr0Q8WU3V51IavqbEBvHIy0R8+ONDF
      paaW5hOlaazFVqJfv/mCsl6h0/OJGmlNL5+f0dadQw3rid5aritJE7UbNb22lGppPlG7nWiW
      D398TUVHfwox2lpjGRRWWAWCtccEELR6vadCUpGVWl2/vxpUVUF//rCrv94cKM9HeufagW7t
      l7ryWU+bvZE6O7mqycwOfGVjA+jcGer9u4UKBa3eGGjrIJckFXmha1ulzp9MdfnTvgYhUhIF
      DaNIH9zs6/KtgbYGJIBnwyMDqEaV/nS9r36/0OrHB7q2W+qj25m6eVC9kertt07oymd9bQ8r
      /fDijP5xa6hyONLOSJpvxHq/czjp8wCeyCOfA8S1WG//+Bu6eqOvb6+09DNJ797oqxqW2s6l
      y+sDJY2a3jyd6C+f9HVusaFXFyKdKWJtbPY1225M+DSAJ8MqEKyxCgRrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrybGtKJbqrSmNAkzesQBC2dbhF7+Y1izAxB0LoMoyZdc+mdYswMRxDwBrYwKI
      FbdmJUWKZ2cmOhAwScmjd1eqv/Kqyq196fCeaksvK3TvKkQtJSfqytbWJzok8LSMvQTK1jbU
      vHBClRbUWDmr5huvK31xWWGS0wFP2dgAwsG+yt5AIRsoZLmK9Y5Gu3uqX/qWYu4c8JwYcwkk
      SbmGVz+SJPVX35UUpBCpWF8TXwN4XjwmgCPCg3d84M2P58rjL2aSL/tI61LtyEuT9MvtSFG9
      fvy1XB/hGTL+G2B2QQu//Km6v/+j6i9dUnJqQf13/ialLTVfW1FtvqVyL1MUVYqikaL2oqov
      OgpJU9mHH0/wFIAnN+bjOlLj0vn7y535QFUuRaG8f6joq7i3r9HOtqp8pHhuTiEbSHGs2tll
      JaeW1HjpwsROAPgqHh1AXJMUq/7Ni0pfPKfQ/Vyjoqa4mSqaO6XmhZPKN+6o1m4qW1tT1JrT
      4MpVFbfWNer1FTV4eIZnQxTCf+5wlXc29Plvfvvw4MyMQpYrOXtWobenKq+kKig5c1oqMhV3
      d5SeOa3y9qZCnEqjXPHCokJ/TyErp3JCwP/isatAYTCQJJX/2ji2v7i5/vD/zoNjmSSp2tn6
      /00HPGUs2cAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAa
      AcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAa
      AcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAa
      AcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAa
      AcAaAcAaAcAaAcAaAcAaAcAaAcBacnQjnmmq+b3vTmsWYOL+DXTapZirwpjCAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Country vs Count Top 10' width='192'>
      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
      Ej3uFYEzNMUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Electric Range and Clean Alt fuel vs count' width='192'>
      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
      n+oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Electric Range vs Count' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Electric Range vs Make' width='192'>
      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
      aeUVdmEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Electric Vehicle Type distributon Electric Range' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Electric Vehicle Type vs Count' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Make vs Count Bottom 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Make vs Count Top 10' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Percentage Acquired by each Make in Circles' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Make distribution count per top 10 City' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Make distribution count per top 10 County' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Model with Highest Electric Range' width='192'>
      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
      gFsAKoAQwO4t61WP4dq9tA+mqGEA5I4QAvt2tKoewzXLEZjytDAAcm9L6xo0rq7Oi2IOBKK5
      EAMg97wegW/v3KB6DNciaGUA5J4QAm/t3QSPqM7zQRNZPhBDBWpeE8KuLU2qx3CFWwAqmEcI
      fP9b21SP4cp0iu8JpiJ4+fkmbG5pUD1G3ix4GAAVzvB68P6bO1SPkTdH8kXZVCR7tjbjxY1r
      VY+RNwZARWF4Pfj593ZV3RkhBkBFs7VtDb6z5xuqx8gLA6Ci8QiBn739ClaHalSP8swYABVV
      fV0Av3pvj+oxnhkDoKISQuD1l9pwYO8m1aM8EwZARefxCPzi3d1V8bwAA6CSqKvx49c/eR11
      NT7VoyyLAVBJCAFsbKrHBz/eB8NbuatZ5U5GXwuvvfAcfvnublTq5QEGQCUlhMA7+zbjpwde
      Vj3KYzEAKjmPEPjhGy/i/Td3VNw3SfCLsahsHEfi2KUBHD7XD6dCVjsGQGUlpcS5nhF81N6H
      nKX+XWMMgMpOSuBqeBIfHunEwlJW6SwMgJSJxhL4wz86EJ6IK5uBAZBSmZyFw+eu40RHGLZT
      /lWRAZByUkpcDd/DwfY+RGKJsi6bAVDFSGZyOPLZAE52hpHJWWVZJgOginN3egF/P/8Fugci
      sGynpMtiAFSRpJQIT8Rx5LOb6AtPwrRKEwIDoIompcTY1AJOdd3G5/13sZgq7mlTBkBVI5HK
      outmBJeuj2FofLYoxwkMgKqOlEBsIYn+kWn03prEzTszWExmXR0vMACqeqZlIxpLYDg6h9HJ
      eYzdm8fk7BKSmRxMy4HlOHCecI2BAdDXkpQSybSJxVQWqYyJVNaEadn3D6YF4PN6UBPwMQDS
      G58HIK0xANIaAyCtMQDSGgMgrTEA0hoDIK0xANIaAyCtMQDSGgMgrTEA0hoDIK0xANIaAyCt
      MQDSGgMgrTEA0hoDIK0xANIaAyCtMQDSGgMgrTEA0hoDIK0xANIaAyCtMQDSGgMgrTEA0hoD
      IK0xANIaAyCtMQDSGgMgrTEA0hoDIK0xANIaAyCtMQDSGgMgrTEA0hoDIK0xANIaAyCt/R+J
      Q0T03JrQyQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 5 car Make per year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Year Bins of 5 top 5 car make' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Year vs Count' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
