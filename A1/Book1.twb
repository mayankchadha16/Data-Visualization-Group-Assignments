<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Output' inline='true' name='federated.0wuu1aa04spejk19zr0px047ja3a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Output' name='textscan.13gyzca10bwr2g1g8exct11tiewa'>
            <connection class='textscan' directory='D:/Semester 7/DV/Ass1/Data-Visualization-Group-Assignments/A1' filename='Output.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.13gyzca10bwr2g1g8exct11tiewa' name='Output.csv' table='[Output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='County' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='integer' name='Postal Code' ordinal='3' />
            <column datatype='integer' name='Model Year' ordinal='4' />
            <column datatype='string' name='Make' ordinal='5' />
            <column datatype='string' name='Model' ordinal='6' />
            <column datatype='string' name='Electric Vehicle Type' ordinal='7' />
            <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='8' />
            <column datatype='integer' name='Electric Range' ordinal='9' />
            <column datatype='integer' name='Base MSRP' ordinal='10' />
            <column datatype='integer' name='Legislative District' ordinal='11' />
            <column datatype='real' name='Longitude' ordinal='12' />
            <column datatype='real' name='Latitude' ordinal='13' />
            <column datatype='string' name='Electric Utility' ordinal='14' />
            <column datatype='integer' name='2020 Census Tract' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.13gyzca10bwr2g1g8exct11tiewa' name='Output.csv' table='[Output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='County' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='integer' name='Postal Code' ordinal='3' />
            <column datatype='integer' name='Model Year' ordinal='4' />
            <column datatype='string' name='Make' ordinal='5' />
            <column datatype='string' name='Model' ordinal='6' />
            <column datatype='string' name='Electric Vehicle Type' ordinal='7' />
            <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='8' />
            <column datatype='integer' name='Electric Range' ordinal='9' />
            <column datatype='integer' name='Base MSRP' ordinal='10' />
            <column datatype='integer' name='Legislative District' ordinal='11' />
            <column datatype='real' name='Longitude' ordinal='12' />
            <column datatype='real' name='Latitude' ordinal='13' />
            <column datatype='string' name='Electric Utility' ordinal='14' />
            <column datatype='integer' name='2020 Census Tract' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Model Year]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Model Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Make</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Make]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Make</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Vehicle Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electric Vehicle Type]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Electric Vehicle Type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Clean Alternative Fuel Vehicle (CAFV) Eligibility]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Range</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Electric Range]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Electric Range</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base MSRP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Base MSRP]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Base MSRP</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Legislative District</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Legislative District]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Legislative District</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Utility</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electric Utility]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Electric Utility</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020 Census Tract</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2020 Census Tract]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>2020 Census Tract</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='string' name='[Make]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Model Year (bin)' datatype='integer' name='[Model Year (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Model Year]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
      <column datatype='integer' default-format='*000' name='[Postal Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Output.csv' datatype='table' name='[__tableau_internal_object_id__].[Output.csv_7AEBC21752EC4D979349D6897C77B355]' role='measure' type='quantitative' />
      <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
      <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
      <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
      <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Postal Code:ok]' type='palette'>
            <map to='#499894'>
              <bucket>98010</bucket>
            </map>
            <map to='#499894'>
              <bucket>98037</bucket>
            </map>
            <map to='#499894'>
              <bucket>98072</bucket>
            </map>
            <map to='#499894'>
              <bucket>98118</bucket>
            </map>
            <map to='#499894'>
              <bucket>98188</bucket>
            </map>
            <map to='#499894'>
              <bucket>98236</bucket>
            </map>
            <map to='#499894'>
              <bucket>98261</bucket>
            </map>
            <map to='#499894'>
              <bucket>98286</bucket>
            </map>
            <map to='#499894'>
              <bucket>98326</bucket>
            </map>
            <map to='#499894'>
              <bucket>98355</bucket>
            </map>
            <map to='#499894'>
              <bucket>98377</bucket>
            </map>
            <map to='#499894'>
              <bucket>98408</bucket>
            </map>
            <map to='#499894'>
              <bucket>98502</bucket>
            </map>
            <map to='#499894'>
              <bucket>98538</bucket>
            </map>
            <map to='#499894'>
              <bucket>98577</bucket>
            </map>
            <map to='#499894'>
              <bucket>98604</bucket>
            </map>
            <map to='#499894'>
              <bucket>98635</bucket>
            </map>
            <map to='#499894'>
              <bucket>98670</bucket>
            </map>
            <map to='#499894'>
              <bucket>98823</bucket>
            </map>
            <map to='#499894'>
              <bucket>98853</bucket>
            </map>
            <map to='#499894'>
              <bucket>98938</bucket>
            </map>
            <map to='#499894'>
              <bucket>99013</bucket>
            </map>
            <map to='#499894'>
              <bucket>99109</bucket>
            </map>
            <map to='#499894'>
              <bucket>99137</bucket>
            </map>
            <map to='#499894'>
              <bucket>99180</bucket>
            </map>
            <map to='#499894'>
              <bucket>99324</bucket>
            </map>
            <map to='#499894'>
              <bucket>99361</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98001</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98028</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98055</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98107</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98148</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98225</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98251</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98276</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98311</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98339</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98368</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98396</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98445</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98528</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98565</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98591</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98620</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98650</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98802</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98844</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98925</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>99001</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>99030</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>99125</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>99163</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>99216</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>99349</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98005</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98032</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98059</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98112</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98166</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98230</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98256</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98281</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98320</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98346</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98373</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98404</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98467</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98533</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98571</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98596</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98626</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98662</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98815</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98848</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98934</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>99006</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>99036</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>99131</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>99170</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>99224</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>99354</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98019</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98042</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98087</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98124</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98203</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98241</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98266</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98294</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98330</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98359</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98383</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98421</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98507</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98547</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98583</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98610</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98641</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98674</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98831</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98858</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98943</bucket>
            </map>
            <map to='#79706e'>
              <bucket>99019</bucket>
            </map>
            <map to='#79706e'>
              <bucket>99114</bucket>
            </map>
            <map to='#79706e'>
              <bucket>99141</bucket>
            </map>
            <map to='#79706e'>
              <bucket>99202</bucket>
            </map>
            <map to='#79706e'>
              <bucket>99336</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98011</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98038</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98074</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98119</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98198</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98237</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98262</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98288</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98327</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98356</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98380</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98409</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98503</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98541</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98579</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98605</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98638</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98671</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98826</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98855</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98940</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>99016</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>99110</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>99138</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>99181</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>99326</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>99362</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98006</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98033</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98065</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98115</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98168</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98232</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98257</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98282</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98321</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98349</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98374</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98405</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98498</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98535</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98572</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98597</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98629</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98663</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98816</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98849</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98935</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>99008</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>99037</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>99133</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>99171</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>99301</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>99356</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98026</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98052</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98105</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98144</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98223</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98249</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98274</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98305</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98337</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98366</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98392</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98443</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98526</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98563</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98589</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98617</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98648</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98686</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98841</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98922</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98952</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>99027</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>99122</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>99159</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>99208</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>99346</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98002</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98029</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98056</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98108</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98155</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98226</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98252</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98277</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98312</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98340</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98370</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98401</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98446</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98530</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98568</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98592</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98621</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98651</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98812</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98845</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98926</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>99003</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>99031</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>99126</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>99166</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>99217</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>99350</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98023</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98050</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98103</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98134</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98220</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98247</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98272</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98303</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98335</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98363</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98390</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98438</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98520</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98557</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98587</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98614</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98645</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98684</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98837</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98903</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98948</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>99025</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>99119</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>99155</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>99206</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>99343</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98007</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98034</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98068</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98116</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98177</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98233</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98258</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98283</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98323</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98351</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98375</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98406</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98499</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98536</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98575</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98601</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98631</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98664</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98821</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98850</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98936</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>99009</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>99039</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>99134</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>99173</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>99320</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>99357</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98020</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98043</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98092</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98125</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98204</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98243</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98267</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98295</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98331</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98360</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98385</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98422</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98512</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98548</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98584</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98611</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98642</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98675</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98832</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98862</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98944</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>99021</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>99115</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>99143</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>99203</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>99337</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98021</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98045</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98101</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98126</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98206</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98244</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98270</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98296</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98332</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98361</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98387</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98424</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98513</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98550</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98585</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98612</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98643</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98682</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98833</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98901</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98946</bucket>
            </map>
            <map to='#d37295'>
              <bucket>99022</bucket>
            </map>
            <map to='#d37295'>
              <bucket>99116</bucket>
            </map>
            <map to='#d37295'>
              <bucket>99147</bucket>
            </map>
            <map to='#d37295'>
              <bucket>99204</bucket>
            </map>
            <map to='#d37295'>
              <bucket>99338</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98024</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98051</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98104</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98136</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98221</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98248</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98273</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98304</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98336</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98365</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98391</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98439</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98524</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98562</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98588</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98616</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98647</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98685</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98840</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98908</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98951</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>99026</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>99121</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>99156</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>99207</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>99344</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98027</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98053</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98106</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98146</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98224</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98250</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98275</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98310</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98338</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98367</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98394</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98444</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98527</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98564</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98590</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98619</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98649</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98801</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98843</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98923</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98953</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>99029</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>99123</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>99161</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>99212</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>99347</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98012</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98039</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98075</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98121</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98199</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98239</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98263</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98290</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98328</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98357</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98381</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98411</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98504</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98542</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98580</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98606</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98639</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98672</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98828</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98856</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98941</bucket>
            </map>
            <map to='#e15759'>
              <bucket>99017</bucket>
            </map>
            <map to='#e15759'>
              <bucket>99111</bucket>
            </map>
            <map to='#e15759'>
              <bucket>99139</bucket>
            </map>
            <map to='#e15759'>
              <bucket>99185</bucket>
            </map>
            <map to='#e15759'>
              <bucket>99328</bucket>
            </map>
            <map to='#e15759'>
              <bucket>99403</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98008</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98036</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98070</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98117</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98178</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98235</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98260</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98284</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98325</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98354</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98376</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98407</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98501</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98537</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98576</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98603</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98632</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98665</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98822</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98851</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98937</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>99011</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>99101</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>99135</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>99179</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>99323</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>99360</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98003</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98030</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98057</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98109</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98158</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98227</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98253</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98279</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98314</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98342</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98371</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98402</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98465</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98531</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98569</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98593</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98624</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98660</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98813</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98846</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98930</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>99004</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>99032</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>99129</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>99167</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>99218</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>99352</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98022</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98047</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98102</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98133</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98208</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98245</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98271</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98297</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98333</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98362</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98388</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98433</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98516</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98555</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98586</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98613</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98644</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98683</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98834</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98902</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98947</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>99023</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>99118</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>99148</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>99205</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>99341</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98014</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98040</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98077</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98122</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98201</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98240</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98264</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98292</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98329</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98358</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98382</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98418</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98506</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98546</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98582</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98607</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98640</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98673</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98830</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98857</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98942</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>99018</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>99113</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>99140</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>99201</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>99330</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98004</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98031</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98058</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98110</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98164</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98229</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98255</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98280</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98315</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98345</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98372</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98403</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98466</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98532</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98570</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98595</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98625</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98661</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98814</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98847</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98932</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>99005</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>99033</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>99130</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>99169</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>99223</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>99353</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:County:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;No&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Make:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;CHRYSLER&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RIVIAN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LUCID&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TESLA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BMW&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MITSUBISHI&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;FORD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GENESIS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TH!NK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FIAT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SMART&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AZURE DYNAMICS&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;VOLVO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LEXUS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ALFA ROMEO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MAZDA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TOYOTA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WHEEGO ELECTRIC CARS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BENTLEY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;POLESTAR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HYUNDAI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JEEP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HONDA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JAGUAR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LAND ROVER&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LINCOLN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CHEVROLET&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SUBARU&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;KIA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CADILLAC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PORSCHE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MERCEDES-BENZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NISSAN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FISKER&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;VOLKSWAGEN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AUDI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MINI&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='County' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='Calculation_585468016148455424' />
        <field-sort-custom-order field='Model Year' />
        <field-sort-custom-order field='Make' />
        <field-sort-custom-order field='Model' />
        <field-sort-custom-order field='Electric Vehicle Type' />
        <field-sort-custom-order field='Clean Alternative Fuel Vehicle (CAFV) Eligibility' />
        <field-sort-custom-order field='Electric Range' />
        <field-sort-custom-order field='Base MSRP' />
        <field-sort-custom-order field='Legislative District' />
        <field-sort-custom-order field='Longitude' />
        <field-sort-custom-order field='Latitude' />
        <field-sort-custom-order field='Electric Utility' />
        <field-sort-custom-order field='2020 Census Tract' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Output.csv' id='Output.csv_7AEBC21752EC4D979349D6897C77B355'>
            <properties context=''>
              <relation connection='textscan.13gyzca10bwr2g1g8exct11tiewa' name='Output.csv' table='[Output#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='County' ordinal='0' />
                  <column datatype='string' name='City' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='integer' name='Postal Code' ordinal='3' />
                  <column datatype='integer' name='Model Year' ordinal='4' />
                  <column datatype='string' name='Make' ordinal='5' />
                  <column datatype='string' name='Model' ordinal='6' />
                  <column datatype='string' name='Electric Vehicle Type' ordinal='7' />
                  <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='8' />
                  <column datatype='integer' name='Electric Range' ordinal='9' />
                  <column datatype='integer' name='Base MSRP' ordinal='10' />
                  <column datatype='integer' name='Legislative District' ordinal='11' />
                  <column datatype='real' name='Longitude' ordinal='12' />
                  <column datatype='real' name='Latitude' ordinal='13' />
                  <column datatype='string' name='Electric Utility' ordinal='14' />
                  <column datatype='integer' name='2020 Census Tract' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Base MSRP vs count'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Base MSRP]' role='measure' type='quantitative' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Base MSRP]' derivation='None' name='[none:Base MSRP:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Base MSRP:ok]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]</cols>
      </table>
      <simple-id uuid='{83979604-1097-462B-9756-AD321530B8A1}' />
    </worksheet>
    <worksheet name='City vs Count Top 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[City]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{AB224893-97ED-4D84-988F-3554E19276BC}' />
    </worksheet>
    <worksheet name='Clean Alt fuel vs count '>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[pcto:cnt:2020 Census Tract:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[pcto:cnt:2020 Census Tract:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3DE6DD09-EBF9-4D8D-86EF-799115738A0E}' />
    </worksheet>
    <worksheet name='Country vs Count Top 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]</cols>
      </table>
      <simple-id uuid='{F16BE46A-B475-44C6-94E3-2D1BA68E5C29}' />
    </worksheet>
    <worksheet name='Electric Range and Clean Alt fuel vs count'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Range]' derivation='None' name='[none:Electric Range:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Range:qk]</cols>
      </table>
      <simple-id uuid='{E91EC7E7-03B5-428F-9003-19056E4D4E07}' />
    </worksheet>
    <worksheet name='Electric Range vs Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Electric Range]' derivation='None' name='[none:Electric Range:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Range:qk]</cols>
      </table>
      <simple-id uuid='{535312D3-0567-435B-80AF-DB6EAB88359D}' />
    </worksheet>
    <worksheet name='Electric Range vs Make'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[Electric Range]' derivation='Median' name='[med:Electric Range:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Range]' derivation='Sum' name='[sum:Electric Range:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:Electric Range:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[med:Electric Range:qk]</cols>
      </table>
      <simple-id uuid='{D8868698-5F59-4260-9389-323A47162E9E}' />
    </worksheet>
    <worksheet name='Electric Vehicle Type distributon Electric Range'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Electric Range]' derivation='None' name='[none:Electric Range:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]</rows>
        <cols>([federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk] * [federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Range:qk])</cols>
      </table>
      <simple-id uuid='{3C5F1BEF-3432-4528-A6DA-D39A97E00B1F}' />
    </worksheet>
    <worksheet name='Electric Vehicle Type vs Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[pcto:cnt:2020 Census Tract:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1063' />
            <format attr='height' value='624' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' />
              <wedge-size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]' />
              <size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[pcto:cnt:2020 Census Tract:qk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5518D831-30DD-4CA6-AC89-B77DC1C89250}' />
    </worksheet>
    <worksheet name='Make vs Count Bottom 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;TESLA&quot;</bucket>
              <bucket>&quot;NISSAN&quot;</bucket>
              <bucket>&quot;CHEVROLET&quot;</bucket>
              <bucket>&quot;FORD&quot;</bucket>
              <bucket>&quot;BMW&quot;</bucket>
              <bucket>&quot;KIA&quot;</bucket>
              <bucket>&quot;TOYOTA&quot;</bucket>
              <bucket>&quot;VOLKSWAGEN&quot;</bucket>
              <bucket>&quot;VOLVO&quot;</bucket>
              <bucket>&quot;JEEP&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' value='110' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</cols>
      </table>
      <simple-id uuid='{0178FE10-642B-4ADA-8761-B627C3E641F9}' />
    </worksheet>
    <worksheet name='Make vs Count Top 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' value='104' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</cols>
      </table>
      <simple-id uuid='{035D2317-1B13-4D49-9B47-835EAC2F788E}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[Longitude (generated)]' field-type='quantitative' max='-2491469.7819877751' min='-17546525.979544815' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[Latitude (generated)]' field-type='quantitative' max='8960518.7023174055' min='277261.38429628313' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[Latitude (generated)]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7ED345BC-6659-4718-B98C-0445D666072D}' />
    </worksheet>
    <worksheet name='Percentage Acquired by each Make in Circles'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[pcto:cnt:2020 Census Tract:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1143' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[pcto:cnt:2020 Census Tract:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5E129772-EE2E-4EBC-88DE-D9C35F7E7A12}' />
    </worksheet>
    <worksheet name='Sheet 20'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
            <column-instance column='[Electric Range]' derivation='Max' name='[max:Electric Range:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Electric Range]' derivation='None' name='[none:Electric Range:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Range:qk]' included-values='in-range'>
            <min>1</min>
            <max>337</max>
          </filter>
          <filter class='quantitative' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:qk]' included-values='in-range'>
            <min>2011</min>
            <max>2024</max>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Range:qk]</column>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[max:Electric Range:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:qk]</cols>
      </table>
      <simple-id uuid='{30461596-2ED8-450D-AC34-A6C3BA7123BC}' />
    </worksheet>
    <worksheet name='Top 10 Make distribution count per top 10 City'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[City]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Make:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;BENTLEY&quot;' />
                    <groupfilter function='member' level='[none:Make:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]</column>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' value='113' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</cols>
      </table>
      <simple-id uuid='{2B4A738C-D646-4D8D-8B13-6357344D4263}' />
    </worksheet>
    <worksheet name='Top 10 Make distribution count per top 10 County'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]</column>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' value='107' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</cols>
      </table>
      <simple-id uuid='{5F822B81-4B7D-4DCD-9BF3-C98E95002E81}' />
    </worksheet>
    <worksheet name='Top 10 Model with Highest Electric Range'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Electric Range]' derivation='Sum' name='[sum:Electric Range:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Electric Range])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;VOLVO&quot;</bucket>
              <bucket>&quot;JEEP&quot;</bucket>
              <bucket>&quot;CHRYSLER&quot;</bucket>
              <bucket>&quot;FORD&quot;</bucket>
              <bucket>&quot;VOLKSWAGEN&quot;</bucket>
              <bucket>&quot;TOYOTA&quot;</bucket>
              <bucket>&quot;AUDI&quot;</bucket>
              <bucket>&quot;BMW&quot;</bucket>
              <bucket>&quot;KIA&quot;</bucket>
              <bucket>&quot;CHEVROLET&quot;</bucket>
              <bucket>&quot;NISSAN&quot;</bucket>
              <bucket>&quot;TESLA&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='575' />
            <format attr='width' value='1126' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
              <wedge-size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]' />
              <size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:Electric Range:qk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3CDFFB71-4875-44E0-8061-368D23DD4B3F}' />
    </worksheet>
    <worksheet name='Top 5 car Make per year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Evolution of Market Share over years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Model Year (bin)' datatype='integer' name='[Model Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Model Year]' peg='0' size='1' />
            </column>
            <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
            <column-instance column='[Make]' derivation='Count' name='[cnt:Make:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model Year (bin)]' derivation='None' name='[none:Model Year (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Make:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;WHEEGO ELECTRIC CARS&quot;' />
                    <groupfilter function='member' level='[none:Make:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:qk]' included-values='in-range'>
            <min>2011</min>
            <max>2022</max>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:Make:qk]' scope='rows' value='Count of EVs sold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:Make:qk]</rows>
        <cols>([federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year (bin):ok] / [federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk])</cols>
        <show-full-range>
          <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[Model Year (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{A383FFBD-1E2F-461E-9B71-C3EC2B5CA7D8}' />
    </worksheet>
    <worksheet name='Year Bins of 5 top 5 car make'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Model Year (bin)' datatype='integer' name='[Model Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Model Year]' peg='0' size='1' />
            </column>
            <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model Year (bin)]' derivation='None' name='[none:Model Year (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year (bin):ok]</cols>
      </table>
      <simple-id uuid='{BC4016A8-1CE2-4E63-BC7E-08116BC663D6}' />
    </worksheet>
    <worksheet name='Year vs Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:ok]</cols>
      </table>
      <simple-id uuid='{0B34D95F-ED4D-47BC-A343-F9247A50FBFF}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98164' id='7' param='horz' type-v2='layout-flow' w='99048' x='476' y='918'>
            <zone h='98164' id='5' type-v2='layout-basic' w='89519' x='476' y='918'>
              <zone h='98164' id='3' name='Top 5 car Make per year' w='89519' x='476' y='918'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98164' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9529' x='89995' y='918'>
              <zone h='14810' id='8' name='Top 5 car Make per year' pane-specification-id='1' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type-v2='color' w='9529' x='89995' y='918'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='10' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98164' id='9' param='vert' type-v2='layout-flow' w='99048' x='476' y='918'>
                <zone fixed-size='280' h='98164' id='3' is-fixed='true' name='Top 5 car Make per year' w='89519' x='476' y='918'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14810' id='8' name='Top 5 car Make per year' pane-specification-id='1' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type-v2='color' w='9529' x='89995' y='918'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2B15DA7E-4C16-4338-931D-17703546B265}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.14583' source-height='32'>
    <window class='worksheet' name='Country vs Count Top 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{66E4DD17-19FB-43A8-86A3-E7774C6B4A7F}' />
    </window>
    <window class='worksheet' name='City vs Count Top 10'>
      <cards>
        <edge name='left'>
          <strip size='158'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='158'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90128FB6-3F46-4B0C-855C-6D6962401BA7}' />
    </window>
    <window class='worksheet' name='Top 10 Make distribution count per top 10 County'>
      <cards>
        <edge name='left'>
          <strip size='158'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='158'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{62D74AB5-6E45-4FD1-B9D3-E28E8445EB14}' />
    </window>
    <window class='worksheet' name='Top 10 Make distribution count per top 10 City'>
      <cards>
        <edge name='left'>
          <strip size='158'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='158'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F72A3CF-088E-4EF0-A27F-AF4EDD7868C4}' />
    </window>
    <window class='worksheet' name='Top 10 Model with Highest Electric Range'>
      <cards>
        <edge name='left'>
          <strip size='158'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='158'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:Electric Range:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E917746-B431-469E-A879-35B652F706D9}' />
    </window>
    <window class='worksheet' name='Make vs Count Bottom 10'>
      <cards>
        <edge name='left'>
          <strip size='158'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='158'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{06AD46AB-6D72-47FF-BDA6-F1E3CF624E02}' />
    </window>
    <window class='worksheet' name='Make vs Count Top 10'>
      <cards>
        <edge name='left'>
          <strip size='158'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='158'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8CA0320B-E6F3-4FA9-BD95-41A402E3C388}' />
    </window>
    <window class='worksheet' name='Percentage Acquired by each Make in Circles'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75B5742E-FE6B-4676-A2CB-53C33A2B2A82}' />
    </window>
    <window class='worksheet' name='Electric Vehicle Type vs Count'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CA894AD-8383-437C-BF40-07E6C25A76B2}' />
    </window>
    <window class='worksheet' name='Electric Range vs Count'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Range:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7344A786-75A5-490B-922C-CFC1EED69858}' />
    </window>
    <window class='worksheet' name='Electric Range vs Make'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{875A0F0B-0A34-41D4-BA6D-8164F7E791D1}' />
    </window>
    <window class='worksheet' name='Year vs Count'>
      <cards>
        <edge name='left'>
          <strip size='158'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='158'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3BCC2AB9-0C11-4699-8847-979960C07488}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Postal Code:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D26E0479-1367-432C-AD7E-EB7F48CD56C6}' />
    </window>
    <window class='worksheet' name='Top 5 car Make per year'>
      <cards>
        <edge name='left'>
          <strip size='99'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='99'>
            <card pane-specification-id='1' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year (bin):ok]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:ok]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F75E976A-61B0-427D-895B-B741BEBED746}' />
    </window>
    <window class='worksheet' name='Year Bins of 5 top 5 car make'>
      <cards>
        <edge name='left'>
          <strip size='158'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='158'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F1D80717-9FFE-4B6B-A4B3-8D2E0A1B4296}' />
    </window>
    <window class='worksheet' name='Clean Alt fuel vs count '>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='299'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A0C60CB-87D9-4723-9490-45C6DE8D1C38}' />
    </window>
    <window class='worksheet' name='Electric Range and Clean Alt fuel vs count'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='size' />
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Range:qk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:Electric Range:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54AB937E-D03E-4F12-A9CC-176A7984CFD5}' />
    </window>
    <window class='worksheet' name='Electric Vehicle Type distributon Electric Range'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BE18094-259C-492E-8F66-324EE7FA32F1}' />
    </window>
    <window class='worksheet' name='Base MSRP vs count'>
      <cards>
        <edge name='left'>
          <strip size='158'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Base MSRP:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7E0FCDA-AD69-4A14-9869-61FCAF9247CC}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Top 5 car Make per year'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{C5B81B54-FD0C-4870-8D6C-FB523C8329E2}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 20'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Range:qk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A83F9553-83D1-4EE1-9A7B-3A7EDDA1D4D3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Base MSRP vs count' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABDqAAAQ6gGC0wqY
      AAAdCUlEQVR4nO3dWZNb6X3f8S9wsO9AA43e0d3ofeEyJGc45EhjSY5TjuVy7lJxVapSqdzn
      Leg9+D3Ycqy4KnaVypV4RhrNkKPhkL3v+45933G2XIw8UkWxphuNZoPp53MFdpF/nKeJP85z
      fmd5DLqu6wjCHWW87Q0QhNskGkC400QDCHeaaADhThMNINxpogGEO000gHCniQYQ7rRbawBd
      17mJc3DvSs2bqntTNd+lbb0KU9u34Aqq9SYYDG2tqcgKJnN7h3UTNW+q7k3UVBUVo2TE8P/h
      /9VbawBdU9jZWMc/MEa3zwnAX/39K75cP39bmyAIv+etTYEuDrdwhoc52dpAeVtvKgjf4a01
      QKVWx+v1EHDYqL+tNxWE7/DWGsDv9XK0v0uyruB4W28qCN/hrR0DhAaiGFJJ7CPDGAFxDbbQ
      CQy3dT+AruucxPNUGu09IlAUBZOpzcnCDdS8qbo3UVNVVYzGG0iBOmD8t9oAqqq2/RcgyzJm
      s7nja95U3ZuoqSgKkiS1vQE6YfwtHwNoSpP97U32T+PoQL2UpVhT0DWFw91tkrkymiazvb7K
      5u4h6m9+ni3Vvq3xq+XjVt9eENqi5QZQVQV/dy/V2B6ZUpnVr7/gKNPg/HALgyvIxe46pVKC
      pjnE8GAfiaMddLufvY11EYMKHaPlBjBbHeTjRxRkE3abg/npMQyA2+Pl/HCHfC5FsWammDni
      zfI6+XKVUHeIoN0qYlChY7TcAPVyHru/j7DbSLZYI1soUSrmsTgDTIyN4vT14LJKjEajWAwK
      LqeT87NT0nUZeztHIAjX0PoewGZHrpdxhKP0OnWqpi66LXU0g5FqpcLE3Bxetwe5UmR0YpbB
      0Qk8Jp3J2Vmkdo5AEK7hVlOgVK5Md8Dd1rqdkCzcZl2RAr2lFKgdAh4xGRJuV8sNoKsyZ8eH
      nMUz6LpG4vyYi2QWXdeIn59881pTON7f4/D0Ak1TuTg5plBptHP7BeFaWm4ARW5istpJH22Q
      yOSpaBYSpwekM2kamonc6Q7JXIJMRcLncZM82aUoG9haW0Nt5wgE4RqucRDspJqLUWia8Pp8
      eKQGBpuXQCCIQ2qi2gK4JSOVcoLNnQNyxTL9g4OE7BZq311eEN6K1mPQShF/7xjDQTOnJwfs
      JWUmRgcpp884yTQZGx1Ew8Ls3BwWGtjtdlKpFJlaA1s7RyAI19D6HsBiJh0/RfUMEukO4DDW
      2Ds4BosDq17n4PAIyeYifX5M/+gUkbEpDNUc0ZnZ270PUxB+h7gY7pZq3lRdEYO+QzGoINy2
      1mNQTSGViJHKFtB1nWwqQSZXRNc10sk4pWodXVdJxWOU6000pUns4px4KtvO7ReEa2l5/iE3
      61RrTdIHu6jjsxQKVYrZY/I+J3XdTmX/hIDfgWJxUzhZYawvSKLcpKdLnPwSOkfLewCLzYVa
      y1JoSPj8AcIeM5Ldg9thI5dOUC0lqWpm0okYqVyeJlDNZjg9T6C1cQCCcB0t7wEa1TI9I3PY
      pFVOTo4oVQ28NzeJqjR5v3uQ9cUlRkcjWExRlhcWsDk8PHzcz9bCAjJgaeMgBKFVLe8BJJOR
      /a0ViqZuBgNOlHKCV29WaMgyW+tr9E/OYkdmbXmJ6PR93A4LO+srhMemxYdf6BgiBr2lmjdV
      V8SgIgYVhEu7RgyqUsznKJar6JpKPpelVKmh6xqlQp5aQ0bXNfLZLLlC6duf15vijmChc7Qe
      gzaqxBNJ8uk4w1P3yKTTpNJphnsDZMoa9XKFe/cHWd24YCDSg1JKcJKq0pBVnr7/kPbuTAWh
      Na3HoHY3Jq1KoS7h83uRmiVk1YjFJFEuFWiUE6SzMrLeIJ3Jk8nlmZidp8dmotrOEQjCNbTc
      AM16ld7oPPMRJ4fneSLTDxj0WTH5+nj6/iP8/jBur4cPn76PWatiMlkolcrk6w2s7RyBIFxD
      yw1gQGN3bZmM7me4y8TG8gKaK4TXorOxukpoZAKPxcTO6iLecITRiSnyZ3v0jE7Q/jxFEFoj
      YtBbqnlTdUUMKmJQQbi01mNQXaNRr9Foyt886lzXaDZldF2nUa8jK+pvXtdQVA1d06jVatQb
      zfZtvSBcU+sxaK3Mzu4h5WKOqScfUzvfYOW8xuNogINYAbmhMtTrJl5oIMsKMwNBVk8ShEK9
      TEUH2zkGQWhZ6zGow4PTolGWTZgaafK6j/6AA01V0DFgaGRIlr55/kOpVKTSlDEoCo1mUyyO
      IXSMlhtAbtTpH5tnbsDJ7mmWYuacne1tJN8gc1Nj2Bw+JibHmJ6I4nc5cHeFef/p+1DMIp4M
      JHSKlqdAutZkc20No8PHvZkoJqOB1GgKj0VjfX2bruEJbFqd5Y0d+kensCCztryNrz8izgMI
      HUPEoLdU86bqihhUxKCCcGmiAYQ7reX5R7OaZ2Vtm2qlwtyjx6wvLeEKhBkK2tncO0NTNWbn
      hllePcJsszMT6WJ99xSjzcvz9++1cwyC0LJrxKA+Am4LisFGI7lP0+z6ZolKswlFkdGNZjLH
      Sd77/nO6fTYu4kkefvARvVbE1aBCx7jW06EHx+8x2Wsj25DoHRwlaFI4vIgzNveISECibpAo
      lRo06g2sViu1ep2KrIiL4YSO0foqkc0qa0sLpGQHE5MzmPJHFI1OpsfGSR9vUjL6mZ6bIre/
      iiPQx+jYGBd7a7h7B8VN8ULHEDHoLdW8qboiBhUxqCBcmmgA4U67dgxaq9WZf/SIjaVF7L5u
      hoI2tg4uwGjjwXQPr5b2sdpdTA93sbZ9jMnh4+mjuXaOQRBadu0YVDNaqcX3qElO0KFaKeML
      9uDQ8qyvx3nw0XO6PGbOzuM8eP85IZMmlkgSOkbrKZCiMDRxj2jIQrYG/ZExfIY61u4IQbeF
      pmrC55Go1mTkZhOzxUyj2aSuKGKhbKFjtH45dL3I8sIbEnULY9OzaMldcroVt1Hl/Owc32CU
      sclxkpuLmFwhotEox1tLWIN94mpQoWOIGPSWat5UXRGDihhUEC5NNIBwp107Bq03ZMaiw+wd
      nyGZ7UwNdbG5d4rB7GBiwMP2UQKTzc3MgI+vtw7wB/t4MB1t5xgEoWXXjEGtYLRQzWXpHhrB
      olaJJVOE+odxawX2zvP0DY+iNgpk8wXQjbhdLnFTvNAxWm4ATdMYnpxnKCBh6hnD3ixTaSgM
      jU5j02sUaxqTc7MYaiWaTZXQ0Dgff/Qh5YsTcVO80DFaXyOsnGVt6wAkC7NWmbVUmq7eCGa9
      TjKZwjsQxSGX2E6n6RmM0iwlWT04x+oNihhU6BgiBr2lmjdVV8SgIgYVhEsTDSDcadeaf5TS
      F3y1ecr3H46xsLZHU5eYi/axe3hKIZvj0YdP2FjdxOYOMB0JsLy+j80b4r35iXZtvyBcS+sp
      kFzjMF4g5HdgcfoJuMyYTGbcXb08eXSPUH+E8vEJM0+f47aqHJ2cM//4Q9xqjXo7RyAI19By
      A2TjZ+TzOfZ29kiX6ozPPsAryVSaComTI8KDESQJVO2bA16DwYCu62i6LhbIEzpGy1Og4OA4
      3x8c5/j4CGszz1evTtElGxMWIynVzJjPgeYY4+vXL7H7e5iK+llc/ApnsF/EoELHEDHoLdW8
      qboiBhUxqCBcmmgA4U67VgNUcgl+8fI1oFNOnfDLV6voqszSrz/nOFlAqeV58fkL3qxuUy2k
      ePniBUsb++JiOKFjtL5Intpg/zSF321FUxvsnZcIOIxoqkp3uBu5oRDbO2Tig2c4pSaHRyfM
      PnqKvVkWMajQMVo+Ak2dH5EtFMikkkjNKvkGZGLnDI5MYLeZqSrt3ExBuBktN0D30CTdQ5Mc
      HB4wOjIKwMHBIXa9xJutA6oGB4/vT7D56iU2b4jpkR6W3vwaR6AXW9s2XxCuR8Sgt1TzpuqK
      GFTEoIJwaaIBhDvtWg1QK6b5/KsFNKXBy88+5fXyBorcYOn1KxZWtpEbJb784gVL63vUyxm+
      fPmC1e2jNm26IFzfNWLQJntHMVwOM2otSb5upaenh2zsiIZuxh/wkdjdI/rkGVZDlf2DY2Ye
      PsVczYsYVOgYLTdAo15neHwSsxF0ycvTp/e4ONikIetY3AFq8T1yioFapYbcVDAZDdTqdZqa
      JuZdQsdo+bNoc3pw2y2Eu3swGiXODrbxdA/RPzyGhyKau4+ZuRnKp5u4Q0OMTU6ROtrCPzAs
      lkgSOoaIQW+p5k3VFTGoiEEF4dJEAwh3WsvzD72Z559/uYA/GGQy2s/65i61hsqj+1Osrm1i
      94SYHffxi1+sER4aIBK0srYjVooXOkvrC2Q0mpisJowmMzZ3gAdzk3g8bnKpGJrBhK7JNEtV
      jA47JpOZVDojVooXOk7LDWC0eXn24TO6zVUukilWdy6Yn5/DabfTNzxOj10mQ5AffO8pajUL
      BkmsFC90nNZPhGkyO+vLZHUPfqlOvV5mcWkVV/cASu6UjOqm266wuvgaqzdMdGxcrBQvdBwR
      g95SzZuqK2JQEYMKwqWJBhDutNZjULnAp58t4A10MTnWz/rGLnVZZ3Kkh4OTuFgpXngntB6D
      1urokhGLzY7dFeC9e7N4XA4atYpYKV54Z7TcAJIjwMff+4iAocB5OsPyxiHTs3MMjUyKleKF
      d0bLDaDKNdaXF0jJTrx6iWqjxsrKGpVaRawUL7wzRAx6SzVvqq6IQUUMKgiXJhpAuNNaj0GV
      Ep/9agGXz89UtJ+1zT3qKjz74AnFxBErRxk+uhfhy8UdrE4v05EAq5uHWNxdPHkw3c4xCELL
      Wo9BKxWauobd6cbu9hNwmTCZLKj1EvGiRshrI7Z/zvyz5/gcBk7PYtx78gw/TRGDCh2j5QYw
      uUP86Acf49UyXBQVxmYeErCoHJ+dUMil2d3ZpyzLNJsamqoiSRKqqiKLm+KFDtLyFEiulVjf
      2EGV7IyrOV6/PsJgdvJwfJYpycDZ6Sl94QBvFl5hD/QxMeBleeUNru4BbCAekS50BBGD3lLN
      m6orYlARgwrCpYkGEO60a8SgZb74YgG7x8f8/XnqqSNeHxb5YLKb1e0jjFY3D2f7efGrZXy9
      vYz1eVnZECvFC53lGjFokbKs4PL6kbQqR6kGIbeJXCZF38gUPr1IIpGijAmvz08iHhMrxQsd
      p+UGsHj7+NM//gGuZoLltT0KpQK729s4e8ZRCnGShRrungn+/N88p5g8oaHoYqV4oeO0PAWq
      l7Osre+iGCy89/geFqOBo+NjnMY6B/kCnr5RpOIFXx2cIlndTI32sCRWihc6jIhBb6nmTdUV
      MaiIQQXh0kQDCHda6zGoWuHliwWsLi+zc+O8efESW6CXsX4/2/snlAtFHj59wubyOjZfkOmh
      AEtrOzj8PdyfibZzDILQstZj0FKeXK2JtyuEqZ4iXYauYAhvsJf3H98nEO6jfCxWihc6W8sN
      YPb28Wd/8kOs5TOS9PEXP/4h1eQxpbpC4vSI7oFhEXcKHa/lKVCjkmNtfRdZNzGtZHn19SGa
      0YrdbCBWNzAecaI5RnklVooXOpiIQW+p5k3VFTGoiEEF4dJEAwh3WuvzD7XKr79cxORwMzXW
      x+r6HjZXgMlIgNWNPcyuAPfHe3n19Qp2f5ipiJ/FlS1cXf3MTw63bwSCcA2tx6DlPEVFJ9TT
      S+bohJH7j7DpZfYPj4lMPcCr5llbEyvFC53tGjfF9/C9D95DSR9gGpwktb3MaSLH4OgEqaMN
      ThI5dA0kIxgMBnRdx2AwYDQYxP3AQsdouQEa1TzrK6skygY8UpNqUyEQ7sdqUGg0mrh7hpmZ
      ibD56xeUGiaGIwOsvv6SsskhYlChY4gY9JZq3lRdEYOKGFQQLk00gHCntT7/0BW2Vlepalbm
      H8yg5uMsHuV5byzM6sYOFk+ImWiIVy+XsHd1Mz0SZmV1E3dokOnoQBuHIAita3kPUEyekW8a
      CXYHkbQm20cp7JJC/PyEgYl7OOppksk4dYuPwYF+Lk6PGZ9/jF5IiRhU6BitnweQFRwuD83c
      Ma9fLZAsFNnf2cERipA4WOcsmcXsjXB/oo/9nQ1qzW8OpMxGI1o7RyAI19DyFMgX6mH/dIWy
      DrMPP8Brl9ja3sFj1TmWFeyhIaz1NJsHpyhY6O8Ls/L6JVZ3kLF2jkAQrkHEoLdU86bqihhU
      xKCCcGnt/fq9ooOLHIWqDMDcSAi7tf3fsoLwh1wjBlXZ21ynJJuZnuxnfXULu7+HaJ+X9Y0d
      bL4wU5EgS4urOLr6ifZ5WFndxBMeYjzSC8Dff77Fl+vnAPzVf/tThsLetgxKEC6r5SlQKXVO
      rinR2xcmsbtP38wD9Eqa/f19+sbmMJXi7GztEZ5+iFJJsb9/QGT6AY10jEY7RyAI19D6xXDN
      BpLRRPZ8B7oGiW0scZbI0t0fIba3xkUqQ7ms4nCYMVssyLKM1WLBZjKhtnMEgnANLTeAP9hD
      s5wmV1ZwWgzImoYn0I3DYkRVVSyBAWZneln+4gWZksLgQA9Lr16QViXs7RyBIFxDy8cAks3N
      02fPv/1zMNj17evHHzz99vUffdzz7evvhQa/fS3uCRA6wa2fB5Ak6bcb04acuROy5dusK84D
      XK3mrcag0J4PvSC0quUGqBZSrG8dICsK0w8ec7j6NZo9wP3pKDuba0juMKO9btbWd/CGIwwF
      LCysbWH1hHgwLZ4NKnSGlg+CHd4QT95/gtvpxKZnUcxhpiei5OInuHqimMpxFtf2GJl7QCl1
      TDKRwts9wOToUDu3XxCu5VqXQlRyMczeHqwWLwEPLC8tkinXcdjteFxmwv1D7C4vcpEu4gwE
      MSk1ll4vIbdr6wXhmq7RADqHxzEiQ2Ea1TKZXJaGotMbDrG59BVbFw1CLtDQ8Ae60RplMtks
      Mgbx0FyhY1wjBdLR9d8+8uS3FfnOjPNf/o24GvTd2FaRAv0/GfiX38fv/WLEV7zwjhCXQwt3
      WssNoCkNNlYWWds6QNV00md7JItNdF0neXZMulhDV5usL73h8DyFKtdYXXzDSSLbzu0XhGtp
      uQHKmTiavQupkiRXrZI8OyZelFEbVWKxM3KFKumjHZyD0xQSxxzu7RIaniJzfECznSMQhGto
      uQGMZgvVfJKqJiFJNkYjvRgAk83J0MA3r4v5Jv6AA4fTQbVWx+l04LVaRQwqdIyWD4JVRUZV
      ddDq1Ep5DnYOudBq9LtG2N3ZJ697eG+im+UvXyNJBiYGQ6wtvkY3Whhp5wgE4Rpaj0F1nWaz
      gW6QsJiM1OoNwIDFYkZuNtENBqxWG6rcwCCZMUtGGo0GktmCSTKKGPSG6ooY9G3FoAYDFutv
      n/PscDh+W/R3PtTS7/wdq008F1roLCIGFe60lhtAV2W215fZ3DtBVZpsLC9wEs+i6zr5ZIxc
      uY6uKWytLnKayKGpDTZ+c12QIHSK1p8NmjpHdXQjFc9ZXd7AF50lHzugXC6xt7dDKlche7yN
      uWec9Nkuh7s7+AbGiO1vixRI6BitL5Fks5OPHX7zZIjBbg5XFrhIZFFNdqIjgxiBfKZBMOjC
      6XJRqVZxu1347TbxVAihY7R8ENys1zDbXJiUEio2gsEARsmCRa+ze3JGTisyN+RlY2EVlAaj
      fV3sbKzRbKoMt3EAgnAd14pBy6UCumTFZbdQKBSwOT2YjRqFQgndYMTj8dKoFpGsTuwWiVKx
      iNnuwmYxiRj0huqKGPRqNW/1pnhZljEa2xtE/d832ndqzZuqexM1NU3DYDC0vQE6Yfy3elO8
      0Whs+x4AeGdq3lTddtdUVRWj0XgjDzC47fHf6nmAm/iFvis1b6ruu1LzpupeteatTYEEoROI
      M8HCnXbrD8baW18gkavSPzZLs5CgP+TlJK8zNdp3qTsry9k4n75a58f/9oec7a5xmirQPTiB
      Vs8y3Btk96LC7ESEq+wZs7Ejdk4SYHIS7baydZLCF+zHbaoRCvexfxxnfmbiSjU1pcHayjKV
      ao2hmUdcbC7QMFiYmx4jXZax1DLYeifodlsuXxTQ5Br/+5PPePq9P+J4c5FSQ2V87jG5xDF+
      m5G6LcxQt+dKNau5BK+WN/F2DzAWNLO4c47TG6Tfq2HxRzg5PODe/CzGq8w2dJ29jSUyFZnx
      mXucbCxQkXUm5x6QTcXxmBQUdz8DXa4rFFXZXl0mWyiiu3oJGIpkyzWGJh9RyZ4S9jpIN+2M
      DYb+1Qq3vgcoNnWePXtMMZEkEzvk12snTIxc7sMPYHb46A15QId0RebZsw+p5RIUU2f86ust
      JseHrvRBBfD3RLg3PYbVLHGaLvH82YdQz1MppPnVyzcMR0evXNNoshIOBlA1A6ZqDEv/PPej
      /aSyeXbXXpOWnVf+8IPO/u4eA8NDaJUcmquP9x/dIx075+xgjd1Eg4GQ+4o1oVYtoOgm3G4X
      BxdZnj3/EDc1SqUin3/+goGRsat9+AFdUzmLxTAaTRhqafAN8fj+DKl4nJO9FQ7SKv0B5xW3
      VGJy/j2GekKMDoapGp08e/Yh2Ytjkqe7LO+lGBkI/sEKt94ABh00VUEzGPEE+xnwmchXL3+x
      hNVm+3YQRkDVFDTdiN0XZrzHRap49UVZS6kzdk6zzM5OYsKAomuomo7F4WUm2kcqe/XrmXRd
      I9g/yvx0H8lkGa3ZRFa+iYEj4zOotTzqVQ/H1BrxRJrj/T2O4mk0VUVTmugGE+HBcZyGOnX5
      6mty+nui/PDjZxRip2AARdVRVA2T1c78zDjJVObKNTGAy9fNg7kIB/sX6IqCqjbBINEbmcCm
      V2moVz8c1eUqiYqRsM8Omo6mNtAw4e+J0O00UKopf/DfSz/5yU9+cvXRtI9RrrK2c8zI+Dgm
      dEbGRomdxfD7fZf6lo0d73J0FqPShIGQk9X1PQaiE1gkiETHSZ6d4vcHrvSNHTs9JFcsky/V
      iQ51sbS0Qah/BKdVontgmHIqhtsfuNK3oCrXWFteIpGpMjJ7n0Zih3hZIxrpB6OFSMhBsgwe
      p/XyRY1mIiMj+P1eevuGUEsx9s8yjE9PgqowMtRDIlPF53F8d63fUcrGWV3fwuzuYma0h4WF
      ZVyhAbpcFjyhQZRCEqcvgHSF8RswoDdKbO/HiEzPYyxfcBgrMD45hq5pjAyGiGfr+NxXe3h+
      KZ/G6Q/jdNjQqlk2dk8Zn5nFoCkMDw+SSGTx+/71vaBIgYQ77danQIJwm0QDCHeaaADhThMN
      INxpogGEtyobO+STTz+nVP/uqDsfOyRX+/2Mplk856//+h8oKypyrcgXv/iE/fM0mlzl808/
      IVmo0Shn+ezTf+YkWUCpF/nlJ5+S/U283ihn+eUnn3CeKd3+mWDh7tAqMf77z1/zn//yx8hy
      kf/1yQtURzePBk3kXDPkdhfxeuEkXkU1uWjufkKy6/v8p3//HL2U5Befv8LVM4Ll/AVnlX4A
      suk0M4+e8Lc//RnDfjP3/vjP+Z9/93f8yY+e8/DJe/zN3/4D3Q6N7/27P+NnP/0Z//W//Ed+
      +tN/5C/+8j9g0hSxBxDenuLFHr6RGWx2O8mtJZyjj3Fm99g6OSdVkjk5PCKRjDM0+4Ds6THR
      4QgffPQRdpPE8tcvmPzgR6R2VukZHeb+06e4TBLBcJhXn/6c6fc+JFnT6Pf78Fh0/KEQn/3T
      z7n/wVNKTYmgL4jD0ETRoe4ZxuewYSofiQYQ3h7P0Bz1o0U2N7bB5SV+uM15WSfksXJ+tEeh
      XAOD4Tf3HoDT4+F4fw9Z0wgGu9jfWqNisPC7pwq//Kf/QdHWz1DYx0TIxcuFBWqShxf/+DcQ
      nKA34KHfb+L14ms0VwizAULqKUvrm6TqkjgRJrxdtVKOWLpI/2A/hWQMg91H0G3h+CyB0+XC
      bpMwW51Uy2V8HgfHp3EGhgaR0IidneIIhHFKCnWDHbfNRCEdJ5krIdlcjPQFOTk5Jdg7SKOY
      IlOoYHF4GAz7ODm5IDw4hN0soTSrnJ3FCfT0iwYQ7jYxBRLutP8DW/puIlLzFtoAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='City vs Count Top 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Clean Alt fuel vs count ' width='192'>
      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
      2urfXDznUlLjrRQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Country vs Count Top 10' width='192'>
      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
      Ej3uFYEzNMUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      /wExyMbY+BZEPgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Electric Range and Clean Alt fuel vs count' width='192'>
      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
      jEQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Electric Range vs Count' width='192'>
      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
      QLjQ/H/kMY1cgl4uCgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Electric Range vs Make' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Electric Vehicle Type distributon Electric Range' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Electric Vehicle Type vs Count' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABDqAAAQ6gGC0wqY
      AAATbElEQVR4nO3daWwc93mA8WdmdnnsckmKt2hRpA5LPuLIrGRZtevYRmM7kS0kLQr0QBsk
      QD4E/lKgKIICTdKiddN+adG0CdqiSZPYSYAg8dHYkV2ZcmzZMh2KInV4RYkmKZHmsaRI7kVy
      jzn+/SBblmKSIqndnT3eHyDA0K7JV8t9ONfOjKaUUghRonS3BxDCTR63BxClQVlpVGIOlVpA
      JSKoZBSVjIK5iLKSYNvgmETSHl5O3ofXY1Dm0fF4DCq8Bv7KMqr95fgrvPgqvNT4K6iqLLvp
      uSQAkRFKKXAs1OIszuwg9twQKvo+TnQCJz6FWpgBxwLHBmWv+HXmrQaeD9et+LimgaHrGLqG
      v7KMplo/TZuu/GlvrmFLYzW3NAbwGgaaBpqmrTq3BCA2RFkp1NIc9nQQe6IPZzqIE30ftXg5
      u99XgWU7WDakzATzsQTnx2ave47Xo9NaH2Bb6ybuaG9k5y2b2FwfwFfh/djXkwDEmijloGIT
      2BN9WJeOY08HUdHxVX+bu8W0HEano4xOR3m9/xIaUFNVQUdLLXdua6Tz1hbam2sp8xposhdI
      rEQ5FvbUGazho9jjvThzQ2Clsvo9x60G/ir8lax+D13X2BSo4K7tzbIEEB9RSoFtYs+cw3rv
      CNZQFyo2BRTX70jHUcxFE7zef0kCEKAcGycyinXhZcyBF6+s2pQICaCEKTOBNfwaZvB57Ik+
      sNNuj5RzEkAJchZnMYPPY777bEn9tl+OBFAilFKo6Djp/h9hBp8DM+H2SHlBAihyV9/4J3+A
      ee4XYMkb/1oSQBFz4iHSvT/APPc8pBfdHicvFX0Apmly7Ngxbr/9dgAGBgb41Kc+haZpdHV1
      kU6neeSRR+jr66OtrY25uTm2bdtGMpmkubn5hofS85Eyk6R7v0e67xlIL7g9Tl4r+k+DxmIx
      Ojs76e3tJZ1O09raynvvvYfH4+Gxxx7D7/fT39+P1+ulrKyMaDTK8ePHOXfuHKZpuj3+uigr
      hRl8gcWnP0f6nf+QN/8aFH0AFRUVdHd3c99995FMJpmZmWH37t0AhMNhfD4fsVgM27bp7u5G
      0zQSiQSXL1+mu7vb5enXRimFffk8iReeJHnka6jYhNsjFYyiXwUaGhoiGo1y8eJFhoaG8Pl8
      TE9PYxgGU1NT7Nmzh2QySVdXF21tbezatYtYLMbZs2epq1v5U4n5QqWXSJ/4Lun+Z2TPzgbI
      Z4EKlFIKZ+o0yaN/jzN7we1xMiYXnwW6VtEvAYqRstKk3/kO6b6nwS6s7ZR8k7NtgGg0Sk9P
      D+FwmJGRkRWf5zgO09PT1/3d4uIitm0Ti8Wue96lS5eue14oFLr63yMjIyilOHfuHCdOnGB2
      dpa5ubmPfb9YLMa1C8Frv4ZSikgkglKKaDR63dde7Xte+/+/8847hEIhTpw4QSKRIBaL4TgO
      8XicCxcu0Nvby8zMDLZtE4/HOXXqFPF4fMXXx54bIfHCV0if+J68+TMgZ0uAoaEhAoEAb7zx
      BtXV1ZimSXt7O6FQiMHBQVKpFAcPHgSuxHLixAksy+LQoUMMDAywa9cuent7aWlpYceOHZw/
      f55jx46xa9cu2tvbGR0dZevWrXg8Ht588010Xae9vZ2RkRH27dtHPB4nmUzS09NDS0sLpmkS
      DocZGBjgwIED2LZNeXk5gUCAiYkJZmdneeSRR3jrrbd48MEHOX36NI7joGka4XCY06dPc+DA
      AaLRKCMjI6RSKZRSeL1eent7eeCBB/B6vei6zrlz59ixYwddXV0EAgHuu+8+Tp8+TTgc5p57
      7iEUChGPxxkeHmb//v0Eg0EOHDhw3eunlMK68DLJ156CVGy5l1hsQM6WAJZl0d/fz5YtWwCY
      nJzENE0uXrxIIBCgpqaG/v5+xsbGCIVC+P1+mpubSafTpFIpDh8+zJkzZ6itreXo0aMYhsGe
      PXuorKwkGAyyf/9+pqamCAaDPP744wQCAQDGx8fp6+vDcRxGR0eZmJhgfHycSCTCo48+Smdn
      J/fccw/j4+Ps3buXiYkJ5ubmePTRR9E0jdraWnp6erjlllsIBoOMj49TXV3Nww8/zOTkJOPj
      4yQSCR566CE0TePtt9/GcRwmJycJhUK0traytLREX18fO3fuZGBggJdeeomlpSWmpqY4efIk
      27dvZ3BwEE3TqKmpYWlp6brXTlkpUkf/juTLX5U3f4blLIBAIMATTzzBvn378Pl8lJWV8cor
      r1BVVcXQ0BDBYJC7776bLVu2UFlZid/vp7Ky8uqb4oknnuDAgQO0tLQQCoXYvn07w8PDzMzM
      0N7ejt/vx+fz0dTUxIsvvojjOAD4fD4cx8EwDFpbW/F6vdTV1WHbNl1dXei6Tk9PDx0dHWia
      hs/nA+DIkSMopejs7OTChQu0tbVRU1NDXV0dPp8PwzCoqKigqqqKRCLB66+/TmVlJe3t7Sil
      qKmpobW1lfHxcVpaWjh06BC7d+9m7969HDp0iPr6enw+H0opNE1jcXGRnTt3Eo1G8fv9V183
      JzZJ4oUnMc/+LFc/qpLi+l4gx3E4fPgwmqZx8ODBGx55DYVCDA8Pc//99+dowo1TStHb28u+
      ffvWfEQ5GAzS0dGB3+/HmjxF8uWvomKTWZ40f+R6L5DrAYiPU0phDR0l2fUNSJbWKo/sBi1x
      yrEx+39M6q1/uXIZEZFVEkAeUbZJ6u1vY578PijH7XFKggSQJ5Rjk/rVP2CefZZiOwk9n0kA
      eUDZ1gdv/p+7PUrJkQBcpqw0ya6/xRr4hdujlKSi/zh0PlO2Ser1f5Q3v4skAJcoxyb1+j/J
      AS6XSQAuUI5N6vi/Yp75qdujlDwJIMeUUpj9P8I8+UO3RxFIADn14RHe1PF/k/38eUICyCFn
      Okjy1a+Dnd0rLIu1kwByxIlNkXjpLyC18skuIvckgBxQZoLkka+j4qXzqc5CIQFkmVIOqe7v
      YL//jtujiGVIAFmklMIaPILZ94zbo4gVSABZ5ERGSb76jby8j5a4QgLIEmWlSL32FJhLN36y
      cI0EkCXpvqexx2S9P99JAFlgTfSR/vV/uj2GWAMJIMOUmSD1q29m/XaiIjMkgAxL9z2Dc/m8
      22OINZIAMsiev3jlkoWiYEgAGXLltMZvgim3IiokEkCGWMOvyV6fAiQBZIBKLZDu/g5yNYfC
      IwHcJKUU6TM/xZkfdnsUsQESwE1Si5cxe7/v9hhigySAm5Tu+yEqGXF7DLFBEsBNcOIhzHef
      c3sMcRMkgA1SSl25R5ec4VXQJIANUrEJzHefdXsMcZMkgA0yz/4M0nLQq9BJABugkjHM4Atu
      jyEyQAJYJ6UU5sCLqKWP33JVFB4JYL2UTfrUT9yeQmSIBLBO1sU3UZFRt8cQGSIBrINSCkvW
      /YuKBLAOaiGENXrc7TFEBkkA62AO/BKspNtjiAySANZI2WmsCy+7PYbIMAlgjZy5EZy5IbfH
      EBkmAayRNdQlV3grQhLAGijbxBp+ze0xRBZIAGvghC/hzL7n9hgiCySANbCGjiLn+xYnCWAN
      7LFut0cQWSIB3IBKxrBDZ90eQ2SJBHAD1kQf2Gm3xxBZIgHcgDV81O0RRBZJAKtQSuHI6k9R
      kwBWoRLzOPGQ22OILJIAVuFMByG94PYYIoskgFXY00G3RxBZJgGswp4+5/YIIsskgBUoKyUX
      vC0BEsAKVCqGWphxewyRZRLACpzouJz9VQIkgBU4lwfdHkHkgMftAfLV6bkKJhOdtBjzNBoR
      GvTo1cc0zcXBREZJAMtQSnF0qp7uhcev/l0ZJg1GlFZjlkYjcjWMVmMWn5aiTDPxaI6LU4uN
      kACWoYC5aOK6v0vjZdJuYNJu+Niz/VqSTXqcBiNKszFPixGm2ZinQY9Soy/i05Ky1MhTEsAy
      HEcxF19a47M1FlUli3Yl43bTdY/oOPi1BFV6guYPomgx5mkyIjTqEeqNGOWamfl/gFgzCWAZ
      luUQjt38HiAHnbjyE7f9TF235FAYOHiwqTPi1OsRWj1zNOoRWj2zNOpRGowIBg46SpYeWSQB
      LGMxmcZR2TwFUsPGwMZgyq5nyq7nXXPHdc/wYFFvRGnWIzQa4auBtBhzBPQElVpKtjkyQAJY
      Rmwp5fYIWHiYtuuZtuvhurUkhU9LUasvUKfHaDLCtBpzNBoRmo15AvoS1dqSLDXWSAJYRnwp
      n88A01hSFSzZFVc2yK+JQ8emXDPxa8mre6gajCibPwikSY9Qqefzvy33JIBlRBfdXwJshINB
      QhkkVAWzTi0DZscHjyg0FDqKGn2BZiNMizFPszFPsxFmszFHnR7Hq1l4sEtq6SEBLCOVttwe
      IcM0FBo2MO/UMO/UXBPHFQYW9XqMOiPOZmOOJuPK9kajHqFWX8CnpyjTiu11kQCWlbZK7xKI
      Nh5mnDpmnDrOm+3XPKKo0NJUaQkajOiVDXHPPE36laVIrb5Ajb6AXqBLDQlgGY4jF8H6iEZS
      lZNU5cw6tZynHVIfPuJQhkWlnqJJD7PZM0+j/tEeq2YjjE/P79VJCWAZZgkuATZCoZOijJRT
      RsQJMGhtvfrIh6q1RZqMD49vRK6uWjUZEco0izJMV7c5JIBllOIqUGZ99I6OqSpiVhVD1pbr
      nqHjUKvHqdPjNF3dKA+j5fgSlBLAMrwew+0Rip6DfnWD/DfjyCU5H2AZWintByxxEsAyyr2y
      BCgVEsAyDF1ellIhP+llVJTJEqBUSADLqKosc3sEkSMSwDJq/BVujyByRAJYhr/S6/YIIkck
      gGXIEqB0SADL8Hp02Q4oERLAMnRdo6660u0xRA5IAMvQNY2GGp/bY4gckACWoWkaLXV+t8cQ
      OSABrKCxRgIoBRLACtqaq90eQeSABLCCrc01yGdCi58EsIJAZTmbArInqNhJACvwVXhpbahy
      ewyRZRLAKjo2b3J7BJFlEsAqdm2pc3sEkWUSwCq2t27CKNQL3og1kQBWsbk+QH21HBEuZhLA
      KjyGzrbNtW6PIbJIAriBvbs3uz2CyCIJ4Abu6GgsqasllxoJ4Abammpo3iTHA4qVBLAGd+9s
      cXsEkSUSwBrce8ctbo8gskQCWIM7OxqprZLzhIuRBLAG5WUe9u1udXsMkQUSwBrdf1eb2yOI
      LJAA1mj31no2BWQ1qNhIAGvkryhj/+2yMVxsJIB1eOjuDnT5cFxRkQDW4bb2BrY0BNweQ2SQ
      BLAOuqbxmXtvdXsMkUESwDrd/4k2Ksvl1mrFQgJYp5qqch7u7HB7DJEhEsA6aZrGZ++9Vc4U
      KxISwAZsaazmt3bJeQLFQALYAF3X+Nz9u9HlRIGCJwFs0J3bmrhzW6PbY4ibJAFskK5r/Mmn
      75IDYwVOArgJd3Q00nmrnCxTyCSAm/SHD98p2wIFTAK4Sbva6uWMsQImAdwkTdP4wmN75Ohw
      gZIAMqC1IcBn9u90ewyxARJAhvz+p26XG+sVIAkgQ6r95Xzxs3e7PYZYJwkggx745Fb23yYn
      zxcSCSDDvnSwE1+51+0xxBpJABm2ub6KP/7dT7g9hlgjCSDDNE3j4IFb5QhxgZAAssDj0Xny
      8/fI1eQKgASQJU2b/Hz58U63xxA3IAFk0e98ciuf3rvd7THEKiSALNI0jS8/0cnOW+Ruk/lK
      AsiyynIvf/lHv02d3HU+L0kAObC5PsCTn98nH5vOQxJAjuy7rZU/ffQut8cQv0ECyBFN0/i9
      B26XT43mGQkgh3Rd40sH75abbeQRCSDHKso8/Pkf3Mv21k1ujyKQAFxR7S/nb774IB0tchd6
      t0kALqmtquBrX3iAljq5B7GbJAAXNdb6+es/e0DOJHORBOCyrc01fOOLD0oELtGUUsrtIQRM
      zy/w1NPHGJuJuT1KSZEA8shcdImnnnmTkcmw26OUDAkgz4TjCf75p92cHZlxe5SSIAHkoWTa
      4t+f7eGts2Nuj1L0JIA85TiKH796hueOnceRH1HWSAB5zFGK105e5Lu/7CORstwepyhJAAXg
      wtgs3/r5r5mYjbs9StGRAApEdDHJt372a04OTrk9SlGRAAqIZTv8snuQn3S9SzItq0SZIAEU
      oMH35/j2cz2MTkfdHqXgSQAFKpEyefqV0/zfiWFsR36EGyUBFDClFOcuXea/fnFSlgYbJAEU
      gUTK5Nk3Bnjx7UHZNlgnCaBIKKUYnY7yP4f7OT007fY4BUMCKDK243DqvRD//VIfU3MLbo+T
      9ySAImXZDkdODPPcsQEuR5bcHidvSQBFbilp8mrvCP/71nnmYgm3x8k7EkCJWEikebV3hBeP
      X5AQriEBlJhEyuSNU6Mcfuc9xmailPpPXwIoUY5SnB2e5udvDHBhbJaUabs9kiskgBKnlCI0
      v8BbZ8Z48+wYo6HSOqAmAYirLMvhzMg03cFxegYmiCwk3R4p6yQA8TFKKSzbIXjpMsfPjtF7
      YYrIQhKnyD5z5K/wSgDixmzH4VIowumhaU4Nhbg4GSG2lHJ7rHXzenRaGwLs2dHCnp3N3L61
      QQIQ66OUYiGRZjQUZWBslsH357g0FWYmDw+2+Sq8tDfXsKutntu2NrC9dRONtT4M/aPrwUkA
      4qYopUhbNuFYkrGZKO/PRBmaCDM5G2ficgzTdrI+g6FrbApU0N5Sy5aGarZtrqW1IcCWxmoq
      K7yr3pnn/wGQBg/+FPchxgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Make vs Count Bottom 10' width='192'>
      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
      tgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Make vs Count Top 10' width='192'>
      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
      iunWqv+fdwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO1daXOjSNLO4hAI3bZ7emZ2+v3//2pjo2dmpw8fOkGc7wftU05SVYBkuW23
      eSIctiUoCsjMyrvUX3/9VRERVVVFEo7jkFJK/4+/y7I8OpYfg+OqqtLjyt84ll8D3yml9DXW
      6zVNJhPrtWxzPwV8bkopyrKMgiAwXst2Hj+mKAr9t+k8+Zlt/q7r0mg0IsdxKM9z2u12tWs6
      jkPj8ZiIiDabTe29KKWOnnXb/fD58HtxXbdxnibI65uuPR6PyfO8zmN2QVmWtNlsqKoqCoKA
      giAwPm88S49PyPTAHMc5+k4Oxo8HUWMyOMZ0PpiFP2D+4KqqojzPjQ8T5zYxYxMByO9xbcy/
      KAqqqooGg0HtezmHsiz1/eFecD+muXEBYZsLUBQFlWVJw+GQwjAkz/NotVrpOY5GI/I8r8YY
      uIbrupTnufG5NBE/vsc7LIqiRgOnMoEJjuPQZDIxEudTwd+ZFOBAlmWasb1LSM8uEs3EZJzo
      +Bj8QeM7GwPIz+RLMs2PX0NK6qqqyPd9IjoQcFmWRwwt58CvC8bB957n6XFM99mG3W5Hg8GA
      giCgMAzJdd3aGGVZ0n6/r53jui4NBgM9H36tSxPcqQBzep73LHPhArUNnucdVgDHcY6IxkQc
      gOu6WvLJ7+SLli8dxIDr4AXxF2siesdx9HmO45DrurUVQ6pqJmnFx7Qdg3nhQcZxTMPhUH8u
      j4OUwTOUzwMrGJiIj9PGAMPh8PCS/qcmKKW0dMuyjIhIL/f83qIo0tc1CY8uzCDvpYv0t6k9
      Uvj5vt+ZSJ8DEBCDweDAACbpJMFVoqqqGlUPHC9vEkzDiYGINBPw64Ow+EuUBCzPaYOJIZqO
      raqKwjCkJEnI87wjQWHSs20M1aTn4/45fN+n6XRqZZyyLCmO4yMJT0SUpikppY5UILladX12
      0raQ1+sKpRQFQUBRFL3oSgQVTCl1YIAmomqTFpxIgyDQy7FJ/7LpxmVZ1pgAL91xnJq0BwPJ
      69ukTheJ1QbolHme19ShpnFsz4zbF0SkVQHP8yjLMirLUq+uYRga57darSjLsiMhxK+ZpqmV
      EZv+t92P/K7NHmwC1LiXBt5jqwkuXyZUGEiQ6XSq9dzlcqkHx4OyGYIcksC5hJI/pu+bXuQl
      ln+ig7643++NErlpHHm9oii0/pvnuRYYuBfP82gymRgZraoqStNUS/a2VbsNXaU4f478uct7
      bLoOmB8q3GvBSQzAH8RgMNAuuv1+T77vUxiGWvpAfYAu6vs+rdfrmoTnjASVqWlp5nPgzGKD
      bRx5nvR0STtBnsM/z/O8Zr+0SUepmsjnC88PXynKstSEDxXSthJ2UW1Mcx2NRpQkSe0+Tfd8
      rjFdVdWrkPwSmgHaiI6o/sCiKKKqqvSSjAcE6Y+lnS/laZrSfr+vHcd/cI0uL5AbxW3ghGGz
      AyRT2IzooihqrkG4G23+bBCrXLn4dfj1yrKku7s77YmCV0naGqbz5Wdt4M/DcRwaDoe1FcY2
      Hu4hiiLabredrkV0MOpfUvc3wes6If4QJpMJDQYD2m632hshHxKCQZDsZVnqFSOO4xohcAYw
      6c0m8NVAMoOU3KZ7sF23iXhAlFKStUk2yXhNxjieC56rCV1UjjbI+43jWK/YeKZRFNFmszGe
      H4ZhzeXbBs/zXp36Q3QCAwAwdqWOyseBKoMHBOLcbDY0Ho/J933abrc1NUYSESdMLM2O49B6
      vSbXdWmxWNRWApsBb1IXTMt4F13WBqgsJubtqiPbJPw5sDGztBn490VR0H6/r3kE4YQwzd/3
      fYrjuPOcBoPBq5P+RB1sAKL6C4H7iAdg5IOS+jVSC2azmVaPgiCgPM8pjmP94OW1HMeh2WxG
      6/WaiA6+7+vra/r+/bs+Vhpl/PwmD5EpqNXmFbF9HwQBJUlCQRAcHdNVTZPX6nLdU2EjQAgz
      vppX1SEKz20RfvypOr0M4L0WdGIAaagppWiz2WhdEQyglKLhcKjDzFVVaeI3SfjBYECu6+pA
      E2ckuAXjOKbZbFZbKVzXpe/fv+s8GJNx1kUn5jk7TceZxuQMA6lpU1u4/QF7oYk5nwJplD9l
      nP1+T2maHklv3/dpuVxaUy1MeI3ET2RhAEhp6HkwXGezWc044w/adV0aj8e1z+AybZIUPHdG
      fg7VIk1TnROz3+9psVjQ9+/fyfM8fRyPLq9WK0rTlG5ubvRnEqeoQXyF4dFo/rdtVTGNjfs1
      pVhw20YyHHcm+L5/tPoBiJ3Y7v0UwIbj1wjDkIiIkiTpPM5r9AARGRhgNBppz81+v6ckSWgw
      GOjMPbyc0WhEcRxrCQFpLlUYkz+7KxzH0Rl9RAdCWa/XVJYlXV9f09evX+n6+rpGBJ8/f6bf
      fvuNptMp3d3d0c3NTecAmk3l4J4SE2HZPExy5ZRoWgFsnpfb21uKooiIiPb7vWY8BOuIDhm0
      i8WCiB49L6eqYk1z7UL40tv11Os/F4wrwH6/r0UmkXXIbwgqEOIBz6XjSYYaj8e02+0oz3O6
      ubmhb9++0c3NDXmeR8vlkn799VftkuQ+dRsTyGvgf5vP26ZimdIZ2tAknWXAjc8niiJar9e0
      Xq8piiJ9j6vVinzfpyiKqCgKSpKE/vWvf1FVHQJoiCBjrqZM2y7v0ObKtX3/mqH+/vvvo7fA
      JdZwOKQoio4InOfH2CTccwCEkCSJTgO+v7/XUg4SPwgCiuOYvn79Sh8/fqx5o3CPNjVIXo97
      RXAej4i3gTMNz6+3HWt6lph7nue03W4pCAIqioKGw6EmcDA+Uit836fFYkF5nlOSJEfpJjJd
      3XRtCEGbOibPt616s9lMq06vCervv/+uTAlZXAK5rkvT6bTmx31pLgcRLpdL+vz5M338+JGC
      INCGKP7O85xWqxVdXV01+tYlONHKVYhfv8nNabIdujCAvD7/bWMQpRQtFgsdm5F5Ql0ZVY6N
      1A3T+W11Any80Wikk+Be0+rgQH0hak4daFILXgIwzqIooj/++EN7KuAZStOUwjDUKRrfv38/
      ec42SYfvYOOY7BzuGesytrxGFwYbj8daKEEVQoYoH+cc4ueMaLsH7nxouleiQ13Der2m5XJJ
      m83mLJXxOeAVRUFpmuoP5A17nkfT6ZR839e+f1um4ksAvvfdbqe9RfBdY+mGmoDyyq6BMf4s
      uMtT1i6YCK2N8Jokqvy+Sep7nkdpmtJ2u63dt+lYrqLYVhSlFIVhqN91FwayHcOvAbWViHRS
      IYz5l4THid/k70cpHte78zyn8Xj8KpgAcxwMBrTZbMh1Xa3f8kBOGIa02WysbsZTVLouq+A5
      7keTHt5EgNvttkbUPP2kyeA35fcDYRjqwN5T7kWeK6+TpumryA1ysJSHYVhbxlzXpTAMteGS
      piltNhsKgkAHrl4LcA/D4ZDiONYJekQHovB9n5Q6pG5zJpGQAoAv8fgcx0nCbFMBTkHTisJ/
      8jzXnh0+Py7AmlQYmwqW57nWChBrucT9cCDn6KXhQWVAegI8K7PZTN94mqaUpqk+7pIv+1KQ
      6gqWWRTbgGmRks0lpUk9MLlG8R1+OBPZJK9pnk3zP0Vnx3zkvPC9aSwICxuSJNHnBkGgYwyn
      ZH2aIJlUZtW+FBwi0jp0HMfkeR5dX1/rCGuSJLTdbmm321FRFDqT8zXC8zwajUZE9Fhq6Hme
      Vg0cx6Grqyt6eHionSclpXR7SoCwEGc4xTHQ5DGyfS+luUwlt13Dpkr5vq8j+rY5wqGAliw2
      KKU6Z3lKhjwlkvxcqLFfGIa6DhVGI1cnTrnZlwDsAaRwEB2yEGG4IpILtQGeJE74pixXaSRy
      6SpjAW1M0ORpaxIsJmI+1cMDNZF7/jCeBJiMq0MmIFp/iv2E68HINn33o1AriIEdgP/5TSEK
      a0qFfk0Ak3JX4HA4JN/3KcsyyrJMrwLITjWNwf/G/zbjUXpWmnCucXzqeSaXtVKP6S1yPNkY
      wZbdy4E8Lh4g7Do3zIdHpeG0AI39CDVbt0WRUgEMgWV+MpmQ7/uvmvgBJIrtdjt9X/CPD4dD
      SpKEkiSh+XyuX7rNL93FZWo6jqNJveHHXEr62cYxpZzbkOe5fvcmwI1ZVdVZajGM7eVyqe0B
      AImVcLc/JyN4w+FQS0gJJLiVZak9Ka8dSinNANDT4zjWdbWe55Hv+zSZTGi5XNJ8Pje+vK7E
      4nlea1rwuWrRU2GzD0wGvlztiR6ZwCT0eH+iJhWpCXgnEkVR0HK5pIeHBwrDsOaQuRTwHJwg
      CKzEDan0VogfgBo0Go20twa/ofcPh0PK85y+ffvWaMSavCs8BeCU1Iau7smnwGQom+6pCYie
      Sx2dI0kS2mw2R13pLgWsPvv9nh4eHk6qPTjlGl7bi2jyFrxmKKV0PlBVVTpDkhuukP7fv3/X
      iWNEx6m7NiLAWGhD2NY0GL+ly5R/dwk1qM3vLxnadHwXteY5DdaqqnRyX5qmOrX9Uip4mqaH
      1e0io71SeJ6nG8u6rku73U4TP89/ur6+Js/z6OvXr0TUnKcvv4cuGwSBVq983685C0Bw3MCE
      lOZ/NwmirqvGKd4hG5ok/48Az2wFiqLQHbAvJSSyLDtmgJdwRT0XQDAI3g0GA4rjmFzX1QRL
      dLhnqEuAjZBMadA8qlmWJWVZpuucTZ4UGTsweZ2aCL4rE7Q9ly4M9aOT1pDGbZr/drulu7s7
      nY7zFFqF4+eoIOYt6fpdwRlBKaVbgKAwn6ie8cr9/DifG8XywcMTwquy5LWJyCq9pH0hx+a/
      2+7TNu4psQqOH+n1Qz1zk00GVzZiGqZalS7QtRNPn/bbAQisLEudRQlI74hJOjYRYVUdilJk
      bYVJ324iVID7wqG6nQp5TzbCanLT/qhSRtmgAPOxEXZZlrTdbmm/39dqVU5mhPOm+/YAfdv3
      fR0MgvRAtVTTci+NVttKwF+aKYZgku7ye6wo/FpyzK6BOD4ffg/4HCthmqbGPj/PrRFwp4Rc
      beT9mOaS5zk9PDwcda6AyotkPtt9vCsGQO0A0iGwDJZlSbe3t3orJpvBa2sGJvV7buziexOj
      8HNtdcs4FqoRJ2Z5bT5PzowmppQ2y263O7p3fp+XMjxtq4zNldykDvHzTXlF2FwE3j3T2O+G
      AYhIrwC+7+sgHyTEarXSrlJOLFJq4jNJiECTvo3zTWqFrV5Zji1dqKZjcC3+G9/xVJeqqo4I
      R97PKSpQE1MqdUhH58xGdNDp+TZUl3TAtI233+/fFwMopYxBPaUU/fLLL7q9O9ExsUsJLu0F
      OV4Xgm4CL1o3qUG2lckUwW5y60oJK3OCTpl307FIted12Wip0zQnqbKdiqYgZVEU74sBiMx6
      JdI9THq96byuL0KqIJIx2uaIc3iMQBKHjVhNBqXUs22rBSc2lMI2MUUXBpcrDdydEvI52XqT
      dkUTA+gtkt4THh4etM7Jq9sQfOESikt//D7VLShdnPi7q1vTtNK0SUrTOG0S1GR7wHUMYuXX
      f4p3qEv7xqYV9hTw1HcJvUneewEIGMXzKPfEKsB1U/6y+d+83hhjcjS5TuWGILbVxmRjSGlv
      QtP3NsZtU3WUOtQEcGmNY13X1Y4DZNg2zY3oMbDWJkgu5X2ybReFa7wrBiB67OQMbxAnNNuG
      dSA+MA/GgWqA1AEptUx2A7rpyfFN1+TnmWCSkrJ9o3TNmq5hszGkWuh5HkVRpF2m2L5VKaWD
      gLakNTA/YjCvBa9nJj8AeFFhGB41yUKnNSztu93uyJDk7cPRl7OrfgqJh22k8jyn4XCodVzZ
      yOpSaFoVbJ/zlYm7KCE00KsVahGEw3A41K3sTWOiRPVHAu+Id8yACuc4zvtiAKLHeMB+v6ft
      dqtfInJDeI66Taq3GcpNBAdPlOMc9lZDzyIbM53q/TiFeaR6ZQOqvnjFYFU9tmPEioZglJwD
      8qeeQvymTtpNwBxQCRjHMSmldJNnjPdTZ4OaoJTSxq/JXYlYASd2k5vTZKB2IVQch82asZI0
      dZI7lahNDCptGv4jvUx8PvgMzwlp0rzfKD/HNH8EHbs+IxP4Pcn7w/z4D45BlwvsTHTUAvSs
      2bxx8PpmU1G7Uoomk4lOzDJ93/QjIXVrPg8Y1WAKmxHdlXCk14mf17WbBP8f6gPRoSM4OvBB
      LdputzUXq6lpQhsDmxiWr7Ry1W3yeAH8mS+XS1JK0Wg0Oirgf5cMQPSYKyIbyRKR1nOxB3IT
      mjwMUoritzQ+0XPJJkW7ED9frWxepDZw7xSHbNmIVBKix27VYJJTOkBDcjeplE3zbjLw+fNH
      4hw+53h3NgAH1B3TQ0ZwTIK7Qtt87/hOHscJDekYcRxr28CUF9SVCUzounrgOB4YJKKaN4jP
      H9jtdket8tsIt+0+bPdueuZdbKckSXSxPT43FsS8J8AgtUl5dJ82SWRZc9tkHJvUGnk81DEY
      a6bVo+1e2ozvrpA2iSToqjp0jeNG72azoeVySVVVNa4CpnuX82tifJuqZLqO/H+z2dBms9Hf
      OY7zvhmgDdxgNT1k+Nyl2mJ6uU0EiONhGGPj8a7nNakC56Lp+kibDsNQR9LhQoZnqGkuJufB
      qavUucdtt1tdTbbf73sGaAI8RuiOzZdf6UWxeXFsK0PTss29Lm3HmyTqJYH74asBtl/CLkH8
      ntGT1bYK2LxPpmsCT70v7iUqioLW67XuNvGubYCuMHU+4xJXdlFrsw+IzBmkOB79THnNchc8
      NxPw6xAdDGBuH+A5eZ7X2i7FZJybDHe5snGVrMu9mo7je1P3K0ADsCtlmqY0mUx04TwP69v0
      WP4y5QrR5C7lhih82ETNhjbHczCAHJ9fAx3iTPfbdSzbvTXFRtpUIfl+JHS2aess3zmq6hDx
      xPasssqr7UFLadVlZcDLRaDMBhMjmbxP58JkrEqC5FtRAbYKLQ6ollCXTrVfLsHoVVX1DNAE
      pZTe/LsoCm1A2bI6T/Vlc2awSUF0rrhUP5xTwHV1fr+cCaBbc8Zbr9etc03TVEfk29qvm+yJ
      pxj8/NyeARoAD9BisTh6CVVV6faL+N9W08v/tnmLmiC3M+2C55D++M1XHvTx5D1E5e4vNlUN
      e1I05feMRqPaZoAc5zJBTYU7a4R3BBh1s9mMRqNRjRDQnyaKolpDXnk+UbfUZFPTrTb3ppTI
      Jg/SuZArlE2Vk/M1MV8QBCc3uEWgkui4squrMGiLj/ReoA7ASjAej3XDVqKDZN7tdhRFkXaV
      wtXWNBZRs4SWUperGOdIPc54p/jRTUa9nHuX8YqiIDRhRpv6LkDHirZninmYhI/8nP/f2wAn
      AEwwnU5pMpno5T7LMr3v7Ww20zn+/Dz+t02VaFKdkNJL9FhYYpO6TUTeZrDbAOkr76upAzVH
      lmX07du3k64JbDab2i5FROZUCdM8TPcr771fAU4A1KEoishxHJ1njsatjuPQf/7zH4qiyLj9
      j82fLiW+4zjGTmlyFbD50ruqBhLcy2U63mQTyGNM6tdsNqM0TXX69DkYDoe6LaJJqp+DXgU6
      E6h+gn6aJIlWhwaDAf3++++02Wx0YY1N55eEir0GYF/IHCVeVN/kAu1iA5jUmziOdWqDidC7
      rDT7/d5YP4zNvJE6UhQFjUaj1vb78MRB8GAOcE2fAnnP77ItyqWg1CGRznVd2mw2hw4D//sx
      bUDXZsh2MXZtOi7HqV6iJnWJX6ftura54vdkMqGqOhSowLi9vb0lx3FoNpuR53lHK5Dv+zQa
      jXQdNY/BOI5D2+3Wuo+zbV5E9SbFPQM8EUEQ0GQyoSzL9JZLvO1HE0FyVabJqyHjDfycc9yq
      HNKzg9JFxzlsj3oq8fM54W8+J9QTExFdX19THMd0f39PSikdG6iqShckffnyhUajEd3f39Ns
      NtMbG3qeR2EY6n2tm9RCwNSsrGeAJ4K/4CiKtFHM/dYmtUESBu8E14WIOXE1qVineH4A7NY4
      nU5ps9nU7rUNNm+VLdA3Go10igkku+u6eg5//PGHXlHv7+/p8+fP9PHjRxoMBrqqTymlDWWb
      98pmb/UM8ESgZmC1WmmCQ52sCTbXIv4HURdFofc4NrnzAPlibWOfCrh7QWBZltUitrbx4bHi
      cZEmdYt/73keTadTfU1p0ywWC5rNZvTlyxdyXZc+fPhAYRgerTptqxC/ds8AFwBeGH/IT908
      Dh3ZTLUIppcqiazNpugCpDYTmQ1r0/gwcOW85DlSXXNdl+bzea3NOQQBkgKHwyG5rku///47
      xXFMf/75J83nc52oiC5w/LqmFZeP38cBngjoo7zVxjm6uFy6ubekjYh4bMAWoT0XiE6fgq4q
      HNFjfAVbofJ7ybKM1uu1Lhflz2c4HNKnT58oz3P6888/a8FCQKqc8jOiPhXiIlBKURRFtc9s
      3SbaVCPTS4Nk66LTX4Lo+bWbrmO7VpuPnt9HVVXaduKbZm82G3p4eNC749zf3+tyRjB9URQ0
      mUzo5uaGvn37dtRpGuPzDTj4fHzf71WgS0ApZQwgnaKX8wxTfi5WgjRNO21Za5N0p8LkebJd
      q+lzk1eGf7/f77WhrZSiu7s7HQTEObA9sEskjGS0uIRb9a+//qrtMN82T6LeCL4YXNcl13V1
      ixMJaZzJ75pQlqUumm9D0ypxSvTUZjxKb5VpHGm4t3mEpN7OV0+Zer3ZbI6YHExxfX1Nd3d3
      NBwOa56lPM+PWmECPQNcCFiSIZ1k9iJeGorHTYQBSSfP5Xq4PM8kYZsMYE5sUtUqisKYm8+Z
      StoEpuukaao779muD88SWsHwlYbnGHHCRWwFNhf2AFNKaYN9PB7Tly9faLFYkFKPna3H4zHl
      eU5pmtYcFD0DXADQMwHkCYFwuGcEWzThPOkJQfELB+qDy7I8UoOaXKNdJK80vNsagfHEPNyr
      BDfcbV4YPI+mFOmqqmrfZ1lWS0sHQ+R5rusRoiiijx8/0j///EO//vqr9iQFQUBBEFAYhnR/
      f68ZvTeCLwS+NZHneTr9l0srGGmmvH/AJL0hTbvqtRhH/pjwVDvBBOkKNYFnmOLe2mqA4WyA
      EOEFOPv9ntbrNS2XS/J9nz59+kTfvn0jpQ5tLnE+9jToA2EXhpR4cq+uptC8lKIm7xF+8jw3
      Sulzsiyh0vAAXhs8zzuq+JLwfd+oBuKa+G3yyxOZt0VS6hA15s8KG5Vw7xA2PwmCgH7//Xf6
      +vUrjUYjiuOYXNfVzIN9InoGeAac64PnO7GYNrvjbj0U4BCRTgGQjGFjPptqhKCbTQKbNvZo
      szVs14X3Rt4bX+n4/8gGBWAQS7tFuosxD9/3dSIe/s+yrGeAS+HUQpOmFUEeJ33XPK8ehGRb
      GYjsmaRyHpxxTUyCrm9dDe4mgECTJKnVW5uuD/UojmMddS+KQifCyXG535/fU5IkOr0DLtSe
      AS4EGH5dpL+N0NqCZQD83F0CTrbv+HncM4SUZNt4NnfiOYB9BKK0zRsEzz1Gpr2/cLzJA8VL
      MbFiKNUXxFwMts4NTSqF/J8TnvwtwVWIc1Uufu0uUeZLA9cdDAaUJIlOhZbHYE5cBbO1UgnD
      kEajEe12Ox1E5HXccuyeAS4AhO+JzPWqEl2CYV0JsYuUtwWeTEx2ChM0BdxkvIAH1qQtAHen
      tAskeDdqqS5ylS6OY4rjWNcMINIsE/sGg0HvBn0quOehC2EDJuKRDbdMMBWiN0n/rkbqOdLf
      tvKgXYxUCflveS7sGNucUCcA8C2X+A/qtIkeDWWUeXKgp1O/AjwRcE02fW9Sg2xE22SESond
      1d6wzUuCr2Rdwb00ALZM7doHCMGqtlWMfx8EgdEI5sB+C6jV4HNG8l3PABeAjRDPkah8PE7w
      JokvbY1zrsXnCT/5qSiKolY7kGXZUXZsG5Dwh5wqPi/MlxvoXUpO5c42SLdGL9P7+/ueAS4B
      3q0Bv891D3I06ffn2gxdxz8FIFr+HPb7fef9wrj3Zr1eay+XdCzwTcZNdgBHnucUxzFdX19T
      VVW63gDR4jzPD3vAPeXGexyA8j8evLIxAP9cGoa8AoyfK9USOQY3JF8KMlbRpBbazq+qqtYF
      QoJv2N3WNXu5XNLHjx/1Vk5fv36lsixpNBrRzc0N3d7e9pHgSwH+bBCqybsiiZwTPn6jz77J
      U4J6ALhLIb3BdOc2nHouSDWuC6Da2JgnSRK9SqxWq9o980Q+x3FoPp/rNu13d3f08eNHvTsM
      T1nvGeACcBynxgAAVzFM+nzbb4B7OZDym+d5Lc/9KXGArpC5S0jdkNfOsozCMKQsy4yS3AYE
      t2wr2Wq1ojRNKc/zWjCwqh43xMYPT3ibzWYUxzHtdrtaw7E+EnxBNLklLxVcAgMURUHD4ZDS
      NK1FZi8ZxJJpBEodqrVQfZUkCUVRRMvlkgaDARVFofv0FEVBHz9+NI5rcxeDmHlEWAKRaMyJ
      2xzceCai2gYd2CPYdM2eAS6EJoPMpApwHb4r4AFJ05QGg4F2BSJ+kKbpkU0BaSdVLj4HDt7O
      kUdq+T2maUpRFNF6vda9ef755x9KkoQmk4lVPzd5r/h3XK1rikucEiRse749A1wAMiORE4+U
      ovy7c4G9y/iG2qYAGSRjG0zRV4wFhoAnJU1TXZCCmofdbkfX19eaIdEGEdLatN8xfzZQe3gL
      mCb74VwGgPGMIFqvAl0AcM9Jv7qU8Fz6nkv8nGBQgtkm0bvAthpJBg7DkIIg0OoRmGs8Hutj
      ZrOZPgcdnW2bh3CgMe+599I0dtN3PQM8EZCEo9GIttttzfvRRdqfshqYiOipxm9b9BU2hlKK
      vn37RpPJhFarFV1dXemUYtgkKAWFgarU457C6OBmg1yFbPM6hUFMz1Y+wz4X6AJQ6rFaSWZ0
      Nr2oc6Scre5AGuFSereNWyMK5mb1fV+Xc97c3NBqtdIrAYJN4/GYbm9v9Z5fVVXpyqsoinSK
      RdP98m4TTYE/vgKa/jY9A6AsS22wI3rdrwAXgC0038YARN0leNsqYjrWpIo1HdBZ5bMAABIP
      SURBVMs/k7YEEWn9H7q+67p0dXVF+/2erq6udFsYGaTj9bsYT96P7/u64MbWVgZdN0zPwpSO
      zj9Dp2u8J6L/ua+PRupxNjzPqxmNRI/StG0HyTacGlCC+sGv1aRWmNy4koFh3OJ77JDJUx5M
      mZdwm6JQxXbfqAvgewHIefLf/HMUxg8GgyPJL+0LnOO6bs8AlwSMPlscAB4RGIaXhE1teKqB
      3OWaXRi5qckuV32QSWorjpGfoTB+MBjoFQhzwvHYWQbgf/cMcCEopbTxt1wua59zY1gppTs/
      d2WCrrq8zejroorZrmu6Bv/d5Rybfm5Sx5rmyokayLJMMwsChTh2v983erjyPO8Z4JJwHIfC
      MDxKU8CLkb2DsAlEUxUUR5saw393Pa/LNW02AYeN0ECwvBeSaa78OvA+8RqDh4cH3USXj8M9
      Tnwc7qY1rTq6xvisp9LDCqUOm7qZNpvjLwpM0KX9uDzXZFPYiPKpqk8Tw3X1Ntmi4DZAOOA6
      RKSbjBGR9krJtAk5H7nNE4QNOuwppXoGeA4opWovUC7PHGgz0jWb00ZsT00dsBGwSXUw7UfQ
      dC1+75inrRkYJ3gQL/YOI6KaF4irllwg8Dm5rqvzk7Is02oRfnoV6JmAHSR5igRiBJLYXdfV
      vumm1AXTpnVEZByzqiqdM9QVcoXh828zeJu+N3mk2sZxXZfu7u5oPB4TkTldo2kspR6b7yIS
      beo41zPAM2EwGNBkMqH7+3siqqtCIHiOLkyAHBYJm68f1+oKfh4a8poYSBIRJ8424uZz5Do/
      iBNqSlUdUilg4KLxAL8+L53kzwWeIF6oxFdlvnL0DPBMMEll/h03igHUrLatBBLnxhds9gkM
      TZttUlVVjTE4Idtcr3yXmybg/nEciBlp2Hxckw2ilNLd43AMj0LLxLyeAZ4RKMeTvmkiu14O
      xuBMYOqCdglwt6MMhDXl5cvucE0eKHwuNxA3AfNAoQ2MXtP2sXI1MT1Xno1qK7TvjeBnBHZB
      N+0ZTNTMBHzJdhynJtUuhSav0qkwrUImN6d0ifK54L6jKDqKqDfNX14XUWGsGiZVCeP2DPDM
      wIbT8PZ0UQNwnqlZFMcp45kgJSdnhKfEDUzXgT7OCd10rlKKNpuNzh61jWe7FlYnk71kOq9X
      gX4AXNel0WhEDw8PnYiVG4ZEpNv8mfAUYgVMqciXWA1sQS9cw/SbqL6NFM6DSshtK27gKnVo
      xeL7vl5hEGfh+Vgy2a5ngB8E3tLDpAZJdQGA+mMjdKkLd4UpbsD/lzXBp4wr74ETqtxfTM4D
      ZZYmj5HcKxjqDoQDVlnHcWi/3x/VCRNRrXip9wL9QGAzaCRvxXHcmD4AwICULcT5cV2Y6hzI
      efDxYGCa3KSm6yOuYBoXn1VVpRtsSQbiXia5WnD1ko9j2jOB/1+WZc8APwqO4+iUXITiy7Kk
      3W535EKU3iK8ZBv4+fwz7muXwPHSLYhjZWE6l5pQRdB2HN+ZDE6e/wTClvPFNVarFc3nc6MB
      bWIaose0Cd6ZDnNs28ugrwd4ASA4hd6ZnudRHMe1/j5SB7elB/MxTUzEW5DY1COpozfp//Jz
      rmJAb0d/Hq56gFGiKKpJa4wJPb2JyZvuXXbkA1BkI1Unjp4BXhho1LpcLmvZo1JftnlDJAHg
      WJP0tq0EbTC5SOVYYAZbijdqJbCdqWkepu4R8jsJTvSmwB3iMLaUkN4N+grgui7N5/MaUUl3
      YVfi5efZpF6TsWxSP5rOl65Y03X5aoR0D3hq8DeYw3S9tlbrbenkPLuUIwiCfgV4LQDRrNfr
      mh0A/d/WVaFJgkMXPvUc0982hmrzQEmGkkYuz/2xxTXa3LLcwDZBxlNgj43H454BXgsgudEg
      lxPK3d0d3d3d0Wg06rRTPB/zHNhqDbq4Rdu+N60OYHbUA5vOaYp32Dw+HCi1DMOQ5vO5DpT1
      DPCKsFgs6P7+/qj/5S+//EJVVdFqtdId4SaTSWtujS0I1VaAYzrHRthcetuIG4C9Ytvcz3Y/
      /Bw+FoDqLnzeNNfJZFITIj0DvCKgpBLGMJb24XBI+/2eFosFjUYjKopCtwf3fZ8mk4lxPBDJ
      169fa50W8jyn+XxuJTj5eZv60RVQ6XhrEoy/XC6t92GaR5t9Y5rzZDI5iqX0DPCKoJTSPXcQ
      7oe+ihjCZrOhNE11//ssy+ju7s4ogZFZOhwOaTqd1tyl379/p9Fo1HkXl3Pvx6TPI6jHidWW
      7HcK0bfNxbR/cM8Arwyu62omIHrcuA4663Q6pfV6ravDBoMBXV1ddRqbE9P19TXd3t5SVVXG
      Xj6XgmSCwWCgd3HE9yBKmfYNewArRp7ntX2/cB5veiVjDDguDEOjjdAzwCuDUod04CRJtKtQ
      dkg417iVuL6+ps1mQ+v1ulX9OAcmo9m2/ZFUTWQU1/d9KopCq3KSUWA3wc7gsQNE3k3oGeCV
      AZJsOBzqZrvSh803omhDUxoBEem+ns8BW06QTO6Tas5oNNK7y6BKbjAY0G6304UySim9IbYk
      cJl4aEqKA3oGeIXAko2dTdI01RFUuEulKmFDm5+e6CB9ZbId8pRQVHJuJztT/MDU35PX68Kl
      GQRBLa9/NpvVzsExDw8PRHRo1eh5Xk1F5GqSyU5SSZJUTeVvPV4G2OR5s9novW3H47HWh+M4
      rnWgaxqHqD1a+vXrV5rP51o9ubu7q/XyjOOYFouFkZFs0Wr8D7sGfw8GA50VS3Qg5O12q3eW
      AdN1dfVy4UBENccAn8t8Pj8y+nsGeMUAkWBfW8/zaDwe60xS7HjYNkZTWgTH/f09lWVJk8mE
      kiSh6XSqvyuKgh4eHuj6+rp2TpexwzDUXigJbrBCasO926S7NwEMu16va25aOAxqKSc9A7xu
      VNWhTSCYYDQaaZdokiS03++PbARThqcpOc6Eoihou93WdlnEufBMQYp2yTfyfZ9ms1nn9o+X
      Ap7ParWqPYfpdFrzevXJcK8cSh3qaSFB+Vaf4/HYKFlNCW1dsj6JDiqKTVoPh8Oa3WEbF2Nc
      XV0dJfn9KCilahsEYg7Y1QboGeANgOfXIxgGN99gMKDZbNZKZLZEs1PnEQQBbTab2rjymOl0
      qv3uXdWv50BTK3agZ4BXDhjDKDQhetyVkgd5rq+vtdF6aYLjjDMej/W+XxKIYVx674NzYapP
      QOduoGeANwAYdZy4UUADJkAbQ7hJnxPz+ZxWq1XtMzAi2pW/BsClKsHVoJ4BXjmQCzQajbQL
      FJ4SuEj5SjCZTKz7bD2l+ZUseuENZ/F9U8DpJYAyS+6ORdOtngHeEJDINZvNaDQaaV99mqa0
      XC5rvn4UethKANvsgK7VYldXVzoA9VqhlKLZbFZrsSjvv2eANwKoOePxmGazmXbl7ff7WmcG
      GKrYttXme28qdWxjAjCc7/t0e3tLWZaRUqo1JvESgNTHvOHKxT32qRBvEHAzOo5D2+22tjk1
      0eHlZlmm06G7qj1QpXjaND43YTqdaqJarVb6nK7ZqT8KsI/4nmFAvwK8UaBjHNFhFZCJcdhG
      yKaXd2EKW9oDX1lQZfXhwwe6urrSW6e+Jriue6j//Z8qxD1DPQO8YYDoi6Kg3W5XI+ogCGg+
      n9NsNjvaqBowMQFUBVvcgH8vx+G5RK8JMNqjKDryVPUq0BsGJDHC/kiWA2APKKXo/v7+pEDY
      qcXvVVVZd7B5DUCMQqJfAd4wgiDQtgARWfvq8MxKWRvAi++7Ei9fHaR79DVD5kQR9QzwpgH3
      6GKxINd1abvd0mq1Ogr347jxeNwYJHtKEO01+f9PQc8AbxyoC14sFkR0iHKikkweF0VRLcWZ
      6DhHCHn0MtILe4MzSZeC9deO3gb4SYD2ivf397Tb7Wg4HB4VgWMlSJLkKKsTdQPfv38nz/No
      t9vpnprb7Zam06lmAmyi9+HDhx96j6fCZsdwZu0Z4CcCpDxiALZjZrMZVVVVC6AhBnBzc0Or
      1UpnfQ4GA518hwIV3m3BVGb4ksDcsizTjCrbyw8GA71pX18Q85OhK0GWZUn39/c1JpD+fVs6
      cc2I/N85XdOynxNlWdJ2u9UdNaIo0kX10k3sed4hb+rFZtvjWdCVAJE3xBPDuGTH3rqQ8tLT
      wxnttawE+/2ekiTRxfJwAaOACKsB0SEterVa9QzwnsELVmSMoFY3ayilNHV1OHWD70sC80fg
      D2obIuJ81/j9fk+73a7fIum9w/M83X+Iw+RB4kwgVwyoRVmWXYQB+PVRwAJ1zHVd8jzP2OWN
      tz7EfFAjwVOiPc/TadEeEdWWu5dexnr8OPBSSxtkYT3/X6pGcRxfZEPvNE0pSRJK07SWdgEm
      mE6nNB6Pj+6Fw3Eca14S7iUMwwMDgFuKojA2EO3x84K3Yu+SDm3LFEVbk7YN/dqAGIRpgzvY
      GV1Wma407BGRLq7GRU4ZoMfbBVyFQJd3Lg1fKZ0fHh50ZPoc8HpnE9AX6VLQzmJw9nq9pu12
      e1Lf9x5vF3KDPaLj6DD0fPzY+g2hke9yuezUt1QCq4gNKG65pKFdi5ZUVUVpmtJ2u9WtN3r8
      vPB9X+/KzsEZgBN+l90iiQ7uSNnqvAuQ1Wo7LwzDo4S+p+IoXAh1qLcFfn4odejE3NSD0+QY
      MWWCymzSJkI2AcKXB+bkPJ4DR9YKOnn96FZ2PV4GSikaj8cURRHt93tjuxOpDvOAGY6RSNNU
      e4VM27bKuENZlrRarawq0Cnp2qegxgBdLewePxfw3ofDoSZEUz2wKQosj+HYbre02+3Idd3a
      DpfwFmVZVtvE2mZ3rlYr+vTp07M03OoDYT00kEzn+77W49Ghuq2azFQhht9gKs/zakU7GBOZ
      qXKMLMu0V+m5Ks56BuhRA4rtB4OBJtDtdnvkGeRqkCRK3qcI3yMFwRZsraqKbm9va6r3er2m
      3377jXzfpyAInkU76RmghxGcUNFtbrPZHPno2xgB9iSPF5gYYLPZUFEUdHV1VVsh+K44z4Ge
      AXq0AoU0QRBo4xa7ubTZCvLHZghDvbFFkn+YF6hHDxNgKIdhSEEQ6CS1PM/1RnU8qNaUUGcC
      dm+5vb2lDx8+1I59zm7TPQP0OAkgZGych10fUUIpI8Cu69JkMiHHcTSz8PpiItLt34ke+3fy
      64xGIyNT2eZ30v30FWE9ngoeNUYwC1ubDofDWvS2KApar9cUx7E+7+7uzthOcb/fa0bzfV/b
      Ao7j6A3EOVMMBoNaF+0u6Bmgx0Vhqh4zRZJXqxXtdjv6/v07zedzo5HrOI7e6A5bpNrcrbhO
      FEU0HA6t3fAkehWox0XRpaZEKaV3prd5eJRS9PDwoG0OeI8kwcPFimq05XJJ//3vf+mXX345
      2tHShJ4BerwIHMeh6XRK0+lUF65z3b+qKtrtdrqDBZG5Uo33MMrznMIwpPl8flQwY0OvAvV4
      USASjDgAPru7u6Moimiz2dBsNqOiKGo72SulKEkSnU7BbQjXden6+rqT96hngB4vjqqqtEFb
      liV9+fKFHMch13Wpqip6eHjQq8N8PqfNZkNJklAQBDpKzDEcDq12hUSvAvV4cSj1uKdvVVX0
      6dMnXRm22+20Lp8kCTmOQ5vNhn777bejcWCAn+IF6hmgx6sCCBedH8IwrPXy+fz5s/YIyXOI
      um38wdEzQI9XD54Ed3Nzc1Q0wxmA17d3QV/10uPNANsxITJsq185JRrcM0CPNwNeuINub7PZ
      7MgIPiVtumeAHm8OjuPUWiDyajN4fnojuMdPC6g/URTRv//9b52Jmuc5LRYLSpKkcwZpzwA9
      3iyUUnR1daVrE4qioOVySUEQGNu9mNCrQD3eNMqy1GqP67q0WCx0nUIXl2jPAD3eLJBUh805
      iB6jynd3d7oFugm6Qq1Phejx1gFizrKMNpuN7mix2+3o//7v/44KalCgH8dxbwP0ePuAURwE
      AXmeRw8PD7pgZrfbkeM42iguioLiOKY0Tcn3/Z4BevxcQF4RmAGGMbpLIK0iiiIajUY9A/T4
      uQC7oCxLWiwWNB6PKc9zXaaJ79H7tmeAHj8VoA7N53NdJQZPUZZllOc5ZVnWM0CPnxs8xZro
      oPIQHTbw4HUCvReox7uBKYO0XwF6vBuYIsN9IKzHu0bPAD3eNXoG6PGu0TNAj3eNngF6vGv0
      DNDjXaNngB7vGj0D9HjX6Bmgx7uGl2XZS8+hR48Xw/8DimsalxZFTUEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Percentage Acquired by each Make in Circles' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 20' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Make distribution count per top 10 City' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 Make distribution count per top 10 County' width='192'>
      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
      8f8BPR4Y8g0QQEkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 Model with Highest Electric Range' width='192'>
      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
      iGctRv4HucMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 5 car Make per year' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABDqAAAQ6gGC0wqY
      AAAgAElEQVR4nO2dW2wjWXrff1XFSxXvFClR1P3S6unp6Znp3pnd8ezE6zjrABsbAZzYCQLk
      KQ9OEAR28hAgb8G+JbADBLERIE7gAHGAXIA4hje2YRh24IXXjtc79szuXFvdLbVEkZR4v1cV
      i1WVB3WzyJF6Wq2hpO3m+QFzqaPi+c5Xdf7n+lWV5Lqui0AwpchXXQCB4CqZqACazeYkszsT
      uq5jmual270KX03TRNf1S7d7Fb5elk3fJDNzHOeMJ1psb9/HH46jWF0sWSOT0Dhq6izPJXiQ
      O+Ll65tnysp1Xc46iqtXDikc1VjIZjjIF1nZuEb+4X22btwg9+ABjj/EtfXls7lwZl8H3L93
      H1mN4nd1DDfAYipKvtphPqGRK5RYWN0gEVHPlN1ZfS0fHlCqtclm0uQLR2xef4mH9+5y/eYt
      9MYhVcPH2kL6bC6c0VfL6HJ/Z49EKkOnfoiWmEN1uhj+GXz9Os3OgGsvbaJM0CbA4cEe1ZbB
      /FycwlGd61sbbN/b5dbL13hw7x7x2UVmZ2Kn/vZqhkCSj+z8HM5Ax3SC4JgEQlH6RhdJCSDZ
      gwsxG5+ZJRRQODg45PrL16mWD1EUH7YjkV2Yx3HsyRuVFLLZORzbwLB8yK6FTw0z6PcIRaIM
      zC7W4Ow3+6ykZjMEfRK5wwq3bq5TzB3hV2Qsy6BYbmCZxsRt+oIhZlMJjG4FfySL2WsRC6t0
      dJNer4ft2FzEjHM2M48Ph6Nqm5eX4uTrJpIMertCpWFgGE/29WoEMOjxZ+9+QFANY3artLom
      rXqF/MEBjWaTfP6ARmfyXf29j96jYTjMJEJ8+sld/P4gh0dFCsUCf/bdvyAQDE7cJrbBn33v
      +wTUMJbeoNnW6TSr5A8OOCpX8QdVdGPyvn743rvotkwi5Oejj7cJhFQOiwUOS1UU2aVSq0/c
      ZqdW4MN7OUKRBI2jh5gDKJdLFPIHqFoEq9dEv4C27b13v4ujBNB8Lh/vFAkpAw4LeRrdAZqq
      0Gq3nvhbaZKrQPV6nWQy+fQTXRfbcZAkCQlwJQkeDWUkSTr+rywjS9JTs+r1esiyjKo+fQjh
      OA6u6yLL8tCW86gcruuCJKHIZ2sTzu3ro3+P+irLMtIZfDVNE9u2CYVCTz3383yVJQkXzmQT
      zu6r67qPbMjAY/8cXJehTXnS15fP89Urx5N8Hc4B2u32mceXT0LXdRTlLCO8yWGaJrIs0+/3
      L9XuVfhqWRaO4zAYXMwQ8Ulcha+XZXMogGg0+oUzs22bWOz0ycZF8Sw9wCS5Cl+fpQeYJFfh
      62XZFPsAgqlGCEAw1QgBCKYaIQDBVPNMAug2K9RaOq7rkDs4oNtqY1kGrQtYsxcILoNnCIVw
      sYwWpa6L1S5TbXZxex0KbZ03bt8ehiQ8yxb2JLhKu8LX59/m2QXgQjgSZtAc0LE6NMplwtlF
      sqkoHaNPXPMfn3bJ0dWPK8VV2b0Km9Pk60XzTMFwlYZJWJVZXX6ZxbUNZFfCFwxgGuZwN/Oy
      N0xkWUaW5SuxexU2XdedGl8vdSPsqUgS2cWV4aEa9DaeNO1yN6EEgkkhVoEEU40QgGCqEQIQ
      TDVCAIKpRghAMNUIAQimmmfaB+g0yvTlCI5eo96xyKRn0EJ+egbEo9pFlVEguDCeKRTC7rcp
      dWAxGaDVOIS+QbWn8+ad28PH0kR4wMVxldf4RbX5TKEQqqbRr/VxlQjJSADd9rOQ9tHu9YmH
      ri4U4irsXqXNafL1onmmIVCjbRMPSzgDi1BygaV4BF8gQN+82lCIq7B7Vb5eRSjEi3x9nykU
      IrOwdOqfLvt5XIFgUohVIMFUIwQgmGqEAARTjRCAYKoRAhBMNUIAgqnmmXaCD3P36PszBO0m
      lUabZCJNOCxjy2FmYpf7uj6BYBI800ZYOp3kfrFPdjFNs6PTa9XYLRp89c072LZ9JS9utW0b
      13Uv3e5V+Wrb9lT4elk2nykUoniQp1iS6Ja7qPE0kWCIG7MJDqtNsqk4sizj8030ozNPRVGU
      K7F7FTZt+/gDHtPg62XZfKad4OWt2yxvXWBpBIJLRkyCBVONEIBgqhECEEw1QgCCqUYIQDDV
      CAEIphohAMFU82yhEPvb9APzRH09Kq0ByVAAnyrjiFAIwXPKM221zc7OcK/YZ3F1hlIlR2/Q
      JXegi1CIS0KEQkyeZwqFKOQLFEuQCHYpFIusLS/z8poIhbgsRCjE5Hm2UIhrr7N87fhwfnHt
      YkokEFwiYhIsmGqEAARTjRCAYKoRAhBMNUIAgqlGCEAw1QgBCKaaZwqFyO98QEvKEjBLtHp9
      YrEkgaBDKD5PSoRCCJ5DnkEAEotLS7QPbBw5wNpCmL3DLkbL4stLGyIU4hIQoRCT5xlCIVxy
      uUNaLYml2RDFRp+lhTkiUZVKrUlGhEJcOCIUYvI8WyjE5k2WHx0ujPxJFZ8HEzyniEmwYKoR
      AhBMNUIAgqlGCEAw1QgBCKYaIQDBVCMEIJhqzrXT8MmH72NYLvFoEl/QISxCIQTPKecSQDQS
      pVMs0lGC9Fp9EQpxSYhQiMlzLgEEg0Gi6QVmEzERCnGJiFCIyXPCguu6uK47PJYkGUkaP2c2
      u8TsyHFGvajiCQQXyykCGPDt3/7ftNQMmAY/+VPfwC+d9lOB4PnnxCqQLPv56o99DXlgEggE
      TrT+AsGLxAkBOLbJt//4z3H6OsgKuKf9TCB4MTjZAyhB/uqPvU1ADYkeQPDCc+pGmKXr2LKf
      vt7DET2A4AXm1HUmNTbDl14NcFCs4BM9gOAF5tQeoH24y2/9/nfo9zr0T+kBus0a+/kjDF3H
      cW16PeOiyykQXAin9gCJtdf4Ryu3AJBPkcjBwQG6aaG3InRMnZuvvHahhRQILopTBdAtPeTT
      Qpt8scRPfuPrJ4ZBjqSQjPnp9BWiIRXHcbBtV4RCXDAiFGLynCIAF1eSyR/VuLm5euqPspk0
      tY7FWiaBGlbpdg2UYESEQlwwIhRi8pxqIZc/RJMtSo0O66f8PZHKkEh5x7Fo5IKKJxBcLKdO
      gh3HxnYcbHsg9sEELzSn9gC+UIqbNxaQnQG2Az7lsoslEFwOp84BHnzyHoVKi3Akzk+vbF5+
      qQSCS+IUAUj89Z/6W9iOgyTJBMRDk4IXmBMCcGyL3//N/4kyt0oiEuPLb95GjIAELyqnBMMF
      +LGf+AlcvQOKXzw1L3ihObV+D9olZq+/gdU4OjUUopDb5Qff/z6HpSqG3qLW6l10OQWCC+GJ
      oRDqe+8ys3WT4CkSWVheo2vcp98o8xd7Ol/98p0reyjecRyAF3anchSxEzx5ThVAs7DP0itv
      0i08xHLA/xkRdGpHhBJzuJ06G4sa5UaH2XgYWZZRlMudMciyfGV2r8ImMDW+XobNU5dBP/no
      fQ70D5mfXyR7SjSEFp8lLMs4M8fhD47jID16cka6oidorsLuZdu8ymv8oto8ZYAjcfPmS/iD
      YXySe+pOsKIoSJI09l+B4Hnk9J3goEa3UaWuSLguIB6KEbygnCoAJRhldWmegauIZ4IFLzSn
      CsBxbDqdDq2Wge2CIkQgeEE5dR8goKpgD8iurp1YARIIXiROrd6doxza/CZmo4zlXHaRBILL
      49Rl0LYcZTM9oOpfEMMfwQvNqT3AzvYnOLKfw0L+1PcCFfZ32L6/SzFfoFwqUBWhEILnlFPD
      ob/6zjt8+PE2b779zqlzgHK5ihwI4hg6VbPPO28siO8DXAIiFGLyPGEfIMztO3ee+KN0eoZa
      q4cajvHaskqx2iQrvg9w4YiH4ifPuSwsrm6yOHIcnVBhBILLRixyCqYaIQDBVCMEIJhqhAAE
      U40QgGCqEQIQTDVCAIKp5lz7ALv372K5fiJqEF8QFDVJKhaadNkEggvnXAII+H10Wl2wTMol
      k3feWBShEJeACIWYPOcSgKIc/0yLxHl9MShCIS4JEQoxec5lYX5plfkl71h8HUDwvCImwYKp
      RghAMNUIAQimGiEAwVQjBCCYaoQABFPNuQVgGAb2YHAlm1ACwaQ41z5Ap17i/e0ca7NJdMdi
      LrtG/JI3SgSCSXC+WKCH+wz0Ll1do2MNWNMCIhTiEhChEJPnXAJ49c6b1Ot1ZCAc1ag32szO
      xEQoxAUjQiEmz7ktJJPJ4f/PzqgTKYxAcNmIVSDBVCMEIJhqhAAEU40QgGCqEQIQTDVCAIKp
      5lwCMPUerXaXwWCA6zpYlgiFEDyfnC8Uot3k4V6OWDyNK/WZX9zA75900QSCi+dcAgiHw4RC
      GlbfxLAtVNUvQiEuAREKMXnOJYBarYrk18ik08RiGo1mm3RShEJcNCIUYvKcy8LC8joLI8fp
      ZHBCxREILhexCiSYaoQABFONEIBgqhECEEw1QgCCqUYIQDDVnGsZtFE5otLSyaRTqJof3XSJ
      RbRJl00guHDOJQA1HEWp1zjIHdA0DN64fRvXdXFdF8dxJl3Gz+Uq7Qpfn3+b5xJA8WCfSGoB
      X6NOKOyna1jEtOOsXNedaAGfxuNKcVV2vzC2xWDvT8eSlLkbSJHME20+t77+ENo8lwAi0Rjt
      Zp3M/DyaFsQ0DGQ5gCRJKIoy6TJ+LrIsI8vyldidhE3HbNL/7V8YS1O/8a/wvfw3T7Xpuu5z
      66ur17Er98bSlOxrSL6TL1W4rHt6LgHMzi8wO3KsaWL8L3g6duF99G/9/Fha+B/8LlJi5YpK
      JFaBBFOOeJ+hYCrpWzb/8N/8H9EDCKYTF5d62xACEEw3QgCCqUYIQDDVnGsSbOodGh2LcNBH
      UPPRMyEuQiEE56TZNejq1vBYkSUC0uTy7/3Gz2GXPh4e+ze/jvTj/xI4pwD6lkm1XMP02RTa
      Om/cEaEQXySfs+b9ovr6v/7oY771J9vDtHRc45d+7kcn5qfb74DR9I6tHjwqy/ligTQN27aQ
      VI1s2kdH7xPXjt+LchVb5ldldxI2T68UT64sz3NYwmk5HOd9cTZPLcfxBQbOKYB2o0UkGiY5
      O0copGKaJrIsX1koxFXZPc3mk26aJJ3epzvyyWmYLJ/uz3MfCnHKNXh8/8aRJhwKMZ6/JB3n
      D+cUwMzsPDMjsRCaKj6Q8Rin0SD/j//JWFrqF36e8FfffqZ8Ptwp8T/+74djaf/0b79JWBV7
      l0/iNz/6AeVuZ3i8mUrz9c3rn/ubH8qr6bSKdP/LeDCY9pO/iG/zr11Rib44tuOM3RyAuKrx
      pBfKNLoGH+yUxtKsgc2Tbln91/8rnT/4w+GxLzNH9pd+8YnlsT75bVy9PjyWU5s4C2/xe39+
      f+y8O1vzRJ6Tt/4dtJocNBvD40jw6a/r+aEUALgwMMZTLmHi1//gN7Bz3x0eS5E51K/984nk
      3bMs/u2ffHss7e+9dofXE6GJ5O8ObNx+3zt+9P+/t/0Jf36wP0xPqho//9Wv0X/313BGIjN9
      r/w0VvoNfu133hvL95/97FvcXk88U1n69oCO2R9Li/+QjhJ+SAUwGcz79xmUysNjORRCu/36
      E893jj5gcPd3vfNn1mFCApgUA9uiNbKiARAJRp94vjmw6Y4IIzDB+cOgWsW8uz2Wpr3xJe41
      6vz6e98bS/8XX/s6sYlZnhznEoDeblDt9EnFIwTUAIZuEQ7/8O0DdP7gD+n+kdfq+peXP1cA
      zwN/efAu//F7vzKW9ss/858udEdTt3r86299cyzt7975+7xchOovj5dl4Vf+3cTs5hs5jjqH
      w2O/EuDV7GTv37kEsJ8/IqrKPHhQQR+YvPrq812pBJ+P4zrkGntjaR2zA0Qu1O4f3f8Dfufj
      3xoeJ7UZ/v3f+c9U/8OvYhUKw3TttdeI/+zPnMvGuQQgScf/yD6VGU3BGjioPhFVIbgcrL19
      +ru7w2Pf3Ny58zqXAJYW5qi2+6yvRAhqKt2e8blZuYMBg6OjsTRlJoWs/XBOjD7Lr37rXWot
      b1L+pevzfGUrdYUlEkyKYa1tt9vPsPOmEI9oWLaN1ekC0Gq10HX91M0Lu9mk8d/++1ha9G98
      g8Da2qm5u/oAc+nHx9IGhFFarRPnPt6E6/f7J/+WzWLfue0lzMzQarUodTq0TK9CBxSFlUQS
      K7yBPWJXCs9it1r0DZ1B3zvf0LvoeuhUXx3DGLcJ9NQgbrfDVjQ+lu4f2LR75klfpTiaYvPm
      tXGRWX0DTQpxe/bNsfR+r4+UmRu3G4vRarVIyPKY3XAgQKvVwpx9E1ddGqYrkWsMep0TNkN+
      F8u0TtgMEaIXCJzwtdPvI7vOCV+NXhfJDWN9xlfbsMnEfGN2o1oAXddJBzJjdsOBMK1WC2vr
      GnbCy7+/sECr1WIxqKFFvTqc9h372k/dxvF5+Sux60idY18ld4L7zfV6fewL8kMnbft0YZyS
      7jgOkiSd2B18Unqv10OWZdTPLLM9i83zpE/KV2C4K/m0dNM0sW2bUGh86fQqfH0cqvDZMj4p
      /Squ71nSlW9+85vfPPHXc2IYBsGAn/39h3R6JuFwCPnRtnOjlMPyxQg8Ksvj7WjXsdnb3aFU
      qRNLJvE92hpv1koc5Ivk93cJJbOo/uN013GoHBXZ29snNjOLaw+QJIluq06heIQSUAn4fcMb
      cHCQIxp9vADnbYG36xX28wX6NkTC2rAs+7s7VCpVSrUm6VRyGH4wMHXu3dum7yhEIyEMw0AN
      BsjtPaTVNYiEw8jycf7tcg5diRH8rK+uQ+7hA44qdaLxBD7l2KdWvUIuX6CQ2yMYm0ULKMe+
      ug7V8hEPHz4kkkgh4eC6LnqnRb54iOwPEnyar65L6bBA8egIya+hBf1jZSlXqxyWG8ymZ4a+
      dlsN7u3s4A+G0YIBDMPALzs83D+gP3AJaSqyfNwYjdtk2Eg5lsG9Bzs0OzrxeBTlURlLxQOK
      RyVyB3lSsxl8ynG649gU9h5QqLRJJhKYpoGmaZQPC5QqVVQtjO/Rx1BcxyFfyBONRseuL65L
      5ahI4fAQFBVNDSDLMna/x87uHtXyES3DJhmLDH2d+MxVkiT8fj96u86n9x8O081ei4NCgUKh
      QFf3hiv1w12CM8tsrS/wYOR8TQshSRKp7CqRkdjY/N49DqtNHNlH0OelKz4fiiJz76Mf0Ol7
      m2alwzyFQoHDUmWsnLniEVvXrtGpHmI7j8suo2kqkqywsuK9qcB1Bvzl+9+n1myTmZ0ZdRa/
      34/ZbfLxvZ1hcl9vc5A/9rXTM4fpndIuRBfZ2lhkZ2fUVw1ZkkhmlobvVwI43N+hUG4ycCW0
      gNeK+XwKiqLw4NMPaereZ4TKR8VjX4/Kw8Azx7aotnpcu3aNwwNvJUdCIqRpICmsri57Ze9U
      +XD7IT3dJBENe+fLCn6fj+pRjr2it7fSalQpPLqv/YF33e/ff8D6tS1SQZvDem+YHgod39fF
      5VX8I7Vv+6P3qVUrqPFZlJF0n8+H5Dp89OEHeNm7FA72KRQKVOojUZ5Aqdbg2rVrHBU8XxW/
      iupXUAIhlrPehHmgNya/Eea6Lv1+H18ggCwFhumR5DwhJUhQC2MZPXgUBBAMxTgsPqQlQ2hk
      3FirVrCsAYNGlZlUCvVRZV9af4kFx+Fwb5uG7vDYwsCysB2X0KNe5zGr61uoahDp0QV6/Bct
      oHD37l0MyxmmOfaAcrWGzx+kVq8Tmj8OeJIVP19560foGz12dh+ytbn+2Fn6/T6KP4Dqepcy
      lMiwIgcJqhEGphf+4NPitPP7bFdBC3utZq1awbQsrGYNY2ZmWNmzq9fIOA6lgwfUOn3Cj0IS
      LMvCdhxCoRCK7Pm6sraJqgaRpUfBjhIgyTDQuXt3GxTvfriuQ6lSQfGr1Gp1wgvHL+IKRtO8
      9WaKTrNOrlBkZTE7vDZ9a0BQ1QiMfLook11GU4ME/D6skdF0IhFj5942jqWTXvFe8lUplxjY
      EvValWQ8NqzsN159A9u2eLizQ3/mpeH5fasPkoymaQxvqyRxbesGwaDnz2Nk1+Lu3W0c2Yvf
      6Heb1No6Qb9CvdVhNnl87f2h5MXsn7iOC5KP7LwXMddtlMjv71BqmuQOct659gDd0Gm1O0RH
      BJBMzxEJqRiGMRbL12k1KBQK9NoNeiMtvcTx2Dk5mx2KBeDosMDu7g77ew9xRmY7hmHQ6bQJ
      qiEe1yFJ8bGQzWKa+tgY1nUcjop5ytU6nU573FfXxZUUFkZaFr1ZorC/Q7FpsJ/zfMUZoBsG
      zWabyMiwIZmeIxYJY+i9sTlOt9087jHbLbqm19JL0rGv8VSG0EjPcHRUZHd3h/z+LtbjXo3j
      uUOr1SQUHlm3l2QWFhax+jqS7OUx6Bvk83manR7t1siO86MhmS8YJp30yl4uH7H3cIdmOU+5
      6S0U9E0DvdvBdP1EVK8yzs0vEJRt+vb4XK5eLVMsHtFuN0daepDc4/H6fHYR5fFPXJfDR/f1
      4d74/oRpmrRbLUIhz1d/KMZ8OoFh6CiSd19ty5y8AFxnQKVawbZtej3vgsTSCwSCYazmIdG4
      N4zoGz0kJYCu98D1PG9Uy3R0A1f24R+ZwyiKj1gsSnBmmUzU+0O7WafbM+kbveGQBmAmEUfT
      wrhKYExI/X6fbqeDrCjD4YLrDMgXinR6BonYSHiBBGooQtCvsLq24fnqOlTKZZzP+BpJLREI
      hnFap/jqU9H1DqNB8M1amU7PxEbGr3illGWFeDxGIJYhm/B22jutBp2uQd/UsUacTSUTaFqY
      gRQYVpbH33Hu9XpjPSOuQz6fp9vTiY34Kssy4UgURYK1dc9X2+xRqbdw7AHGyIpbNjNHUA3T
      6PaJaF5FN80+imui952x1cXSYZ5up0UgHGek88IfCBINa8wtrDEyCqReq2BaNnqv6zVgkkw0
      pKFpYQLB8QWBfr9Pt9dFHsl8YHY4rDQxTItI2FsskWV58gJQ/Cqvv/YaA71NpeG1lr6ASjyR
      IBaL0mp4UYjxuSUiAYm5dBp/wIveC0UTbKwtYVt9BraX/34uR/Uwj96qUtO9m7+4fp2lTJLC
      wQGDkaY+Eo2RSCToG92xBzIWFhaYzy7g9/mHwpBkmeXVDTaW5ikcepGYjmVyVKlSPCxTzHuB
      ZbLi5/Xbt7HNDuWRsajiDxJPJIh/xtfo7BJRv0MmkyEQ8LpvLRxnY20RyXHGxtH7uRz1owJG
      t0ml480lsivXWMmmOcwfMLA9r8KRKIlEgoHZ5XGypPjJzM2SzWbxj37MWZJYWt1gfXmRw0Nv
      j6ZXy9HodCm3DHL7Xu+lxtK8emOTVq1Ee2Reo6oh4okEmuLQGXmscXFxEV84RTKq4h/ZJE3O
      LrC2sUWvfjh2Pw7yeQr5Ao3qEebI/b5+81WSYT8HheLY+dF4gkQiQbc73iNns9ljX32er75A
      kLW1deYSIcp173yzfjB5Adh9gz/5zh9T65hER9SG61LIPeT+wxyr6+vD5MZRjlh2k5deWmd/
      1+vOCoUCD+7tsDQTom56rs+lk1hKiLnZDJGgp/Lc/Y/5ix98TDieHGtZzF6bu3c/JZLMMNK4
      Uq412drawurWh5XFsQyKRwWqLYuB7l0o2RdAsU0WVzeZGVmacwYWf/qdb1Np6sTGYqFcDg/2
      uL+7z+qa52untI82t8FL1zfI7XlCyhcK7Nx7wOJcjHrPq0Tzsyl6bpDM3ByRkecACruf8u77
      H6BFE2MtnaV3uXv3U4KxueFqm2v36VouW1vXqZW98AHXsTk8zHNU6+KY3WG6Fp+nU6txfXOJ
      RMLz1WiW+c7/+y59148a8Mriuja797cp6TLzSa813t3P89JL18nG/Bw1vElwsVhgd79ALAD9
      kYqeiIYIJdKkU+mxHv+j97/HJw9yJJKJsR68Xa9w9+42mYXx1yq2eiZbW9dpVL0YIrNeIF8s
      Yodmade8CXwgnpm8AGSfj5XVdbLzc2MhzO1qgeTSS9y5sUruwGtxktl1uqVd7m7vsbnldbnZ
      uRSx1Cw1QyId8lwvVRu4AwOf3aLW9fKPJtNsbWw8Wirzzi9W6rz99lcxW5WxOcDCXJrt7W1C
      iVkeN1CKXyMoy6RTMSIjQxfbMnD9KtVKgdbIuFhSFJZX1lnIzh/Pex7RqxcJZ67xpVc2yOW9
      GxHNrGNVH3J3+yHrm54wFjKzhGdS1Ls26ajXMxxWaiiuiWz3qHe8YUckkeLatU0CPt+Y2POl
      Cj/y9jvY3dpwHC37AiRCAba3t5kbqSyy7COoKMzNpQjFvIreLucIhQJUDT/NutcLBkIRVtc3
      Scc1XMczepDb5+adr7AQ81Eb6aW2NtfYvrtNqeuSTXqrSclYhFR6loFPIzgy1Gl2dIxuE7PX
      xBj5Pvbs/AJrK8soSN4k2HVp9izefvstKocH3v2QIBWLsL29zey8t7KlziyhABG6zMxlh+nd
      Sm7yAhgYHXTLotUxaNY9tYViKRpH++zs55lJebtytcIDFEUmtfLS2LJmsVSlW68Q89tUel7l
      CgV9GIZBrtIjGvSKf1SuUG/USKsWpbZ3BWMhje3tbaRAeKyylOsNFEVmaWTyavd1+i6UK3Xa
      zdowXVZ86O0mereHEvBaOccy0AcDGo0mrYa3zKrGUnQqOR48PGBmxvO1UbyPpMgklq6PLWsW
      jsoYjRoRVaI6WtFVPz3dIFdqEh0ZXxePyrQbNVJhidLIxDMeCXNv+y6uEhqK2rb69CwXRZFJ
      J7yxvuMMMB2X0lGZbssbpgXCcVodndrBfcIjjUC7tE/f6DIIZagceUOj1MwMezv3Kbf6xEKe
      eHf3D1ADMuvr62MrVfVWh1q1jGT1GJnXo2BjGAYtwyUwUiur9SaNRg150GY4wpIkgj6J7e17
      hKLeswqu69LSDRRFZnbGm6gbtQNcn4+G5adW8hqkQCgx+WVQJRghHgljO6BFRiPAXVzHJhiK
      4rqe52o4zsFekbZxF9/SEsnYcWuxsrRAtWUSDwdRNe8Cdro9FhYWAQj5JfqPGp3sfIZ6s0NP
      gkxYGbF6PA72444tg0rOgHavz/3dPTbWVpElkAMhIgEfyeU1+rq3fOnYA1zJx3bM1vEAAAcC
      SURBVEJ2noDqCUD2BYmHwww0UEMjk2bXxXUdgmoU1/X6+WA4QbNUoG1s419YJJU4XqlYXV6k
      1OiRiIXwj1Si9oiv4aCC86hZX8jOU2u06TkwFxvdAXdB9hEYWQaVZAWj06A/cMkVS8N1cEn2
      EVUDxJbWGYwMgfq9JtrMAikNwiP3L5xaJmaVwWqRWvBCKFzXZTBwiIVV7JFeMBpSOSzVMO7d
      ZWVtk9Cj5n5+NkWfIEHFZaQNQDf7LCwsISu+sX2AuXSajm4iKz4++zSoz+9HGpsZSFh6F3MA
      +/lDVhbnj697ahV/a5+VlUU6I0NMq9ecvABkxcfyytqJ9GalSDCSYG//IV/Jet+Zj8zMc3tm
      /sT5hq4fr3a0YC0cG7ZoqhYa7gCO7rbHk2niyfRJu60WnXab5a1bY2PIay+9crLwjo1hGuzv
      3icSnyHxqHGRJJloLE40GkVWvEsmyQpLp/jarhbwx2bZffAxb739zjA9lMhw+87JD18Yhn68
      rNtusLqxBY8qRlD1fFUkiccDvlgiRSxxMhiv3mxhdNrMrb08HC7Iio9XXr194lxwj1vcvQeE
      Ysmhr4ovQDwcJaqCz+/56lPDrK2FT+RSqlSJKn0KLYXssndD5hdXmV9cPemrrtPo1JD9QSKx
      xLBFCoUjRKNRJEkeu0/pTJYTd9V1aPd6tItHvHLbixWSJImbr945YdPuG/T7Jvfv75Ca8+qe
      7Atc3pvhIsk5+kaPW6/cHBujPwlZkVEUmVKxgDUyWVrfuIaqqqiqOr6s9wTCqsry5g0i2slN
      kxNIEj7Fh2V0KddGVnUCGhtrK6jqcZjF0wglMlidBq+99vrZfJUVFEWmfFjAHHgt2vrGpufr
      GfKJaCrza9eJh4M8/ezjXdaB2aNUGVmpymyQTRzb9J3h6bH0TIK+f4brSynOcDuQFQVZcjks
      FBl9yHVzcwtVVQkGA0/PR5IJ+ny8dPNVAv6nl1GSJHw+H91WnUbb6+1Cs2uXJ4BQLMXG4hz3
      PvmISrP71PMHVp9uz+DGa3cIfYGHsjeuv4zTq/PBx9unvpdmDNel1+vgj8zw0sb5P9qgRpJc
      W81y/+5HlOrtp55vW326XZ3rt24TVc//yOL61g0ks8UHH306NuF/Er1uB0WL8/LW2rltpjJL
      zMZVPvzBD+iNrl8+gb6pY/QdXnv9NXxnUekpSJLEyzdfoXa0z73dg6ee77ounU6bmfkVVrLj
      /cmlPRNsdlscHFZ45UtfIRp6+tP6QS3C3KzMwNRx3ATnrRbF/B5uMM5feevG01tFSWImNYft
      gm6ahLSnl/M0+nqbXOGIl1//MrHw0595CGhh5uaOu2rbcccmjc/CUT6H7YvwzttbnCWLZHoO
      2wHdMAmf89mMVr1Mpanz1js/SvAMrXEkmkAOWOh6j1g0cqae6rO4rsv+3i6JzCo35p7+XIYk
      K8zNHQ89zb5FMDCyR3AO++ei164TDgWw5SC53D4rKyfHh6NEYonjMeIXZODKyFgU8/tkFlc/
      t9WRZIXMyPzkvBjtGuFQEEvWyOX2nuprOBon/Jn4+fPQd0BmQLmYIzm/OoxGPQ1JksnMf3Ff
      mx0dLajg9GqUiJJJfP6z4YnULF/4rrouSiDEwOxykOs+9foqfpWFhdN9vTQBOLbF/l6RYN0g
      Ej5fy3oe6pUj2j0Tf1Ajc8qk7CJwHZv9vTy+mkHsi4zfnpFmrUSzYxAMBklmLsdXy+hwVK5R
      14Kk1m9dik2Aw/w+5sBBiyZYOf9o9fIEEEnMEYt2cH0wmz7/M5zPyuzsLG61SSQ+M7YTfJFo
      8VnisRa2AunZS/Q1PYdNnXAswRlGIxOz2elZ+DWNxBmGthNBkkin0zQ7OjNfsC5d2iQ4EIqS
      TQaZW75OInp5r1DJLq2hqkE215affvKE8KsRFmeCpJavMxM7uXR4UWQWV1DVINfWV881tj4P
      0WSacCjItWvX0QKXVp1Y27yOqgZZXnhOBGB06hzU+lT2P6FU7zz9BxNib+ceg8GAT7YfPH0V
      aEJYvSZ7FZN67hOOaiefY74ocg/vH/t69x4X/x69Y+qlAj1zwN1PP6J7hlWgSXHv048YDAY8
      2Hv6KtDncWkC6LVqzG/c5OUbGzQqlaf/YEIYlsOtW6/iZ3Dqa7gvxGa7Snr1JjdvbNKoVC/H
      KNAzbW7dehVVdsZCwi+SSqPNrVuvspSK0tJPvpjgQnAdXCXArVuvMjCevqT+eVzaHCCZWWZn
      Z4ea47KyvnVZZpmdibO9vU3wM/HnF0lkdoXyzg53D12W1jYvxygwl0qwvb2NX4uNPW54kawt
      L7C9fRdJ9rE5d0lDW0kmqgXYvnuXeOrkzvozZXUZb4W4SJ70VoiL5ip8fdJbIS6aq/D1smyK
      17kJphohAMFU8/8B7jEGPnxjDBoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Year Bins of 5 top 5 car make' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Year vs Count' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
