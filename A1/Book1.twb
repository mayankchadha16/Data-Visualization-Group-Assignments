<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Output' inline='true' name='federated.0wuu1aa04spejk19zr0px047ja3a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Output' name='textscan.13gyzca10bwr2g1g8exct11tiewa'>
            <connection class='textscan' directory='E:/IIITB/Semester 7/DV/Assignment/A1/Data-Visualization-Group-Assignments/A1' filename='Output.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.13gyzca10bwr2g1g8exct11tiewa' name='Output.csv' table='[Output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='County' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='integer' name='Postal Code' ordinal='3' />
            <column datatype='integer' name='Model Year' ordinal='4' />
            <column datatype='string' name='Make' ordinal='5' />
            <column datatype='string' name='Model' ordinal='6' />
            <column datatype='string' name='Electric Vehicle Type' ordinal='7' />
            <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='8' />
            <column datatype='integer' name='Electric Range' ordinal='9' />
            <column datatype='integer' name='Base MSRP' ordinal='10' />
            <column datatype='integer' name='Legislative District' ordinal='11' />
            <column datatype='real' name='Longitude' ordinal='12' />
            <column datatype='real' name='Latitude' ordinal='13' />
            <column datatype='string' name='Electric Utility' ordinal='14' />
            <column datatype='integer' name='2020 Census Tract' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.13gyzca10bwr2g1g8exct11tiewa' name='Output.csv' table='[Output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='County' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='integer' name='Postal Code' ordinal='3' />
            <column datatype='integer' name='Model Year' ordinal='4' />
            <column datatype='string' name='Make' ordinal='5' />
            <column datatype='string' name='Model' ordinal='6' />
            <column datatype='string' name='Electric Vehicle Type' ordinal='7' />
            <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='8' />
            <column datatype='integer' name='Electric Range' ordinal='9' />
            <column datatype='integer' name='Base MSRP' ordinal='10' />
            <column datatype='integer' name='Legislative District' ordinal='11' />
            <column datatype='real' name='Longitude' ordinal='12' />
            <column datatype='real' name='Latitude' ordinal='13' />
            <column datatype='string' name='Electric Utility' ordinal='14' />
            <column datatype='integer' name='2020 Census Tract' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Model Year]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Model Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Make</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Make]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Make</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Vehicle Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electric Vehicle Type]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Electric Vehicle Type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Clean Alternative Fuel Vehicle (CAFV) Eligibility]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Range</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Electric Range]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Electric Range</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base MSRP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Base MSRP]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Base MSRP</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Legislative District</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Legislative District]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Legislative District</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Utility</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electric Utility]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>Electric Utility</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020 Census Tract</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2020 Census Tract]</local-name>
            <parent-name>[Output.csv]</parent-name>
            <remote-alias>2020 Census Tract</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Output.csv_7AEBC21752EC4D979349D6897C77B355]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='string' name='[Make]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Model Year (bin)' datatype='integer' name='[Model Year (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Model Year]' peg='0' size='5' />
      </column>
      <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
      <column datatype='integer' default-format='*000' name='[Postal Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Output.csv' datatype='table' name='[__tableau_internal_object_id__].[Output.csv_7AEBC21752EC4D979349D6897C77B355]' role='measure' type='quantitative' />
      <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
      <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
      <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
      <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:County:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Postal Code:ok]' type='palette'>
            <map to='#499894'>
              <bucket>98010</bucket>
            </map>
            <map to='#499894'>
              <bucket>98037</bucket>
            </map>
            <map to='#499894'>
              <bucket>98072</bucket>
            </map>
            <map to='#499894'>
              <bucket>98118</bucket>
            </map>
            <map to='#499894'>
              <bucket>98188</bucket>
            </map>
            <map to='#499894'>
              <bucket>98236</bucket>
            </map>
            <map to='#499894'>
              <bucket>98261</bucket>
            </map>
            <map to='#499894'>
              <bucket>98286</bucket>
            </map>
            <map to='#499894'>
              <bucket>98326</bucket>
            </map>
            <map to='#499894'>
              <bucket>98355</bucket>
            </map>
            <map to='#499894'>
              <bucket>98377</bucket>
            </map>
            <map to='#499894'>
              <bucket>98408</bucket>
            </map>
            <map to='#499894'>
              <bucket>98502</bucket>
            </map>
            <map to='#499894'>
              <bucket>98538</bucket>
            </map>
            <map to='#499894'>
              <bucket>98577</bucket>
            </map>
            <map to='#499894'>
              <bucket>98604</bucket>
            </map>
            <map to='#499894'>
              <bucket>98635</bucket>
            </map>
            <map to='#499894'>
              <bucket>98670</bucket>
            </map>
            <map to='#499894'>
              <bucket>98823</bucket>
            </map>
            <map to='#499894'>
              <bucket>98853</bucket>
            </map>
            <map to='#499894'>
              <bucket>98938</bucket>
            </map>
            <map to='#499894'>
              <bucket>99013</bucket>
            </map>
            <map to='#499894'>
              <bucket>99109</bucket>
            </map>
            <map to='#499894'>
              <bucket>99137</bucket>
            </map>
            <map to='#499894'>
              <bucket>99180</bucket>
            </map>
            <map to='#499894'>
              <bucket>99324</bucket>
            </map>
            <map to='#499894'>
              <bucket>99361</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98001</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98028</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98055</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98107</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98148</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98225</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98251</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98276</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98311</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98339</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98368</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98396</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98445</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98528</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98565</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98591</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98620</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98650</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98802</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98844</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>98925</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>99001</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>99030</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>99125</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>99163</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>99216</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>99349</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98005</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98032</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98059</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98112</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98166</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98230</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98256</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98281</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98320</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98346</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98373</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98404</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98467</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98533</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98571</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98596</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98626</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98662</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98815</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98848</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>98934</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>99006</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>99036</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>99131</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>99170</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>99224</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>99354</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98019</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98042</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98087</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98124</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98203</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98241</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98266</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98294</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98330</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98359</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98383</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98421</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98507</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98547</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98583</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98610</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98641</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98674</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98831</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98858</bucket>
            </map>
            <map to='#79706e'>
              <bucket>98943</bucket>
            </map>
            <map to='#79706e'>
              <bucket>99019</bucket>
            </map>
            <map to='#79706e'>
              <bucket>99114</bucket>
            </map>
            <map to='#79706e'>
              <bucket>99141</bucket>
            </map>
            <map to='#79706e'>
              <bucket>99202</bucket>
            </map>
            <map to='#79706e'>
              <bucket>99336</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98011</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98038</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98074</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98119</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98198</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98237</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98262</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98288</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98327</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98356</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98380</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98409</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98503</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98541</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98579</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98605</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98638</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98671</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98826</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98855</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>98940</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>99016</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>99110</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>99138</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>99181</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>99326</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>99362</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98006</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98033</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98065</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98115</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98168</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98232</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98257</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98282</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98321</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98349</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98374</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98405</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98498</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98535</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98572</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98597</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98629</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98663</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98816</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98849</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>98935</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>99008</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>99037</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>99133</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>99171</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>99301</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>99356</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98026</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98052</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98105</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98144</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98223</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98249</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98274</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98305</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98337</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98366</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98392</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98443</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98526</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98563</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98589</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98617</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98648</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98686</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98841</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98922</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>98952</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>99027</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>99122</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>99159</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>99208</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>99346</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98002</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98029</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98056</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98108</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98155</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98226</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98252</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98277</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98312</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98340</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98370</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98401</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98446</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98530</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98568</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98592</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98621</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98651</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98812</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98845</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>98926</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>99003</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>99031</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>99126</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>99166</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>99217</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>99350</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98023</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98050</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98103</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98134</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98220</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98247</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98272</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98303</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98335</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98363</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98390</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98438</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98520</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98557</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98587</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98614</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98645</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98684</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98837</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98903</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98948</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>99025</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>99119</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>99155</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>99206</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>99343</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98007</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98034</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98068</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98116</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98177</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98233</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98258</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98283</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98323</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98351</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98375</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98406</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98499</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98536</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98575</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98601</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98631</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98664</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98821</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98850</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>98936</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>99009</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>99039</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>99134</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>99173</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>99320</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>99357</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98020</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98043</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98092</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98125</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98204</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98243</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98267</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98295</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98331</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98360</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98385</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98422</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98512</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98548</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98584</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98611</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98642</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98675</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98832</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98862</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>98944</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>99021</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>99115</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>99143</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>99203</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>99337</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98021</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98045</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98101</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98126</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98206</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98244</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98270</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98296</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98332</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98361</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98387</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98424</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98513</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98550</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98585</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98612</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98643</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98682</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98833</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98901</bucket>
            </map>
            <map to='#d37295'>
              <bucket>98946</bucket>
            </map>
            <map to='#d37295'>
              <bucket>99022</bucket>
            </map>
            <map to='#d37295'>
              <bucket>99116</bucket>
            </map>
            <map to='#d37295'>
              <bucket>99147</bucket>
            </map>
            <map to='#d37295'>
              <bucket>99204</bucket>
            </map>
            <map to='#d37295'>
              <bucket>99338</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98024</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98051</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98104</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98136</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98221</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98248</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98273</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98304</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98336</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98365</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98391</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98439</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98524</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98562</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98588</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98616</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98647</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98685</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98840</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98908</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>98951</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>99026</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>99121</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>99156</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>99207</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>99344</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98027</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98053</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98106</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98146</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98224</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98250</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98275</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98310</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98338</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98367</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98394</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98444</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98527</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98564</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98590</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98619</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98649</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98801</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98843</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98923</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98953</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>99029</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>99123</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>99161</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>99212</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>99347</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98012</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98039</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98075</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98121</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98199</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98239</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98263</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98290</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98328</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98357</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98381</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98411</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98504</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98542</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98580</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98606</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98639</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98672</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98828</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98856</bucket>
            </map>
            <map to='#e15759'>
              <bucket>98941</bucket>
            </map>
            <map to='#e15759'>
              <bucket>99017</bucket>
            </map>
            <map to='#e15759'>
              <bucket>99111</bucket>
            </map>
            <map to='#e15759'>
              <bucket>99139</bucket>
            </map>
            <map to='#e15759'>
              <bucket>99185</bucket>
            </map>
            <map to='#e15759'>
              <bucket>99328</bucket>
            </map>
            <map to='#e15759'>
              <bucket>99403</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98008</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98036</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98070</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98117</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98178</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98235</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98260</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98284</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98325</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98354</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98376</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98407</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98501</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98537</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98576</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98603</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98632</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98665</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98822</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98851</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>98937</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>99011</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>99101</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>99135</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>99179</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>99323</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>99360</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98003</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98030</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98057</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98109</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98158</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98227</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98253</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98279</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98314</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98342</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98371</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98402</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98465</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98531</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98569</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98593</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98624</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98660</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98813</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98846</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>98930</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>99004</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>99032</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>99129</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>99167</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>99218</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>99352</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98022</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98047</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98102</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98133</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98208</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98245</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98271</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98297</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98333</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98362</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98388</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98433</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98516</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98555</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98586</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98613</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98644</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98683</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98834</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98902</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>98947</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>99023</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>99118</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>99148</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>99205</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>99341</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98014</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98040</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98077</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98122</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98201</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98240</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98264</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98292</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98329</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98358</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98382</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98418</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98506</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98546</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98582</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98607</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98640</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98673</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98830</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98857</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>98942</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>99018</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>99113</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>99140</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>99201</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>99330</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98004</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98031</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98058</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98110</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98164</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98229</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98255</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98280</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98315</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98345</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98372</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98403</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98466</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98532</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98570</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98595</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98625</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98661</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98814</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98847</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>98932</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>99005</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>99033</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>99130</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>99169</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>99223</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>99353</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;No&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Make:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;CHRYSLER&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RIVIAN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LUCID&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TESLA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BMW&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MITSUBISHI&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;FORD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GENESIS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TH!NK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FIAT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SMART&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AZURE DYNAMICS&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;VOLVO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LEXUS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ALFA ROMEO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MAZDA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TOYOTA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WHEEGO ELECTRIC CARS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BENTLEY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;POLESTAR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HYUNDAI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JEEP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HONDA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JAGUAR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LAND ROVER&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LINCOLN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CHEVROLET&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SUBARU&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;KIA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CADILLAC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PORSCHE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MERCEDES-BENZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NISSAN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FISKER&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;VOLKSWAGEN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AUDI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MINI&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='County' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='Calculation_585468016148455424' />
        <field-sort-custom-order field='Model Year' />
        <field-sort-custom-order field='Make' />
        <field-sort-custom-order field='Model' />
        <field-sort-custom-order field='Electric Vehicle Type' />
        <field-sort-custom-order field='Clean Alternative Fuel Vehicle (CAFV) Eligibility' />
        <field-sort-custom-order field='Electric Range' />
        <field-sort-custom-order field='Base MSRP' />
        <field-sort-custom-order field='Legislative District' />
        <field-sort-custom-order field='Longitude' />
        <field-sort-custom-order field='Latitude' />
        <field-sort-custom-order field='Electric Utility' />
        <field-sort-custom-order field='2020 Census Tract' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Output.csv' id='Output.csv_7AEBC21752EC4D979349D6897C77B355'>
            <properties context=''>
              <relation connection='textscan.13gyzca10bwr2g1g8exct11tiewa' name='Output.csv' table='[Output#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='County' ordinal='0' />
                  <column datatype='string' name='City' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='integer' name='Postal Code' ordinal='3' />
                  <column datatype='integer' name='Model Year' ordinal='4' />
                  <column datatype='string' name='Make' ordinal='5' />
                  <column datatype='string' name='Model' ordinal='6' />
                  <column datatype='string' name='Electric Vehicle Type' ordinal='7' />
                  <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='8' />
                  <column datatype='integer' name='Electric Range' ordinal='9' />
                  <column datatype='integer' name='Base MSRP' ordinal='10' />
                  <column datatype='integer' name='Legislative District' ordinal='11' />
                  <column datatype='real' name='Longitude' ordinal='12' />
                  <column datatype='real' name='Latitude' ordinal='13' />
                  <column datatype='string' name='Electric Utility' ordinal='14' />
                  <column datatype='integer' name='2020 Census Tract' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Base MSRP vs count'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Base MSRP]' role='measure' type='quantitative' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Base MSRP]' derivation='None' name='[none:Base MSRP:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Base MSRP:ok]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]</cols>
      </table>
      <simple-id uuid='{83979604-1097-462B-9756-AD321530B8A1}' />
    </worksheet>
    <worksheet name='City vs Count Top 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[City]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{AB224893-97ED-4D84-988F-3554E19276BC}' />
    </worksheet>
    <worksheet name='Clean Alt fuel vs count '>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[pcto:cnt:2020 Census Tract:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[pcto:cnt:2020 Census Tract:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3DE6DD09-EBF9-4D8D-86EF-799115738A0E}' />
    </worksheet>
    <worksheet name='Country vs Count Top 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]</cols>
      </table>
      <simple-id uuid='{F16BE46A-B475-44C6-94E3-2D1BA68E5C29}' />
    </worksheet>
    <worksheet name='Electric Range and Clean Alt fuel vs count'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Range]' derivation='None' name='[none:Electric Range:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Range:qk]</cols>
      </table>
      <simple-id uuid='{E91EC7E7-03B5-428F-9003-19056E4D4E07}' />
    </worksheet>
    <worksheet name='Electric Range vs Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Electric Range]' derivation='None' name='[none:Electric Range:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Range:qk]</cols>
      </table>
      <simple-id uuid='{535312D3-0567-435B-80AF-DB6EAB88359D}' />
    </worksheet>
    <worksheet name='Electric Range vs Make'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[Electric Range]' derivation='Median' name='[med:Electric Range:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Range]' derivation='Sum' name='[sum:Electric Range:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:Electric Range:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[med:Electric Range:qk]</cols>
      </table>
      <simple-id uuid='{D8868698-5F59-4260-9389-323A47162E9E}' />
    </worksheet>
    <worksheet name='Electric Vehicle Type distributon Electric Range'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Electric Range]' derivation='None' name='[none:Electric Range:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]</rows>
        <cols>([federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk] * [federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Range:qk])</cols>
      </table>
      <simple-id uuid='{3C5F1BEF-3432-4528-A6DA-D39A97E00B1F}' />
    </worksheet>
    <worksheet name='Electric Vehicle Type vs Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[pcto:cnt:2020 Census Tract:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1063' />
            <format attr='height' value='624' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' />
              <wedge-size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]' />
              <size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[pcto:cnt:2020 Census Tract:qk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5518D831-30DD-4CA6-AC89-B77DC1C89250}' />
    </worksheet>
    <worksheet name='Make vs Count Bottom 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;TESLA&quot;</bucket>
              <bucket>&quot;NISSAN&quot;</bucket>
              <bucket>&quot;CHEVROLET&quot;</bucket>
              <bucket>&quot;FORD&quot;</bucket>
              <bucket>&quot;BMW&quot;</bucket>
              <bucket>&quot;KIA&quot;</bucket>
              <bucket>&quot;TOYOTA&quot;</bucket>
              <bucket>&quot;VOLKSWAGEN&quot;</bucket>
              <bucket>&quot;VOLVO&quot;</bucket>
              <bucket>&quot;JEEP&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' value='110' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</cols>
      </table>
      <simple-id uuid='{0178FE10-642B-4ADA-8761-B627C3E641F9}' />
    </worksheet>
    <worksheet name='Make vs Count Top 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' value='104' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</cols>
      </table>
      <simple-id uuid='{035D2317-1B13-4D49-9B47-835EAC2F788E}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[Longitude (generated)]' field-type='quantitative' max='-2491469.7819877751' min='-17546525.979544815' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[Latitude (generated)]' field-type='quantitative' max='8960518.7023174055' min='277261.38429628313' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[Latitude (generated)]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7ED345BC-6659-4718-B98C-0445D666072D}' />
    </worksheet>
    <worksheet name='Percentage Acquired by each Make in Circles'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[pcto:cnt:2020 Census Tract:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1143' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[pcto:cnt:2020 Census Tract:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5E129772-EE2E-4EBC-88DE-D9C35F7E7A12}' />
    </worksheet>
    <worksheet name='Top 10 Make distribution count per top 10 City'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[City]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Make:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;BENTLEY&quot;' />
                    <groupfilter function='member' level='[none:Make:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]</column>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' value='113' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</cols>
      </table>
      <simple-id uuid='{2B4A738C-D646-4D8D-8B13-6357344D4263}' />
    </worksheet>
    <worksheet name='Top 10 Make distribution count per top 10 County'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]</column>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' value='107' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</cols>
      </table>
      <simple-id uuid='{5F822B81-4B7D-4DCD-9BF3-C98E95002E81}' />
    </worksheet>
    <worksheet name='Top 10 Model with Highest Electric Range'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[2020 Census Tract]' derivation='Sum' name='[sum:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Electric Range]' derivation='Sum' name='[sum:Electric Range:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Electric Range])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;VOLVO&quot;</bucket>
              <bucket>&quot;JEEP&quot;</bucket>
              <bucket>&quot;CHRYSLER&quot;</bucket>
              <bucket>&quot;FORD&quot;</bucket>
              <bucket>&quot;VOLKSWAGEN&quot;</bucket>
              <bucket>&quot;TOYOTA&quot;</bucket>
              <bucket>&quot;AUDI&quot;</bucket>
              <bucket>&quot;BMW&quot;</bucket>
              <bucket>&quot;KIA&quot;</bucket>
              <bucket>&quot;CHEVROLET&quot;</bucket>
              <bucket>&quot;NISSAN&quot;</bucket>
              <bucket>&quot;TESLA&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='575' />
            <format attr='width' value='1126' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
              <wedge-size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:2020 Census Tract:qk]' />
              <size column='[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:Electric Range:qk]' />
              <text column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3CDFFB71-4875-44E0-8061-368D23DD4B3F}' />
    </worksheet>
    <worksheet name='Top 5 car Make per year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Make:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;WHEEGO ELECTRIC CARS&quot;' />
                    <groupfilter function='member' level='[none:Make:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:ok]'>
            <groupfilter from='2011' function='range' level='[none:Model Year:ok]' to='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:ok]</column>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]</rows>
        <cols>([federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:ok] / [federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk])</cols>
        <show-full-range>
          <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[Model Year (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{A383FFBD-1E2F-461E-9B71-C3EC2B5CA7D8}' />
    </worksheet>
    <worksheet name='Year Bins of 5 top 5 car make'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Model Year (bin)' datatype='integer' name='[Model Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Model Year]' peg='0' size='5' />
            </column>
            <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model Year (bin)]' derivation='None' name='[none:Model Year (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2020 Census Tract])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year (bin):ok]</cols>
      </table>
      <simple-id uuid='{BC4016A8-1CE2-4E63-BC7E-08116BC663D6}' />
    </worksheet>
    <worksheet name='Year vs Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output' name='federated.0wuu1aa04spejk19zr0px047ja3a' />
          </datasources>
          <datasource-dependencies datasource='federated.0wuu1aa04spejk19zr0px047ja3a'>
            <column datatype='integer' name='[2020 Census Tract]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
            <column-instance column='[2020 Census Tract]' derivation='Count' name='[cnt:2020 Census Tract:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]</rows>
        <cols>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:ok]</cols>
      </table>
      <simple-id uuid='{0B34D95F-ED4D-47BC-A343-F9247A50FBFF}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Country vs Count Top 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{66E4DD17-19FB-43A8-86A3-E7774C6B4A7F}' />
    </window>
    <window class='worksheet' name='City vs Count Top 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90128FB6-3F46-4B0C-855C-6D6962401BA7}' />
    </window>
    <window class='worksheet' name='Top 10 Make distribution count per top 10 County'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{62D74AB5-6E45-4FD1-B9D3-E28E8445EB14}' />
    </window>
    <window class='worksheet' name='Top 10 Make distribution count per top 10 City'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:City:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F72A3CF-088E-4EF0-A27F-AF4EDD7868C4}' />
    </window>
    <window class='worksheet' name='Top 10 Model with Highest Electric Range'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:Electric Range:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E917746-B431-469E-A879-35B652F706D9}' />
    </window>
    <window class='worksheet' name='Make vs Count Bottom 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{06AD46AB-6D72-47FF-BDA6-F1E3CF624E02}' />
    </window>
    <window class='worksheet' name='Make vs Count Top 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8CA0320B-E6F3-4FA9-BD95-41A402E3C388}' />
    </window>
    <window class='worksheet' name='Percentage Acquired by each Make in Circles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75B5742E-FE6B-4676-A2CB-53C33A2B2A82}' />
    </window>
    <window class='worksheet' name='Electric Vehicle Type vs Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[cnt:2020 Census Tract:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CA894AD-8383-437C-BF40-07E6C25A76B2}' />
    </window>
    <window class='worksheet' name='Electric Range vs Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Range:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7344A786-75A5-490B-922C-CFC1EED69858}' />
    </window>
    <window class='worksheet' name='Electric Range vs Make'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{875A0F0B-0A34-41D4-BA6D-8164F7E791D1}' />
    </window>
    <window class='worksheet' name='Year vs Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3BCC2AB9-0C11-4699-8847-979960C07488}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:County:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Postal Code:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D26E0479-1367-432C-AD7E-EB7F48CD56C6}' />
    </window>
    <window class='worksheet' name='Top 5 car Make per year'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:ok]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F75E976A-61B0-427D-895B-B741BEBED746}' />
    </window>
    <window class='worksheet' name='Year Bins of 5 top 5 car make'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Make:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Model Year (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F1D80717-9FFE-4B6B-A4B3-8D2E0A1B4296}' />
    </window>
    <window class='worksheet' name='Clean Alt fuel vs count '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A0C60CB-87D9-4723-9490-45C6DE8D1C38}' />
    </window>
    <window class='worksheet' name='Electric Range and Clean Alt fuel vs count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='size' />
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Range:qk]</field>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[sum:Electric Range:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54AB937E-D03E-4F12-A9CC-176A7984CFD5}' />
    </window>
    <window class='worksheet' name='Electric Vehicle Type distributon Electric Range'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Electric Vehicle Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BE18094-259C-492E-8F66-324EE7FA32F1}' />
    </window>
    <window class='worksheet' maximized='true' name='Base MSRP vs count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wuu1aa04spejk19zr0px047ja3a].[none:Base MSRP:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7E0FCDA-AD69-4A14-9869-61FCAF9247CC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Base MSRP vs count' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='City vs Count Top 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Clean Alt fuel vs count ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAGP0lEQVR4nO3aXW8baR2G8XvGM7YTx0m3oVXaZluasi+sxC4gsRLSIpCQkOAEIfEZ9iPA
      B+KYQwQnoBUKWlVUVOxrt9ltU4e0225eHTv2vHgeDrqliVRX0KX2tvf1O0lmxgf/kXzZM884
      CiEEAabiaQ8ATBMBwFpydCOUmaq9zrRmASbuWADVXkeHv/vVtGYBJo5LIFgjAFgbG8B7mwNJ
      Qe9tDh/uLEtd3y4nMBYwGcm4A7f3S71+7v7f/YOudrOg7yw3tLEbtNsvNejl6hZBb5yf1T87
      h0obiRabkRZrQffSVM2i1N2dQt1C+vn359WOo0meF/BfGX8JFKQHj8iipKafrMyoOxjp72s9
      tduJknpNP1pp6sbGQMvLLb2gSr2s0qfDoOH2QP1Q01wr0Q8WU3V51IavqbEBvHIy0R8+ONDF
      paaW5hOlaazFVqJfv/mCsl6h0/OJGmlNL5+f0dadQw3rid5aritJE7UbNb22lGppPlG7nWiW
      D398TUVHfwox2lpjGRRWWAWCtccEELR6vadCUpGVWl2/vxpUVUF//rCrv94cKM9HeufagW7t
      l7ryWU+bvZE6O7mqycwOfGVjA+jcGer9u4UKBa3eGGjrIJckFXmha1ulzp9MdfnTvgYhUhIF
      DaNIH9zs6/KtgbYGJIBnwyMDqEaV/nS9r36/0OrHB7q2W+qj25m6eVC9kertt07oymd9bQ8r
      /fDijP5xa6hyONLOSJpvxHq/czjp8wCeyCOfA8S1WG//+Bu6eqOvb6+09DNJ797oqxqW2s6l
      y+sDJY2a3jyd6C+f9HVusaFXFyKdKWJtbPY1225M+DSAJ8MqEKyxCgRrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrybGtKJbqrSmNAkzesQBC2dbhF7+Y1izAxB0LoMoyZdc+mdYswMRxDwBrYwKI
      FbdmJUWKZ2cmOhAwScmjd1eqv/Kqyq196fCeaksvK3TvKkQtJSfqytbWJzok8LSMvQTK1jbU
      vHBClRbUWDmr5huvK31xWWGS0wFP2dgAwsG+yt5AIRsoZLmK9Y5Gu3uqX/qWYu4c8JwYcwkk
      SbmGVz+SJPVX35UUpBCpWF8TXwN4XjwmgCPCg3d84M2P58rjL2aSL/tI61LtyEuT9MvtSFG9
      fvy1XB/hGTL+G2B2QQu//Km6v/+j6i9dUnJqQf13/ialLTVfW1FtvqVyL1MUVYqikaL2oqov
      OgpJU9mHH0/wFIAnN+bjOlLj0vn7y535QFUuRaG8f6joq7i3r9HOtqp8pHhuTiEbSHGs2tll
      JaeW1HjpwsROAPgqHh1AXJMUq/7Ni0pfPKfQ/Vyjoqa4mSqaO6XmhZPKN+6o1m4qW1tT1JrT
      4MpVFbfWNer1FTV4eIZnQxTCf+5wlXc29Plvfvvw4MyMQpYrOXtWobenKq+kKig5c1oqMhV3
      d5SeOa3y9qZCnEqjXPHCokJ/TyErp3JCwP/isatAYTCQJJX/2ji2v7i5/vD/zoNjmSSp2tn6
      /00HPGUs2cAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAa
      AcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAa
      AcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAa
      AcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAaAcAa
      AcAaAcAaAcAaAcAaAcAaAcAaAcBacnQjnmmq+b3vTmsWYOL+DXTapZirwpjCAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Country vs Count Top 10' width='192'>
      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
      Ej3uFYEzNMUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Electric Range and Clean Alt fuel vs count' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAeBUlEQVR4nO2daXBc2XXff++93tFoNPaVAAmCK7jNzpnRaDKjJVZkV9lJyrIrVSp/iFOx
      /S2y46q4lCiLnUTlbC5LcWVRRVasxNF4XImtdWa0j6RZJJJDEiQAYiWWbgC972+7+dAASAzR
      IhrdfPME3l8VCujXfc77d+Oefufee969ihBCIJE8pKjvtQCJ5L2k6QEghMC27X3bG4bR0Pkt
      y2rI/iD5cIMGt/ioZf9AAqARGgmeZpz/IPlwgwa3+Khl77oUSFVdJ0lygHFda1MU5b2WIHmI
      8NTzYmFbTN6YIBDpgkqGom4z1N9DiSC5RJyxsdEHpVMieSDUFQCV/DrxZJEurUBQE5h6BUMv
      c+mdqzz65EVs28a27YY6wrqu78tuCzd0uNziww0a3OKjln1dAaD5gkTb21HMMuHuPjpaUqwk
      C4yOHWM9HqO77ch2TrXfXN62bTyeumTdQ6P2B8mHGzS4xcdu9nV59AbaGOkrY3tbCGoma6Uw
      J491YggNo1JqSBwI7MwKlHPQcwJkX0DiAHWHVLSrd/vvkXAUAD/g94YB2O9glV3YoPA//zaY
      Ourf+a94hh7fpyeJZO+4ZxTItsAyQVhgNdYPkEj2SuOJWZNQwr2EfvWLmKUM2qEn3ms5kocE
      9wSAoqB1n8A2DDkXIHEM96RAm8jGL3ES1wWAROIkrguAZkyaSCR7xXUBIFMgiZPU1wkWgoXZ
      aYS/lTafYDGe4dTYEEXbRzGTYGBgoGFBshpU4iT11QIVEyysJDk0EiaezDI+GmVqZplUIc/w
      4aMIIXb87AfLshq6Cti23XAadVB8uEGDW3zUsq97GLSzdwA9l8JQFEzDQtVUAv7AjiI2RVEa
      asSN2jaaRh0UH27Q4BYftezrCgBfqJNWbwrR0sVASGUmlub46CAly0cpl4S7TtJIKtOIrW3b
      DadRB8WHGzS4xUct+7oCQFEUho8c23483t4NgBeIhKo1Qo3e/KZpWoMeJJK9I3uckoca1wWA
      XKZI4iSuC4BGV4WQSOrBdQEg5wEkTuK61iZngiVO4roAkEicxHUBIPsAEiepsxbIZu7WNARa
      6QhpLMcTjIwcRvH4MMoF2traHpBMieTBUNcVwNJLLK8l6GhvZ35hkXBbB14zy+LSEvFkvjmC
      ZCdY4iBKPfsDCGGj6zoT128wfnacwto8KxnB8mqMsxcepbe9ZXthrP12Zk3TbGj9F8uyGp5N
      Pig+3KDBLT5q2dfV0myjzK3pWQKtUdZXl0gkCxwaPkTP4DC5ZAyls7XhhbGEEHIxqCb6cIMG
      t/jYzb6uK8Be2OrE7jcAKpUKfr9/3+dv9ApykHy4QYNbfNSyd13CLfsAEidxXWuTE2ESJ3Fd
      AEgkTuK6AJCrQkicxHUBIFMgiZO4LgBkJ1jiJLK1SR5q6gsAISjkc+SLJWzLpFAsIWwLyxYN
      7++7hSyGkzhJfTPBZoUbk1MMj4yyMn8LYRuE2row1ACFTIazp4/d38l9kLdESpykvqk1VaOt
      JcT8/AKRSIgTRwaYuLbKfGySi88935RN8oQQmKa5L1twx4ZsbvHhBg1u8dGUTfKEZaCbFh6v
      F79icenKDMPDh2gbOsTqwiwd4ycbrgUCWf/STB9u0OAWHw1vkqf5QoyfObP9+Mhdzw11V+8F
      aDSBkSmQxElcNwokO8ESJ3FdAMh5AImTuK61yZlgiZO4LgAkEidxXQDIPoDESVwXABKJk7gu
      AGQnWOIksrVJHmrqnlrbWJ5nbqNE1GdhCJWh3k5ydoBsYo1TJ2UtkORni7oCwNKLJIqCFq8g
      EAhQSqcplsNcvvoOF9/XnFogwzAaGgp1Q92JW3y4QYNbfDSlFsg0DEy9xNJKjLOnj9PW4iVX
      0Dl15hzLC3N0jJ+Q6wK5zIcbNLjFR9PWBTIMA4RFoWzQFg5hCQXbMvH6fIgG1wWSa+E0z4cb
      NLjFRy37fXn0er2Al6gvcMeJ5gMaL4aTSJzEdaNAclUIiZO4LgBkLZDESWoGQDabBQS5XHOW
      Pd8rciJM4iS79gGKqTj/4wt/ztjYKK1dh3juyfNO65JIHGHXAAi2dfHsM88wfuYUq/GUo4Jk
      MZzESXbNNxRVo5iK893vfJeltbSjguRMsMRJaibcp8+eRfP46O/tdFJPwzuJSCT1UHMe4OqN
      afRyjthqjLHh/u3jhVScufUSPS0KK+sZjh09REkEyKfWOTwy7IhoiaRZ1AyAaLSD9tYAoe47
      jV/YJguxNKqwSOU1zp3s4+ZUjOXEBmfPX2hKLVAjawKBO+pO3OLDDRrc4qPuWqDVmXfIKFHO
      th3aPlbOpShXdNbX1xno7SafLeAN+hgaGiKdztDX0br92v0OZ1qWJetfmujDDRrc4mPPtUCx
      WIz2aATDtPH6/Ph93h3PZ7NZfJpgKZ7hyFA3ZeFFL+aItrc3XAtkGMZmqcX+cEPdiVt8uEGD
      W3zUVQt04/IbFMxqZ3Tk+FnOHh/Z8XwkEgFgbLS6GFYL0OJvBxqvBZIzwRIn2TUABkdPcfz4
      cae1SCSOs2sAHD9+HF3XsUwdND9B//5TknqRE2ESJ6mZVP347bdJrS8T6BjhxeeedFKTROIY
      NQOgI+wl0vkIoWDIST2yGE7iKDVbWyGfZ+LKm0zNrzqpRyJxlPt83XrwepwdlZG1QBInqZkC
      BaO9DJRLeEItTuqRnWCJo9QMgGRsnrInSlTo28ds22R2ehpvuIMWj8laIsPw8CGEFqCcT9Pd
      3d2wINkHkDhJzQCIRCKszC0R7Xxs+5iiqPQNDDA9s0DarhCIdOEx89ycXyIS7aRrM30RQjSU
      yjRq22gadVB8uEGDW3zUsq8ZAOlcmUcfe5y29q7tY4qiUi4WUBSV8QuPY6YWmFpKk81m6ejq
      3XGi/aYyWwV1+6WRcx80H27Q4BYftexrV4O2aFy6co3jp87S1V4tfbD0IvH1FMGWMPGlORKp
      PEdHR9CVUQrpdVA6UBQFRVEaWheokXsChBAN31NwUHy4QYNbfNSyr90HyFt0dYTJbKyxtR1e
      dZO88e3XDG6W/7cA7eGh6on2LbGKrAWSOEnNr+mxI4dIbiQZHmt8wdt6kJ1giZPs2tre+MHr
      9B4+wS/94i9we3bGaU0SiWPsmgKN9Lfz0pdeQsPizBPPOSpIzgNInGTXAOg7cppfOXLaaS2A
      nAmWOMvuC2Nl1vjeD3+CQOGRp56ltz3smCC5KoTESXbtA9y4epVwZx99nSGuXp92VpDsBEsc
      ZNfWNn7uHIn4Ki2dhzh74tBuL3lgGIbh6PkkDze7BsBPLl9juLuFlWSRuZlb28eFsImtLJHK
      FjD1EqvxDWxTp2JYFIvFpgiSKZDESXbtAxwdOYTWOQTXfkSK6PZxYVv4Ay3MTk8R9HtoD3tY
      uJ3DVH2YusGpY4ed0i2RNIXdO8GlPO9881U0DAbH7qwIoWpeitkEQvWier30DXQyMRFncW2W
      x556pikLY8nFoJrnww0a3OKjroWxCoUioZYwXio7UhtLL5LOV/B6VFr8GpeuLjA6OkLnyGFS
      8SW62441vEmeXBiruT7coMEtPva8LtDw8DALG5M8/vSzlAq57ePvrgU6dPiOTV97tWSi0VF8
      OQokcZJdW9u1m7OcPtzJG5cmmJ+fd1SQLIaTOMmuV4BTY0cQkV6OmVdZ01t3e4lEciDYNQAM
      zQ+FNEfHH+Oow4JkLZDESXYNgEz8Nq+8/hbHx8YYGj3JydEhp3VJJI6wawAcO/sYmWyaxXga
      w3K2OE12giVOUrO15Ys6x8ZGSayvO6lHInGUmgOrz77/eVbjCU6eHnRSjyyHljhKzStAfD3J
      8PAQ8ZizSyPKTrDESXafCU6u8tJLL3H48AhHTj7CVhfYtnSmbk6RKZm0+gVofgZ7oqQMP9nk
      OufGTzYsSBbDSZxk1wBo6ejn+acucGtpfUcNhap66WiPoLWotHpM1tbWyBaCXJ+4xsXnXpC1
      QC7z4QYNbvFR9yZ5uZLBhUceIdpxZ2Eso5zm8rVbjB47hmlZCGFj2YLxC49xe3aKjnPjDdcC
      gax/aaYPN2hwi4891wIBdEbDTE9NMXzMR3dHdS8wb7CdD3/4xe3XDI3cNU3WX91Qu9EubDOK
      4SSSvVLza9ofDNEaDhCLxZ3UI2uBJI5SMwCyqSSx2AatbW1O6pETYRJHqdnagsEgmsdDa9i5
      FSEkEqepGQCxjTTnzp4mvrripB45DyBxlF0DYGFuliefeQbTMOnt6drtJQ8MORMscZJdh1tS
      8dvkTY2wT2FhIw0Oro8rJ8IkTrLrFeDcE89i5+LEsxZPP3HOaU0SiWPsegVQNQ9nH31vNseW
      KZDESeqacdqqBdLx0tmisZbIMnp0mJIIkkvEODbW+P1jshMscZK6AkBRvQwfGmB2JUG+YnHh
      7DATE3Fur8ebti6QEALTNPdlC+6oO3GLDzdocIuPWvaKqCPnsPQiV67PcOr0CeanJ2lv9VK0
      /ViKF72ic/rEKGKz4TeyR1gjpRCN2h8kH27Q4BYftezrvAJotLe1sLGRZOz4GGvJPIe72jCE
      hqmX9y1OInmvqCsAVI+fI6Oj248H+4IA+AG/t7qjfKNdWNkHkDiJLLyRPNS4LgBkMZzESWRr
      kzzUuC4A5ESYxElcFwCyEyxxEtcFgCyGkziJ6wJAInGSugJACMHczSukSjaxpXkmJibIZdOk
      8hWWl529cUYiaQb1zS0LmxYf5CuCfCqF0IKoZonrU9OMjB5DCLHjZz8YhtHQjfG2bTdcN3JQ
      fLhBg1t81LKvuxQiGAhQAUaPn0YUYkwtpwmFQujlMtC23Xj324g1TWsoABRFaXhliYPiww0a
      3OKjln2d5dAVljaK2P4FfBEfiXSZE2PDVPBRzqVAUUAIFEXZ94SWqqoNTYbZtt3wZNpB8eEG
      DW7xUcu+vlogzc+pc49sP+7tr/72A5FgD9B4LZBE4iSuGwWS8wASJ3FdAMiZYImTuC4A5ESY
      xElcFwASiZO4LgBkCiRxEtcFgOwES5zEdQEgb4iROEndtUDZZJyiLqgUstyaW8QyyhQrJul0
      uimC5P4AEiepuxYoNn+T4GgXuaVFBrtDzM4vYykaquYlGo0+IJkSyYOh7lqg/r4+0oDm9dLa
      FmY5vsHSxjpnzj/SlIWxDMPYl90WbliEyS0+3KDBLT7q3iRvN2yrwsJKEj20wEAkwDs3Yxw7
      eoiew0fIJeIonZGGN8mzbVtuDNdEH27Q4BYfu9nXtTLcXrDlynCu8eEGDW7xUcteDrlIHmpc
      FwByIkziJK4LADkRJnES1wWALIaTOInrAkAicRIZAJKHGtcFQDMmTSSSvbLvANArZVKpFIZp
      Ylo2uq43R5AshpM4yL5b28z0FIVCAT27xuLqOlMzC00RJIvhJE6y76m1nu4uVlduo0e6uDE9
      y8X3Pd+UWiBZ/9I8H27Q4BYfTakFuptyuYQlFPx+H+cfe4rY4iwdp0/KWqAm+9A0jcrEDYpv
      vkn4xRfwjYw4ruGg+Gh4k7y7GRw5yuDInX2Bh7ojgFwXqOmYJonP/mesRILKjZv0/dt/LdPE
      JuK6HmezO8GFsk6uWGmqTyexyxWsRAIAY3kZMxZ7jxUdLFwXAM3mu1cW+MqPpu85LgwD0YTc
      9EHXLtnZzJ0HlkX5nasP9HwPG64LgEYa1JZtuWJu/53MlllLFXe8Tp+fZ/Uf/y7xf/4vsIvV
      54RtU3z7x5Rv3tzzuXJf/wax3/ld8t/+9r413w/rXbeali5dlgWDTcR1AdBIMdx3ryzw+tXb
      fPJz32JpPQtAMldiNZnb0WgK3/0e5moMfWqa4ltvV499/3U2/vDfsfYvfx99Zua+5xKlEpn/
      8yWMpSVSX/gzrFx+37qFYZB79VWKb7x5T+N+dwBUJiYQlZ/dlM5tuC4A9tsHEELw5o1lfjy1
      yka6sB0A6VyJdK6MbQsQAuP2EpW7vuX16Wp6VLlxo3rAsqhMTmEmk1QmJ7HL5V3Pp9+awS4U
      qucuFCj+6If71p1/9TVS/+1zbPzH/4Q+NbXjeSud2fl6XadyfWJf53IjwrYxVmPbn6XTND42
      1WT2O8JhC8FiPEvFMDEsm5mVFBdPD1EoG7SGfOimha+YJ/bPPoUo3kmJyhMTlK9ew1hY3D5m
      LiwQ/9rXsZJJtI4OQk9fpOX9z+EdGkLZrFYtXd2Zi+dffY3wBz9Yl35hmiQ+81lKly5vHhCU
      b07iP3Fi+zVW6t7VNkqXLhF87NE9n2fHOYVA6DqKx7P9Xt4rhBDkvvwV0v/rf6O2ttL+ax8n
      dPGio6NcrguAd7OVEuz2oVyfW2OoJ0JbS4DJxQRHBqJM3U7w5KlB5lZSmJaNEDDYFWEtVWAA
      fUfjBzBXVln7/T/Ycaz81tuIzdIOK5kk9+WvkPvKV/GNjhL9e7+K/9SpezqjxsIilclJAidP
      7u19WRaZv3iZ4g9/tNPP3NyOx+9OgQBKV65grK5W92OwLIRloUWjaJHITz2nXSqRefkvyb/2
      Gr6Rw3T+1m/g6erak16oflvr09No3T14Otr3bFfboSD3jVfAtrEzGZJ/8l/wjYzgHRho3Pce
      cV0AWJa1Y8JieSPHF1+5yic+9jSadic9qhgWf/zyW/zcU0eJJfPcWNjgt3/lGT7/tcucOdLD
      V9+4RSJTIuT3MDbUwbW5NYYfP4LW0421tv5TNYjd6pqEQJ+ZIfGZz9Lze/8EY+XePdHyX/8G
      WlsbamsrBAII2wbTrP7ebKiiXKZ0+TK5r34dc3X1Hh+VyUmyf/XXWNksRjyOPnknJdKiUax0
      Gmt9g9VP/A4g7ky8aBrtv/ZxrPUNKtO3CJw9Q+DiRbS+XrBtyleukPr8FzDj8ep5btwg9nuf
      pPMf/gP8x49XZ+/zedRQqHplUFVQ1eoVQ1VBUci+/JdkXvoL1HCYzt/8DdRwC8I0EaYJhrn9
      tzCNHY8tXUe17erIm3nnuJ3PY63f+V+ISoXU5/+Uzt/6TRTNA6pSDXJFQdh29a0qd47t6Uoh
      RNVOiDujfkJs/+z7pvj5WzdIpnMMjwxTJkg2Eef0yeMN3xSv6zo+n+8u/YI/e+UqAb+HX3rf
      SbJFnaDfw//9/iRrqTxv3VzhyVOD/PIL4/S0t3DlVoxDPW384Nptbi0n0U2Lv//zj/If/vyH
      /KOPPc3sH/0JXVffYk8XWVWl+7c/gT47S+6VV7Ez1Xxca49upybBJ5+gfO169cqytT1UKIjW
      GkHoevVDt22w7eo/UddhH8OvSiBA+IW/Qe6rX9u7kc+H1hoGW1SvJLv9qxUFNRSqNvRyGcXv
      R1HVzcZXbfjKZjBYmQyYZt3a60UJBqvnvKux72j0Wz+qgqJuBuvWP3SzryeEvf03m3vWVV8i
      Nj+G6pfHvq8Auq3xyPmjTFxbZT6+uqMW6O7taLbqglRV3Y5Yy7J2bKO0VT+kaRq2bWMYxg6b
      v/v8ST79xdf54bUlAEzL5qlTA3z8w2fwejR+8X3HaQ/7qFQqnBiK4vF4eOGRYW6vpRntbyMS
      9NLT3sKnv/g6z3YN0sVb1Q86FLonJbobrasT7dRJAuOnUQf6Sf3RH1f135WX+5++iO33U/ne
      97cbmCgUMQu1/W7hGR7G09ND+e237/valuefJ/jRj6InU5BOgVbN4YWmYadSGAu7FCPqOlYi
      ueOQd2SE4M9/lNLXvo4xMwNC7OiAilLJ8dl8NRIh+Pz7KfzVXzuuYd9XgMmJqyjCJBjpwFCD
      5FIpzp05Ub3c0/xlUezNKFYVBdsWqGr12+DdfYS77e9+butvUSqT+MxnEYZOx6//OmYiQeq/
      fw5jZYXgY49WZ1tXVlEjEaIf+2XCL75QtdN11v/w31OemKg2dEXBNzJMzz/9JNbGBmv/5tNY
      6+uoLS0IwwBVRfH5ULxe0DSUzR+8Hjw9vYQ/+CKB8XGsVIq1f/UHiHKZ0LPPoAaDqJEIWiSC
      7dGw5ubxHj5M8LFHd7yPu9+zME0yX3qJ3DdewTcyQvhDH6Ryc5LSpUvVIVNVRfH7CH/gA0T+
      1kdQvF7sik725Zer8wqVSlXjZspTvWJZCMtG2Fb1m3TzSqZ1deIdGgJboHg84PVUO9SbP3g8
      KF7vjsdCVdH8/jvPezwo3q3nvXh6e1CDQVKf/9PqMK9t7/JNblc/d3tzB1LxrtcIAexylVDY
      Pn7nuTvH9h0AtmVQKBmEQ34soSAsE4/P13AAGIaB1+vdly3sbf2YdweNXS4jyhW0tgjCstDT
      abzhcDUduCvPFKa549tSDYWqDZxqyYJdLKL6/QjLxLIFHr9vRz5dK2+1KxUQAjUQqPu93P2e
      7EIBNRjcHt0xSiW06hutBqDHs52m7fgsbHtb21a+jF1tVKZhoKnqduNT/L6qnzqo931s5+hb
      WoTANM1NHVBNX+7+AcFmirP1/t7127JsNI+247iCCxfGqlQq+P3+fZ/fDYswucWHGzS4xcfP
      zMJYclUIiZO4LgAkEieRASB5qHFdAMhVISRO4roAkKtCSJzkgZRCbE1s7de2katAo/YHyYcb
      NLjFRy37pgeAqqoNf4s3OhLUjJGkg+LDDRrc4mM3e9flG40GTzNSqIPiww0a3OKjln3TJ8Ik
      kp8ltE996lOfeq9FACAE0zevs7S6QXdPN2qd90Qk11aYmZ1FtzXmZ6dI5St0dkT3VvW5JcHS
      +f7rb9DbHeada5NULJVopKUuHXPTN4inCmhmgcmpGdRghJaA7/6Gm5iVAu9cvc5GOo9RSDEz
      t0BrRw8+z96+AeNLMyysZmn1mly7OYmJl/jiDMvxJF3de/lcbWYn3yFT8SHKaWZm5zBQmZ+e
      JJUv09V5//sAhG1w6QdvEOrrx4fJ91//ET2dbVy/foOypRKNhO/rQy/leeuty/QeGmBxepK1
      ZA7VLnFz+haqr5Vw8H6fqcW1H/8Y0dJOYnmWhYXbaH4/0zdvkq9YdESr9064JgUSwkZ4Agx0
      +EgX6y+5be/uI9Lip1xI09k/imZVqOvuYiGYn52jtbWV2PIaJ86fp1JI1amizMJinHIhTzyV
      5+z506Tuc+/BPdg2FcOkUqmQr1iMnxhhPZ68v90m3QMDKJZJbCPJ+JnzFBKr4G+lu9VLobKX
      TqTC0PAgekkn2t1LW0sAKxsjPHgKxd7j+q+Kh/6eTkwhWJyboyUSIbGxzuipc1QKe9tP2uMP
      0RUNY5k6t1dilEsFVjdyXDh/gfT6vfdi3IvK4GAvpmFRqVQwTZ30+gp9R89iVe6q59rbO3IA
      RaFSLpHKFgn46u/s3J6dQgv3MNDTQTaToqwbdb05AeiGzlpsGcM0WF/bwKh70MFLpD1KxCvQ
      LYvERgLFW19dU6WUJ9LRh2obmIZOYiOBLxTas71lmhiGgU9TWE9sYKleKqUCmXxpb1cRAYZp
      YBgGS3PTKC2d9A8MkE/Gqeh73cJWYJgmhl5B1w02YssUyzrJRB2fqRAYhoFpCVoj7bQGVCxD
      ZyOxhtCCe7bXDZ1ixeTwYDclAzKJNXTjzhesq/oAxVyagqHQ3dFWt216I04ik6erdwCrlMHb
      0k5rqP6iulKxSCAYJLayTEfvAP49ph5bFHNpsmWb3s4Iyytx+gcG0OrJ54QgHlvG19JO2K+w
      lsoz2NezZ/P4yiL5kkn/0BDp9TW6+weo5NOUbQ9d7T/9lkkAbIvF24sYlko0EiCdydPZO4Bd
      x2dqG2XmFpfx+EMMD/VTLhUJBILEV5dp7+7H773/F1y5kGE5tkGoNUo05CFTsqqf6XKcgaEB
      1PvdDWbpzC0sgeajv7uNeCLHocF+NtZWCLf3EvJXB0BdFQASidO4JwWSSN4DZABIHmpkAEhc
      xerSAvOLy+RzOSz7p2fn2Uxmx0hfOp1kaSXOfcx24LplUSQPN69981t86CO/wJvf+SZn3v8C
      S1OTHD11lvj8JDbwrdff5iMf+hAVs8TtuWUuPvcENyemOXPuPFeXEgQTU6zlzkF2hb7Dxykm
      VslWBOPHh7l2/Sb9w0fJr9/G3z7AyEC3DACJuyhkUywsVddL+snrr1CyQsSW/x+i/QQfuDBE
      30CM7Px1VkL96Okk3/n2azzxzN/EqypUilluTa/y4WPnuLaQ5frsq2gWhIIaqeUpRs8+whvf
      /DKLWYWh/lVGBn5OpkASdxGJRMC2Cba2MjJ8BI/Hx/iFxzFTt4lnyqh6nooS5NSJY0Tb2zh6
      eJh3rlymYtr09A7xxLljzM3OUrI0Otrb6O7uoq0tQn9fH5MT11HDPfS1BTg2NgbIYVDJQ0Ii
      dpuJyWkOnXiUw33R7eMyACQPNf8f4a9eCxyXY/AAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Electric Range vs Count' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Electric Range vs Make' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dWYxkWXrXf3eJG/uakbHkvldVVnVV9XRP93SPZzy2kVktZMsPCIsnhEBY
      tnhAyA8gJCTgBYRkIfMAsoQEkpEBY4EtYcv2YM94ZjxLd22ZWZVZlVvsGft+dx6yqmemp6cz
      Izszlqz7e6lSZP7j/DMivrjn++53zhFs27ZxcHhNEUdtwMFhlDgB4PBa4wSAw2uNEwAOrzVO
      ADi81jgB4PBaM5EBYFnW2Ots2+YiFeZJ+NsmwaNt2+fSyRcx9CmjYloWoihi2zaiIKDrOogi
      siRhWRaSJGHbFrpuIEkyoihgGDqS5ALbAlFEwMaywLZMLNvG5XJhGAaiJCGJIq2uym/98ZOB
      7VmWjSgKQ9G9+uwLL2WyJPF3//qb5xjr9PUblGHqJsHjeXWXGgCtSo5vP83zU+9/jp2nT9lc
      necbf/GQ1bV1ApLKB7tFvvL+W3RrBR7sFXArLlJhN7W+haaZ+O024vQKXrVGtqni0juEokkC
      PoFStUtf1XnnrXv0VIPf/+beZVq/cjyKfK4AcBgulzoFyuRKRN0WtZ750WOGYWBaNsfZEkHZ
      oK2fXpbUbgfF7aPe1bl96yY+l4AcmMLo1OiZAkFFwjINNMOk0ehwY/MWYY+MfpmGHV57LjEA
      bAwbZmZSVIpFTvIZcqUaM/PLLKSnsJCYm0+TzxYQBJHFlVUsvUc04OHDh4/oWyKyKOETDPAE
      EUXx9PJlWcRiYZ48fEhTs3BdnmEHB4RJ7AVqdfr83rcGnwLZloVwgbnkhXS2jQ0IL5MAWRL5
      xZ/cPFNmGAayPPjMdJi6SfBo2zamaZ6pu9wkeEi4XRJfemNhYJ1pmkiS9GN/7vcoRIKeH3n8
      Im/AqwrERZI3h+ExVgGQ23+GHJvD7DZIpVLk83kMtUOz3Se1sILWaTAzM0O11ecf/rvfv/Tx
      f/bzK/zyz79z6c/rML6M1ddTs69RLeRo1GvYNtTrddo9nTt37lDKHVGv10dt0eGaMTYBYHTK
      5E/aFIslZFGgqxmY5uk0wjQ0LHtsrDpcI8ZmCqSZMu9/8V2sbgMUL0cv9kjPL0G/zu6LI9bW
      Vul32wCIAgR9yuCD2MCn3M/yKGPzcjgMiYmsAp2VzP44hlmFuGgSPAkVlknweOlVoE67iccX
      pNOo0ur2CYcjuL0+LF1FwOKkUmMqkULr1Gl1+kwn0wimSqlcYzqZxNQ1vB4PfVVF1w0Cfg+a
      ARI6miWjiCaqKeDzuGg023g9Ci7FTbtexZa9yLZGV4fpqQiNTp9f/x/fHugFefWivCpLDkN3
      Ea7K419+Z5X3bs9/FmvXknMGgM32w++RWn+TeMBD/egQvVvHNb1ON/cCr9dG986w+/QZimST
      mplFFAWq2SP6UpStrW1ifheSx4cpudh7+IS33nuDUslGNss0DTezPpHnXY076QjferDPWipM
      JB6hUNWYTYls7TxnfmkRAE23+GC3cIUvy/Xj/npq1BbGknNdn7VWiVpf4Gj/APQ+nmiayA/M
      wW3LYm9nh1Bsin6vTTabxbAEBEEgFI4ScMukFpc5OMwxn4oxNz9L5igDQCabo5TPYCPgkeG4
      1GJmOgxAq94gObdAJBRhPj3F0WEG4/JfA4fXmHMFQKna5ctf/hKpeICtnWf02zVMT4TC8yf0
      bAmf189bn7tHu9lEUU4Dw7IsJFniYO8ptuJDkRXSqWkEBLyBCH5FRrCazN/4PF+4t0a9D7OJ
      Kfom+L0e3B4PiZl5jnYecJTL02h1kZybSg6XzEQmwZ2eynee5gfWmZZ1oSC6iM5+2QohDjif
      vyqPKzMx5hOhH3ncSYInEFEQCHgHL4MO8uFamYkSDXqB610Fet0Z4itm8uB7H2AhMbuYJnNY
      ZDo9Qz1/wMrte5RzGdr1Cg3DRSoaYnZ1mU7+kMNql/R0jJ5q4RF0YjMLNDoq/+I//+mVuv21
      X/qiUzV5DRjipNqm1+ujqSqGpqHrJqIo4vF5yRwd0enprCzNkZpdBL2PZYPe72FaICk+rE6Z
      ugpuaTjlSIfXg6FeM6em0/iELi3VZmF5lcRUgIN2Ha+gkW3/cCpiGAaC5GJlfZGwW8JtRKjb
      kWHadXgNGGIASPg8IrowxUoyyuHBMUUMZmZmcLtd+BodlICHtE+E0CzHBwckEnFKx/uY0ymi
      kQRu+9SuSxZZn4sNbuGMVogf5CI5hsPkMZFVIKcVYrS6SfA4cVWg7OFz2rrA8sIs1VqLVHKK
      TCZLOBwm4HNTrncJuiUkX5B6s8c/+82vDj7IAFeAz6qLBjz8y7/30xcYzGGYjE0A9A2IKQZH
      +RMOD46YCm7y4ZM9NhaSTMdDPM/UiHll1m7exLRs8pX2qC1/Kpru3LOeBMbm1mq9XKBY66DI
      AsmQwqPnBVLJKebiXp4cNUiGvPRtYXwMO1wLxubz5PcHTvuBPF5Si2u4MElORfDG5whIJqlE
      ELcSGLVNh2vGRCbBfVXnsNgYWDfMVghJFFiZiTpJ8Ih0E5cED4JhmuxmqwPrhro1n22zfVQ+
      s7f/3mqS+UR4YE8Ol8OQAsDm6ZOHGHi4sbnON776Vd7+0k+x88G3kFweUosrNMolwGZ9fZ29
      3V1W19axjR5/8rXv8NM/9RPsbj1Ct91s3L5Bu6fzH//394Zj/Yr5lV94xwmAETKkHEDDwMft
      2zfol7OkFpcplqq4/SHu3rtDtVhA1/XTjXQBXdexgVopz/J8gmy1hW57uX37hrMznMOlMqQA
      UDDUBsfHOQ6LZdRej3Ipj9ptc7j/Am84CoCh9cgXShiGSr5QJFMo09cMyrkcptbg+CjrLIhx
      uFSGNAUSuPPGXdo9lVRqGpfLha7rGJqKYYsE/F6MeATT0OmrBhsbN+n2NW6+8SZuRUbXDUTB
      pt1VkQC3IvHlu4PvDGe93LJ9GLpXlYWzVKmYU9kaJRNZBXJaIUarmwSPI60C2ZbO3rM9gvEE
      LkEk4nfRVG3ymUMUX5hIyEc8FqNSrVE9yWGKPtbXlzh6vosp+VhKBmkTwC/3ebqzTygapduq
      0dfhxq3bNFpd/sG//b2rsH5t+NVffJef/tzyqG2MPVcSAEd7u0wvrBN0mzx88Aym3VQMP5bs
      I5WYopg5xOd1UWl0MSyRaa/GwfPnEEwT7OfJ5trooSUUXxe3L0Y8HkcMu8k1bLyKSIPvTzEc
      PpnJu66PhitJgg3TwuWSEEURrd+j1e4A0O926HT7JONhHjzYIT03Q7WY4dFhjSmPgMvlwiVL
      mNb3371up02vr16FTQeHq7kCrGxssLX1hGgyxdLqKvGQi1oP1HaVVrtDYilNJNomqIisb97D
      5xLQXX56x89pS17W51I83H1OcHYawVbpdHuEpgKEg87XmsPlMpFJsG4YdNXBC6KmYSLJgyfP
      F9HZ1stdIQY8XO+yPHoVF4rr7OdxkuAr5tVxlR+vhlgvT10ROC0V2oBtW4Dwsn1AwLat09Mm
      RfH09wURURTo9nV++6vbF/IyrK0RbWywT0+IubkY5yfOeaCHsyvEcLnyV+zoxVPaqs10LExT
      k3BrDQSPzFG2jsfjJqhAPDlNtVqjUOmQSiVROw1u3drk2dYjBJeHdCzAt3cyBLxu3n37Pj3V
      4H//+bOrtn5paIZ57gBwGC5Xfie43Te5vXmLsN9N5nCPF0dZADS1j9vrY3lliUdb+yyvrBL2
      CGia9pH21WUMUcTQNVxu91XbdXjNuPIACHllHj56TKOjMr+0xuriHIIgsbi8hNHvIbh8TE+F
      sHUVW3LRarUw+m12nu3xqhhkWxZzC4vIpo5qXuy0cQeHT2Iik+Bmp3+hKdDwT4o/zR3W56Z4
      59bsuXSTkGBOgsfzJsETGQCarlNrDX5vwDBN5Iu0UFxAZ9k2vEzgr3qsYeuueqzpiP+HvnAm
      ugo0EGafDx5sE0umUUSbdCrJw0dPeOP2DXa2t2mrNnfeuEuj1efvO60Q15b/8k9/nqBvOPne
      2KwJBsDSaXVUFJdCrVZD7dRB75FtWiwvzDCVmMGrjJdlh8lm7D5Nkalp4rHTbbyzx0eYLi/F
      oxcjduVwXRmvKZDkYX4miUuWSafTAKxEI9RqdWSPh/jLcBUE8LrHy7rDZTK8DZAnMgl21gOM
      VjcJHsc+CbZti3KphOTx4/couGSRcrlGdCqGbYNtGZi6TrPdIRyJ0Go08AZCBP1eGh2V3/hf
      37nAmENshfiBMiiAIkv8k7/9xYHHdrhaRhYAlqFxnCuwvr7B8+fPkSydYDxJp9Wk2mjSbvVw
      u2A6kURUGxwUG8j5Ip+7fxdNN/n2Tm5U1i+Ecwj3eDLSJLhZq9Bona4VWFha5KSQpdXp82L7
      IZHUPJauUigUUA2LSjGDLXlGadfhGjLCABBYXN1gLj2N2+2m1WwiyzKWZXPz/hfoV44R5dNN
      UGxbYOPWHXyi0wrhcLlMZBLc6al8c2vwKZBlmYji4MnzRXSnL6uNIJx+x0iSwFfuL52pm4QE
      cxI8jn0S/FkQRYGpsHdgnWWaiANUjyJ+D0vpyFCrQA7DZSwCwNDafO97W8wsLdOvF+n2debX
      bnOw/V1s2c/qQoJnhwWCoQg315ZotFX++UUOyBiQ927P8Wu/9BNXPo7D6BiLryfbMuj0+ohW
      j74Q4I17b5A7fAGSQsgl0O71SS+tI+k99FGbdbhWjEUAAMwurjKTSqF1mnTqJ0ieIFqvTaHZ
      wyuBbZl0VY3BZ/AODj+esZgCSa4Ac2kPiAo31+fJVzvcWJmlm4rgUUSabZVuKc/qjVuIgCyJ
      rKSjA49jYyMMcJs9GXW2LbzuTGQVyGmFGK1uEjyOZRXItm1yxwcInhB+2SRbKJOemUM3DOIh
      Dz1LIn+4j634mZsOcpSvsLKySL+rovUaNPuwvDAzTMsO15yh5gD5/aeIgWnCfg/lWovNzU2i
      HotHj7dpVQvkK3UET5T15Xl2dp4xN5vGMlWOjzM8388RjzkHSThcLkMNgFbfIOi2+O6HjzH6
      bba2tk4Xyy/Oc3R4DEDuaJ/nh1lubd5ib+cJ9XYfkNlYm+fxwydOFcjhUhlqACwvzbO3e0A0
      FsXn9wNgIREMRQhHwvjcbvw+N5ZlUS4VEV1u3IqbYNBDsVjGGwiMT9nK4VrgJMFXpHOS4NHq
      xjIJvix6qsHXHu0PrBvmKZGvvlcGXUdw3rHe3ZwlGhy8HcThhxlZAOzu7rK+PsPeXh2tW8Kw
      LBILa+w+fMh7X36Tgxc1TvIHuP1+bt19k+zTB8ixOZbScdo9jf/wu4MviLlOLKbCTgBcAiML
      gHIhg6430TUPsjfG3RvzPHnymPhUiMPjHJrmIjyV5NZKhGfHZWzJg9GoQDo+KssO15CR5ZTh
      qSSbmzdwuXxo7QrH+7u4g3EUXwSr38C0bTqtBnvP83ilLrVWj5OTMpqzHMDhEhnZFWBtbQ2Q
      WVufRyBNu6cxFwpiGCaikEa3BNROBNntw+2SmJtbwDZPi6Bul8T7d+YHHtO2rY/6869cZ5+e
      DzD4WuLzjTWsjaOuO04V6Ip0ThVotLrzVoGGNgWqVquATbVapVwuYxkalWKeekejWa3SalYp
      VBo0q1U67SoPH29RrDTAtjnYf4Flv3oOB4fLY2hToHwui9utkMnmiPpdbBdLzEx5Kbc0XNUC
      gs9LodNlCgF/RCQ6d4PK8RbR4CLZTJ5gfJZioUAsFhuWZYfXgKFdAUxdo1wu09dM5hbnUXWB
      gMeFZZpYL43MpabI5MunAkFAkWWOnr/AHfBy8LJVwsHhMhnaFSCRniWVSuJ2lxAkhZnUNK5w
      FCu7haoESIRCiJEo6VQZfyDK7uE209MJXILJWipFoVAYllWH1wgnCb4inZMEj1Z3rVshOj2N
      //lnTwfWXadWiFHqJsHjeXUjCYCTg6eooTlKW99k+tYXkFp5yu0+kViCdr3M5uYmW1tbpKNe
      Hh23+PKdGf7w27sE/R6+8PabdFWD3/mznVFYd7hmjOZOsCBg6R2EQIJq9oBaR2V5LkWr1fyh
      X8uUGgQkHd0+XRSvuJ2tER0ul6EHQLteZr9QRa2e4I9GMQ2NgE/hxVEBta+iCCYPHz5A8fnR
      DJvpqJeDbJX03DySqTlbIzpcKhOZBDfbPX7na4OfEnmdWiFGqZsEj+fVTWQA6LpBo6ud/Ysf
      46LVI9M0CQe8A21x7lSBRqub0CqQTiZTodM8wZK9pMI+jst1kqlZypk9LNnP7c2bVJq9oZ8S
      +cs//3l+9vOrQx3T4eoZsyW2BicnFbrdPj6vl36niej24VZkBJeXiGzQNEbt0eE6MT4BYBkU
      c0UUvx9BFF9OVQRkSUJAoFLMYvqmCLtGbdThOjE+UyBBQFKC3FyL0aoHUE2IxhYQG01EUeCd
      97+M233aA+92Sbxza3bgIT7LGWGJiH9gncP4M5FJsNMKMVrdJHic0CT4+zQaDTANLEvAH4/R
      LuWR/NHTXeUaXX711//vqC1+xN/52bv8jfc3Rm3D4QKMbQDkjvcxRB8RDKR4jOJJCbGpEl5b
      wrahr41PNmw4N+cmlvFJgj9Gq15DkF0IgKU2yZcaZHPZUdtyuGaM7RVg+cYdBFND0xT0rsY7
      772H3izTN0ftzOE6MZFJsKYb1NvqwLrPcif403QBr4LP88P1WScJHq1u4pPgT6Ov6fzBt58P
      rBu0r3w+GeYn7y1e+I1zGH8u9V0tHr1Ajs0y5Vf41p/9Ecv3v0j5+QP8qQ269SJ6r4Xo8uAN
      T7O6kODP//RrKF4fK2sr7O3uI2CTmArhT65Qzeyh6xqC5GJ2Osy3t48I+ry8+/Z9un2D3/7q
      1mVa/0Teuz3HT95bvPJxHEbHpSbBrw6HtvQW7kiKYiaDOxRHbZzu/Sl7Atx54y56t/Hy9y0E
      SaZXKzG7cY+NxST4wlQKGSxERF6uqhJFLNPE5XY2g3K4XC63CmQbPN/dZWv7BYFwkH63jYXA
      fHqKbKGK3muzvbWF4g0BEI2n8CsirkCUzLMHPDssEo/F6RT28CcWQDidQ9uWRXp2DtHU0MyJ
      S1kcxphLTYJt2z69CggCoiD8wLpYOP2vzemPhR947CMx9sd0r57z4+0LzU6f//7/Bl8SOWhf
      +VIqzM+8teLcCR7hWBfVnTcJnsgqkK4bdNTBb4RdVRXok7AtC5uzA8DndqG4vv/ck/DhmgSP
      E1MFKhaLJJNJjvZ3afcMpuNRlMAUvUYZRJFkIkGpVKLbqtExJO7cXB/JeoCr4ld+4R3+0tsr
      o7bx2jLyO8GVSgWAdrtLMBgiFI2x+/BbaIKb6sufVSolKpUG6XR6lFYdriEjD4BXyC6FcDiE
      aFtIkoyuadiWhWXq2IKL22+8wcH2Ewa//eXg8OMZ+RQo6FV4undA0Ocmk8kwPT3Fxt3P02tW
      mQ4m2Xm6x9LaGoWjfUKJNMpLnXiBvv5x5Jr8GRPLRCbBznqA0eomweNYJsG2ZWDYIi4RdNPC
      0HU8Hg+GYSIJNs1Oj1AoSKfVRPH6kbARXS5MTQXJBZaJy+Wi2VX5T7/34QXGtxHEC6wIs2z+
      yrtr3F1NDqx1GG+GGgB6PcehGmU9ZrObqVM/esqtd75A/rCIpbcIx5O0K3k6eOnU9wm7FdK3
      N6ke71LRA7isLpubm6iaydceHg3TOvfXU04AXENGmgQnF5YpHL0Ay0RQ/MzPztDsGayvLBDx
      u9Betj4LshefqNPqj88iGIfrwVADQBAlsgd7VFt9XLKMLCvEwwH6toyCyuPtpyRiIT588Iim
      LuJ1WTzb2sJAZm5hgVa9Nky7Dq8BE5kEt7sqf3qBKZBlWojSBbbZNi3uraeYT4TPr3GS4JHq
      xjIJviy8bpm/9oX1gXXDfuMcxp+xeFePj4+Zn5/n+PiYdCLKSUOjU81hyH78bpmpgMLWQYFQ
      OMrGysKo7TpcI8biTnCr1froX8vU6dTy9MUYN9eWabVa6P0eqcU1BLWDkwY7XCZjEQCvMAyD
      XreD5AujdRuo6g80PtgWPU0fL8MOE89YTIH8bpmDTIHlhRkK1Q6rywvEfCWyxQrz8/N4XCK5
      /SMW1zYQAWdjCIfLYiKrQE4rxGh1k+Bx7KtA1ZMTwvFptHYdXfLiETT6loLL7nGULRKKxdHb
      NdyhOMmpCJ1mHdETwKvI1Fp9/vV//frAY36WzXE/TfdzX9zgK/eXBn5eh9EzsgDIHT2jbSl0
      c9sQW0Hq19AtgVs310lGO9R1nXbHIGJmKMheakcvkPxxNlYWMEyLvWx1VNZ/hHqrP2oLDhdk
      ZDmlNzxNv5EHUUGwTfL5HIV8Ad0wyFe7LKanEEWRdDpOs1IhV6qTyWRGZdfhmjKyK4DXF0Bv
      VvDOLdFptVi99SZBWeX50x06hkCuVKXbrLK1bzCTiDL97hfRagVna0SHS2Uik+BeX2P7qDKw
      7qoWxc9OB0lGAz/0mJMEj1Y39knwZ0FxSXxuY/D1wU4rhMPHGehdffQXX2fujXdpHjxC86eo
      F46JTCUR9RZdwyYQnsbqVujpErGIwkmtR3pmhoNnT1C8QdZurPLkwyfEZ+awezX6usDqrVt4
      ZZsPvvNdECRm55McHJZJz81QyeyxcufznOSOUESLFwdZ3vnSV1CcZYQOl8RAAeAJR6jkc+j9
      PpJbR9M1BFFA13QCkRim0UU1XNy5s0F2fwfLthEFkUAkzupcnONiGU3XT3d7EwRsUcbotSgb
      Jpqqg2hiWwa6YSOKIoFwjNzxIZahMbc4Sx8vXhlMJw9wuCQGmqCKsge9kUUJJQAIR+MkpmII
      oozaa6F4Qhhai5NSGUuUSaVm8Pvc9HtdsvkSwWCA2FSCeDREKBonIHSp9gX8Xg+BcJRENEin
      rzOdTBEJBhAkF2HFptHT2d5+RiwSwDmMxeEyGSgJ1jQNyzCQ3QqmadOslbEEF+FQALfHQ6/b
      xSULVGodYmEf5WqdQCiC1m3i8gYJBTyUCkUExYtfEemoJtNTUQQBKiclTGSmokFKpTJuX4CA
      z4PLJdFud+l12hiWzXRyBhHnTvAodZPg8Vpvjei0QoxWNwkezxsAY9VcmTk6xLRtyvkjmj2V
      Wq1F5vgYy4ZarUat5iyJdLhcxqq2V8wc4ArFKe3v4F0LoJUboJ+g4kZtlQGIRqMjdulwnRir
      K0BkOkn56Bluf+Sjx9yBKaxuBcOauJmawwQwVleAUGQKiSrxRIyu4MaMBpFlm7DPxV6uTjTg
      nBDjcLk4SfAV6ZwkeLS6a90K0e3r/J9vbg+sG/SUyI/rEhE/P/PW8sB6h/HlSgLgG3/yB9x6
      72fIPvkm7sQaRruCpXYoNA3mkxF6mkkylaZeb5AKKzRNN8cvniLJCkszMTTRRyZXIplMoHWb
      3Lx5k52d0yORbt68Saev81t/9PgqrH8qd5YTTgBcM64kCZ6em6N0fICJjGjbWIisrq6wsLRC
      cjqGoWvYnH6znp4rdnp+l2mBiI3kCeCVLCzLptuqsbW1RaPT/2ha4eBwWVxJAAiim141Rzjx
      ox2bpmnh93uoVhv0WlVeZIr4fW4kWcYlgWZaGLqB2+enXqvi8YfZ3Nwk6FU+YSQHh8/GlSTB
      r76pBUE4Pen35Zpa+3RAjJfJiW1ZWDZIkohhGAiiiCQKgIBhGB8luqIo/lBS2Wj3+G9/PPhB
      2ZZtIQ5wSuTHdel4kJ97f+N8GicJHqnuWrdC6IaBqg0+HTJMA1m6wBtwAZ1lvwyAAQNumB4v
      qrvssQK+T7+6X7sqULdepKK68Yoafq+bviVTzh2CEiDmlymcVFlYvUGvmkMKxBH7FTQljqC3
      SSQSVBrX55RIB/jdf/W3Rjb2SAKg3+uRyZWI+mWkWJCaCrVmj1t3Vsg+3yEUnyXgkck2W9Ax
      CLptSqVDFMkmkUiMwrLDNWVkrRBLcwkOMyUAJJePO5s32Hn8mKUbt3DpZXae7VM4aZDLF7AR
      mJ0OkztpjMquwzVlJFcAXzCK1x1kfbmF1x9GsOD46Ih4epZmuUi1DYlkmMWlBaxunT4SkVCY
      5XZvFHYdrjETmQSbpolwgTu6pmEgXaAKcRGdbVnYDF4FGqbHi+oue6yzjryd6CRYV/v0VJ1A
      IIBpqGiGjc/rxjRtZFmk3WxhixI+j0Knp+JRZHp9FUl24fe60QwLt0ui2WqjuL143C7gYucE
      W4IwNJ0lCAgM7nOYHi+qG7bHq+TKA+DpzjbhSIRsLke30yHoFglMJal3TTZXp9nZ2WV2aZGj
      F88IhKIEQiG2Hj9m/dYd1Hqe7XyPn9hM8fBpHo9k8fbn7l21ZYfXiCtPgm3LoNlq4xJtwtOz
      rN9apn7y/ZVd/W6HTrdPOpmgXKkguv3E43ES8RgHuRPo1lAtaDcqCC6nHdrhcrnyK4DbH2Zj
      YwPb0nnw4UM+LFksrqzweOsZ+ZALSZawLItuX8clgqrpyC4ZLBVvIMb6so9svs7y2g2MVhnV
      tCazhdVhLJnYJNhZDzA63SR4HJsk+CowTIsX+frAOtO0kD52TKosSSynIz9G4XDdGVoAbD/+
      EN0SWFhc5ujwAEnxMRNxc3hSJxSJo5gd6m2N5dUlDvb2CMSSSLbO7Ows2WyWRqWE6A5x4+Ya
      tVaff/wbf3gpvqZCXn7z1/7mpTyXw+QxtDvBJjLzySAPHj1leWOTiNSnUOmSXl6m327Sbrdw
      +wJ0SsdMLd5kcTZJ9vA529vbnNSatDttEMXxWsXvMPEM7fPUa9dp6l5uLkRotLu0ezpuyWL7
      wQe4/BHml9YJ0OGko9NqNNE0jWB0mlu3buGWIJ6c5dbGyrDsOrwmDG0KdGPzLqFQCNu2yBzu
      E55ZIuKRmdu4QbtWp99p0ra93Ly5QDF7SKUhMjc3B8Dc3By1kzzbO3vcuLmGJAoko/6BPdjA
      x2/DRIPez/7HOUwsThXoinROFWi0urGvAlmWzuGLQyKJNAFFQDXA4/di9XsYFig+L3qnBYoP
      tA4oAWxDxefzjcqywzVkZAFgak36ppvMwQsSYQldidKvq5itPF4EwjdukDt4jga6jmgAAAYm
      SURBVOSN4Re7lLoKbkFlc3NzVJYdriEjLKrYHO1uYch+REAJpdCaGWxRQRLANlXyxRqZbAZE
      hYgXah1tdHYdriUjCwBBdHH7zbfxixrIXlyigAeL0HQKxeujV69z75332VyaxXJ5SM8tYOvO
      ebwOl4uTBF+RzkmCR6sb+yT4s6BqBt/dHfzQbMu0EKULbItyAZ1t22CDIA7Yaz8Ej29tzODz
      uAYe4zoysgCol7IclmokErMcPnvM597/Ek+/+w2SN+7Tye8ghVcRWlmqmknQH6LXKFHr2rz1
      1ls0uxr/5re+MSrrE8+//0d/FZ8nPGobY8HIAkAUBHTdxONxEw66yeWL9PoqhqGhEoB6DsXQ
      CEanMPomq8uL5Bo2XkXEWRrvcFmMLAmW3D5WFuc4ONhH8Uc5ebFFLD1Pt16iUmtQqdTQLIFO
      s4bb62fiEhWHiWBkVwCP10u9WGZz8yaYBqn0DG7FhabrLC2tYxsqumHh8Z6ePun2uJn1nIaB
      IovcW00OPKb9covGoen40daLKxtrAJ1HmcjU70pwqkBXpHOqQKPVjW0VqFktkSs3WZpLogse
      BK0DWBxkCkynZklE/GSLJ8zOJHm+s4PoizAzFcRWvKidNpGIs3jF4fIYcg5gs/t8n/m5WYx2
      hVJT5aSQo1atkV5ZJ3t0QKuS4/lhAds20SwZmlVK1ROafZ1cLjdcuw7XnqEnwXfvvsHu1kNq
      HRWs08MxsHVe7O3h8vh4cZjFZ9c5PGlTyuxz3OwTEARs55RIhytg6FOgfDaD5A4QTS1wuPsM
      0RMkHvRQ6dbxuBX84UVm0ily+Rwbd+4h2ypSKEZ5fw+XPzRsuw7XnIlMgg3DuFCl5KLJ80V0
      p0c/2YNvjThEjxfVTYLH8+omsh4mCMKFXhBgaLqLVoEuMtYodOPu8dX3+rUMgIt8qIatu8gV
      6qJjDVs3CR7Pq5vIKZCDw2UxkVcAgFalwN5xntTcCun4pzd2VYpZMuU2d1bTPNh6TmQ6zcp8
      6lM1pq7ybHcXA4WoT+Ck1mHj9l38yqd/q2jdJs/2j3B5gshGm6YKd+9svjz878djmzpf//pf
      8Pl37vBk68W5PAJsP/oQWwkyF/fz/KhAcm6JmelPv1di2zZ7O08QPGFCikmuVGVx4w5R/6ef
      1VU7yZMrFBG8UehWMV0B7txaP/Nud2Z/l2qzTWJmkWL2EE9wio3VhU/VWabG40dPQPGTCivn
      8qh2m3zw8Clvv/sWe1uP0XEzE/dzlD9hbukG05EfXU47sdvs5MsN7t+7T7NSPPN3o9NpXIJJ
      8bjA+v376N2z2+lEWWFhNo0oinRUi82NeU5K1TN1Lm8Qt2hhmioGPmZDXpqacabu6GAffyBI
      YQCPp9ho/R7FcoPb9+7QqpXPVFhmm0y2SrfTptJWuXfvBqVc6UxddDpNLOgnnQ4ie5KERAv1
      HA5VVcUyNConJyQXNxCMsw86sfUOpuhHbVQpntOjyxMgFvJjal0k/xQRn8jxSZv7d9+gdvLJ
      95AmNgDcks1J5QRLPPv8YNM00DQNn0+mVCijGWfP+ky1ze5hkdWVRUxdo1KuoHjP3kJF7XVI
      zS/TbbfR1Db1Thf3Ofr0NU2lXMyim/q5PYLJdGoej61jCRaVcgVLOLvPXxAVIlMRPIKBruuU
      S2Vk79mbDdiWTq1nE/EF6PdqtFSN86wq6PQ1lpZmUXt96rUK6jm+EER3hNSUB0t04TJ1yqWT
      sz3aFrquY9oC/XaTVqePR7Iol09A/uT3bmJzANs2yWbypGdnz5xelItZGu0+ifQc3foJ4ek0
      HtenVwcMvc/xURbZ4ycVD3FS6zCTmj7Tl2VoHB1nmUrOIFt9WqpNYup87Ru9bhe318tJPnsu
      jwCNSom+7SIRC5HL5UnOzCKfYxFOq16hb8lMhbzkihVmZ1JnJu6WoaGaIl63TLN6gin7iIbO
      3p9J63fIlWrMz89SKxXwhKYInHHwuW3bFHLHBGNJfC7IFatneuy26uRLFfyhKH6XjS64iQTc
      5PIlZmZn+aSXZWIDwMHhMpjYKZCDw2XgBIDDa40TAA6vNU4AOLzWOAHg8FrjBIDDa40TAA6v
      NU4AOLzW/H9/7m97dC0LSAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Electric Vehicle Type distributon Electric Range' width='192'>
      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
      JAD+P5TXA1jeoHz6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Electric Vehicle Type vs Count' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Make vs Count Bottom 10' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Make vs Count Top 10' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Percentage Acquired by each Make in Circles' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Make distribution count per top 10 City' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAVKElEQVR4nO3dSWwk2Z3f8W9E7vu+cCerWGQXq7q6qkttqbuF6YE0hmwNhJmBMRdLsI05
      jGH44oMvPlln+2D4YPjgow1IAxg+aKCB4B63x+PpVlvqGXXtXItMJrOYzI2ZzI25RIQP1V0S
      RRXFJCuSyYr/58JiRsZ7L1nxy3gR8V6EYhiGgRAWpV50A4S4SBIAYWkSAHFp/OKTjyg1+qze
      /xnr2dKL11dWVs5cpv1VNEyIYdjZzVI1HlJ7+lOcMy72d5bp2gPsZlbROk3arSa1jp3f/eDd
      U3+zSwDEpWHzxNGqqzgDabR2le1KnXrzGfpBllVfhNzKA2689Q59wHnKMiUA4tK4enUeo90g
      kIxRbxrkd7aZmJoi4L5BxGenGPfSVfwD9esVM0+D6rqOqsphhhhdpm6dcolBjDr5ehaWJgEQ
      liYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYm
      ARCWdqopkZXCM7LFOjcXZniyvEo0NcFhrUCtqTE/l2JjM0c8nqSws4nui/HW0iIOm2J224U4
      t1NNidQ0jZWVFZI+hbWSRjwaQu+2SPvgSVnhzo15tjbWSXgUOpEZ0n4Huq6jaZpMiRQj7ZST
      4g00TcPhCRGNu+g0Shi6RlmDsNfN/n4FDTugAaAoCjabDeDFTyFG0akCUC7kcblcKL4k4X4R
      z9w8Dr1NtaVzJREmm93h2vws9Dr47XKjCXF5mHpXCE3TZA8gRpp00IWlSQCEpUkAhKVJAISl
      SQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKWdavZKrbLHTrHB
      jcWrFHe3qPc92PsHVJsa12ZTrG5sk0ql2c1uYngivHl9QeYEi0vhVAHw+CMo+TL9boty4xC9
      p2Gz6UyFFB5sFrl14yaZjafMpGJ0IjPY1eeTYTRNkydFipF2qgA4nc+fu10rl+h2OhSLVZIJ
      P402eB0OWq0WmqEAzzd2mRMsLotTBSC/s/V8emMgwa2xCWq1NorWZr+lsTQWY/PpFnNX5rD1
      23gcMidYXB4yJ1hYmpwFEpYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYm
      ARCWJgEQliYBEJYmARCWJgEQlnaq2SulfJbtQp1b16ZY3sigODw49Ra1ls78XIrNzC6RaJxS
      bhPdn+TODXlOsLgcThWAeHqKQuUxdo+fdDxM9RD0rsZCGh5tH3D31m22Nta4Mjkmc4LFpXKq
      ALSadRqNBtVijsxeg8X5GbY2SuTaBslQgFwui644gR4gc4LF5XGqKZG1/TLNdge/30+j0cDl
      9RNw2Wh2DSJBL6VyhXA0hqL1MFQH9i+6PzIlUow6mRMsLE3OAglLkwAIS5MACEuTAAhLkwAI
      S5MACEuTAAhLkwAIS5MACEs7EgDDMFheXqbf7/HkyfJFtUmIoTkSgF6ryl//1Uf8+C9+gm73
      XFSbhBiaIwFw+iLcvnOX73zn92lUChfVJiGG5tgxwETMx5/98IfYfNGLaI8QQ3UsANu5XZqt
      Jnv5ZxfRHiGG6tiEmPjYNIuahu71XUR7hBiqYwFo1SrcevebBN2/XLRf3CVbrLN0dZyHT9YJ
      x9IYh/tUWzrXZlOsb+4QT6Qo7DxF98Z4a0nmBIvL4ciEmG6nw8r9n/GLlW3mr9/mvbs3AOj3
      +6yurpL0O1DiVyll1wBI+2C5onB7aZ6tjXUSHoVOZIa034Gu62iahqrKpQYxuo7sAR589jc0
      DC/Xrl4hGgm+eN2mqhiGgcPlYL9WpdvTwNCo6AZBt4tarYpm2AAdkDnB4vI4EgCn28f85Dwu
      Gzjd3hevF3Z3nm/IvhSOyh7zC4sYnQOqLZ25ZJhMJsv8tTmU3iE+uzwnWFweR7pAz7ssNpRX
      1H2XOcFi1B35urbZbDx++IBaJU/bHuMb7719Ue0SYiiOHaF2GmUOdB8Rr3xzi9ffsQC4XC4O
      ijtU2/pFtEeIoTp2xJpIT3HDGSBXqF5Ee4QYquNdoMMWjYMas1cXLqI9QgzVsT3Adi7P/n6F
      alvn2nTyItokxNAcC8DMeAJvdIywz30R7RFiqI51gXI7O2TWHlOoNi+iPUIM1fGzQE471doB
      nU73ItojxFAdC0BPV4iPTeGx9S+iPUIM1bEABAMB8plVWprjItojxFAdGQu0vbFCbGoerx2e
      rKyxdP2NcxUuY4HEqDtyFsjoNfnkpz8j4VepHNpYuqhWCTEkx54Qs/dsm/qhwZW5GdRzjgqV
      PYAYdUf2AN32AY8er6DpBu5AmMlE6MibDUOnXCzgC8dRtQ7Njk405KNYLBEOhygUSyiqjVQq
      he286RFiCI4EYPnBPWaX7pD0q3zy88+Z/OYHR958UMhQbDrJ7i5jVzQcGFT8fuwON6XNHbxa
      nW546pXNJxDCbEcC8MbNW/z133zKugGLb71z7M02h5tGJY/L68Nlfz4n+FFJ5+7NCbY21gj4
      fXQCARTkOcHicjgSgO31J+R289x+75vsbq0yk/7akTcbuoHd6cBms6HobdbyGtfn0jy6/znx
      9DQ2pYlDVWROsLg0jp4GXbkP0Rk2PvuI3UMP//iP/sG5CpeDYDHqjlwIS4yN8fkn/4dWX+Xu
      23cuqk1CDM2RLtDa8jI3vvIuKb/Kx589ZHEmdVHtEmIojnSB+p0GH/7l/8bjD7GwdIvxRPhc
      hUsXSIy6I12gtcf36fX7uCPjbG/IAzLE6+9IAMLhKG+//02Uyjo7ZZkPIF5/x4ZCfMkwDJRz
      XtGSLpAYdS+9c+15N34hLgO5dbOwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsLQBH+hl
      0Dk8RLE5sCkGPc3A7XTQbrdxuZy02oegKHi9XlS5kCYugYECcFivsJopMj4+Rj67Qb+nE03F
      aDQ7qKqDfjVPLzzJm/PT576jhBDD8NKxQL9JYfMhT6sqThX8HjtpPzwqwN03r7G1sUbcLc8J
      FpfLQHuAcHICW/kpTk8IvdtgZUdjfjbNw/ufE4mPo6otbIo8J1hcHgPtAQYlo0HFqJP+ibA0
      CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmA
      sLQB5wRDr92g2bfhpEO1rTGeiLC9nSWVSrCVyaLY7MzNXcFhkzmRYvQNFADD0FnbXMMgiK41
      8dthuVomEo2xsbVLwg3dyAR22a+IS2KgAJSy61QOOnTaRSbGI0R98KQCc+EI1XIZm6q+mAMs
      zwkWl8EZpkR2yWRK6N0a1dbzOcEbmzskx2cJ0KTnTxL1OgCZEilGn8wJFpYmvXVhaRIAYWkS
      AGFpEgBhaQNfCBNiVD3aLPDTRzsDrSMBEK+Nzd0qf/7J6kDrSBdIWJrsAcRr4w3nNv/E/5OB
      1pEAiNfGtG2PlOezgdaRAIjXRq8WoLE6M9A6EgDx2uh3PbTq0YHWkbFA4rXxcWaTHz15ONA6
      sgcQrw3d6NLr1wZaxxIBePpsn91yw5Sy58bCjMcDppQtBtNqr5Ov/PeB1rFEAD787Cl/8ema
      KWX/ybfv8AdfXzSlbGG+AadEGlQrJVz+MHajR6urEw54KZcrBEMByuV9UFQSiQS2EXpO6vf8
      /5M/jv/QlLK9nn8NSABGwU2/zj+f6A20zkAB0A6bNLsamZUV7PRRDYNyMIiq2imUa7h6NXrh
      KZIDNcF83Z0Ezc+vmVK2YymC25SSxaC8XT/p2uRA6wwUAJvLQ7u6xfjkNNVSnrQPHhU17r55
      ha2NNcLBAJ1QCEUZrTnBny3e4J7qMKXs35ma4e1+35SyxWDK+STLf/v+QOsMFIB6aYfCQQ9n
      sI2idVjNa7wxm+bR/c+JpaawKU3sqjJyzwluBvwU44OdHz6tjs+L3W6JQ6mRNx6wE0gP9n8x
      0LuDyRneT35xpW0i9eL1SCz9xb/iA1UuxKvktSt4fYON7xzaV1eueMC//+EnppSdivr5N9/9
      +kuXHzTvka98ZErdzUMXcNWUsoX5hhaAbl9jc7dqStm9vn7i8vdDda6O5U2pe87XNKVcMRxD
      C8CErch/iv0HU8q2h2eBb790ubM4i2fta+bUHR+DqZcv36+3TakXIOx3oyijc7r5Mhre0duh
      Ax6Om1K0Mp46cfmUmmTKvmBK3SiRExf/6b/7ET1NM6XqH/zbP8bjMufs1nmsZss02l1Tyr42
      GSXgdZ3y3QZ7lQLrtTZfm53B9mtfFoZhDC8AVZ+XP3v3q6aUHYvE+GemlHx+/8X7HzE0czYG
      N38IjF4AVj76b+S3N0wpO/W9f0lg7rQXHg0+Wt3gW2/eotGs8fNMlrfnrnI/s0E6luTHn306
      vAC0lRZ/6/7UlLInnINd/Bim/xH9HrpJe4B/qthHcPOHO80ihwc5U8qO9DsDvFvh9xbn+cn9
      e9jt4HV6WH62w0G3TzaT5c2ZueEFIKba+Rdec06Tet0nd0OOM/j4yX1aqpe/v3j8CnGxfkDM
      52a/rdM7rOIOJAg7z3Y94+G4Sl8352Kgpo7i9z/8+dvfYnPuK6aU/afRMeZP/W6D9UIBv8fL
      YiLCarlG3Ouh2GoT93sIqN3hBUBr+6j84ndMKbubCMG3BlmjT6ZywNdvXmUtt8VKsczt2Vke
      ZrNEAkH+6vEDPliY4eOndT64GsXfV/lp8RljsQlujyUGapu38yF9fbDxKaelGH9iSrnnpbZ+
      jFp/bE7h/TngtP8HKu8u3nzx2+LE858L4788azG0AASdCv9w1pzvKyUyaLk2vn37bT588DmN
      fptkIEK2UKTR71Hdb/DW9Cx3piZpa2286gFbuS0Khp2UPviQh+8qkxiYM1TCzmieAfpHETtd
      k4aexJyv9jMPLQAK4DTrqTED39zF4PHOJlNj01wNuriXLzOXTNDOw2QszmGzQqnrwq7vEYqk
      +Fpqlr/bWifuH3zc/1TlPdBOvk5xVqpx8cNMfpPu2gcc5q6bUrZ+JQmD9nhPcKGDWO5vrvCs
      0eKtK0uM+Y6e2npa3GMunmSzVGAuluCz7QzvzM69opptvPcru8bfizwfv5oOx56/kHh+rDJx
      fenFe76xdOtMNfkdCpgV/NHcATDuUyFkUjhf8RZ7oQHQdY0+DozOPv/503ukUzME+vusNHRc
      3QNuzi7y8epDvnP3faqtBj/4vx+yp7n4V79rzrGEsJ5zB8DQ+2w+3SI9lmJzK4Nic3Ht2vyp
      HpKXjKZI+Pf58MkG4UiahXiQR1slup0Oi6kxrk9MUqlXmQoFyBQ1mn0bf292euA2aoaOfob+
      +2mohs4odkT6mk6vb87pV5uq4nSM3qfebVV4mn800DrnDsDO1gahxBhb2T3GAi46kZlTPyHS
      Z1dZPXDy3XffZWM3S8gf4e7MDF9x+Zn0uVivVvnq7AzFVod3Zhd4a6xBuTf43Rz/X2GZJ6v/
      a+D1TuOrCwluYk5/9zxyj/6On//oB6aUPXXjDl/9o++ZUvZ5VDp1lqvZgdY5dwA0XcHv81FS
      dAbtlIYCEd4JPD+iWZz4Ypi1/5enqJZSXgBiX77g9Z5ptpkrGMWfnj3Dmr+dwxc8cfl/XftL
      NJMmzHxX/0McL7kSoPoUXNPm3PrVHjt5eaN3iNY1Z5CgT9dfutF6Iinib7wzUHnnDkA6FWf5
      4UPSU3M4jSbKS56R2ux3uFdcOW91v5FHj3PnhOW++DjRq2+aUrc7fPLFveDcDdOuBCvKyzfw
      KSPKVP+uKfWindwN/bS5Q6G2ZUrV39BapF+yzO724o29bOlL1jlvg9yBKG/d/nK21cu/DXW3
      m+YbN1+6/FzOcHpyWHypaQzdnNOgnHDjgT2jy7K+b0q1CWIsnbA8NL2I4Tfnqr/De/Ied1Cm
      3BnOMAx0XUfX9RfPDTYMw9T5wV/WAxyp1+y6FUU5MiT51+vWzdr44dhn/LI9X/5u2mcGlBP+
      3mZ+5pP+3mf5zKbeGvHX/zDDclH1XmTdvx6AYbrMf29TA3Bahdw2xWqdWGqCWnGX+Teuk1t/
      gD04QSgc4Nn2FteuTFKo9kjGBt8FGobOxsoT7P4YHodCKpWiUChQK+/RU9zEokESiRSlYoF6
      tUS7B/MLC+xm1mn1FK5dneag3iUedHL/yTq+UBTlsEK53ueNpRsEvM7BP/OzDIX9FjNzs+Q2
      11HcAabjXpYzBeLxJEqvTq3eZvLKAqEzlP/b7Od3MTxOcpldosk0nYMiHV0lFQmQLe4Ti6eY
      TJvTjel32jS7Bq16FdVmJ5VKsLaywuz84qnPIJ6K1mPlaZb5qTj7HRvaYQu926BcP2R2apyt
      THY0nhBTrzfwBbxU96s0qwVK+wcUc9t0dZ1nz/Ls7+XZzu2h2842vqS+t4kjNsfMRIpcNkMu
      l2N3r0jrsEMoHELpNKkc1Kns1+n0YToZYjeX4VAJMpsMsLWTp1KtQ/+QjmEn6Pcxd2UaXyhx
      po0foFat4guEqD/bJDi1SEDtkC+USExdo14tc9DssHTjBjtb62cq/7c5KBWpNuvYXV58XjfN
      9iGhUIjOQZXx+evUygVT6gXo99osP7xHz+amXC6h9zu061VyxcHu6/lb6T32i7vsFcvsN9qU
      y2WKxRKJZJpOrYTu8I1GABTVht8fQOv3CMVT7G48xhdJYPdGOcg/ZWphgY2NHNHA2W5Bpagq
      /X4fXdex2R34fD5URcHhdOHzekiMpXn66B7BeIpGtcTPH6yTiofRNY2+1kf5lYNNt8eDx33+
      b2RFVfH5fDgcNrR+H03TUTB48LOPsfmfn1QwdA1OONNzVoZh0EfBoah4vF6cTgd2hxOf14uC
      xsbKCuNTs6+83l/ldLro9Z5PFCrtbNFUPOR3Mq+8nsTELOXcFl90EFlcukltL0PXk2Q2FcT2
      /e9///uvvNYBab1D9ooVEulxAn4fDqeLsbEUTpcXO5Acm8Cm6kSjkTMNf3F6QxzsZWh0dWKR
      MNFoFLtNpd9pUT1oE0uk0Pp9xsfTeH1+rl2ZpNFVsffr7LcM5qbH2MtlUZxeWgf7dDSIhIKo
      Ngdez2mn5x2lqnZCkQj+cIRS9im6K8h4MsrElUXUbh2XQyW3W2DmylWc9ld71bW+X6LeVxmP
      hcjv5sHmxKZ3qNQahGMJJqZnCHrMnGmgEIzGseldfP4AqtPL4vwVPC4HHq/3lQ5xUm12QgEf
      Tl8Qv9vJwX6Rju4kFnSx82yP/w80KdPQs32qHgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 Make distribution count per top 10 County' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Model with Highest Electric Range' width='192'>
      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
      gFsAKoAQwO4t61WP4dq9tA+mqGEA5I4QAvt2tKoewzXLEZjytDAAcm9L6xo0rq7Oi2IOBKK5
      EAMg97wegW/v3KB6DNciaGUA5J4QAm/t3QSPqM7zQRNZPhBDBWpeE8KuLU2qx3CFWwAqmEcI
      fP9b21SP4cp0iu8JpiJ4+fkmbG5pUD1G3ix4GAAVzvB68P6bO1SPkTdH8kXZVCR7tjbjxY1r
      VY+RNwZARWF4Pfj593ZV3RkhBkBFs7VtDb6z5xuqx8gLA6Ci8QiBn739ClaHalSP8swYABVV
      fV0Av3pvj+oxnhkDoKISQuD1l9pwYO8m1aM8EwZARefxCPzi3d1V8bwAA6CSqKvx49c/eR11
      NT7VoyyLAVBJCAFsbKrHBz/eB8NbuatZ5U5GXwuvvfAcfvnublTq5QEGQCUlhMA7+zbjpwde
      Vj3KYzEAKjmPEPjhGy/i/Td3VNw3SfCLsahsHEfi2KUBHD7XD6dCVjsGQGUlpcS5nhF81N6H
      nKX+XWMMgMpOSuBqeBIfHunEwlJW6SwMgJSJxhL4wz86EJ6IK5uBAZBSmZyFw+eu40RHGLZT
      /lWRAZByUkpcDd/DwfY+RGKJsi6bAVDFSGZyOPLZAE52hpHJWWVZJgOginN3egF/P/8Fugci
      sGynpMtiAFSRpJQIT8Rx5LOb6AtPwrRKEwIDoIompcTY1AJOdd3G5/13sZgq7mlTBkBVI5HK
      outmBJeuj2FofLYoxwkMgKqOlEBsIYn+kWn03prEzTszWExmXR0vMACqeqZlIxpLYDg6h9HJ
      eYzdm8fk7BKSmRxMy4HlOHCecI2BAdDXkpQSybSJxVQWqYyJVNaEadn3D6YF4PN6UBPwMQDS
      G58HIK0xANIaAyCtMQDSGgMgrTEA0hoDIK0xANIaAyCtMQDSGgMgrTEA0hoDIK0xANIaAyCt
      MQDSGgMgrTEA0hoDIK0xANIaAyCtMQDSGgMgrTEA0hoDIK0xANIaAyCtMQDSGgMgrTEA0hoD
      IK0xANIaAyCtMQDSGgMgrTEA0hoDIK0xANIaAyCtMQDSGgMgrTEA0hoDIK0xANIaAyCt/R+J
      Q0T03JrQyQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 5 car Make per year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Year Bins of 5 top 5 car make' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Year vs Count' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
